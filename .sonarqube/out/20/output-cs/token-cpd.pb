ıí
UC:\ProgramData\Jenkins\.jenkins\workspace\GamePipeline\Projects\Helicopter\Program.cs
TimeSpan 
threadSleepTimeSpan	 
= 
TimeSpan '
.' (
FromMilliseconds( 8
(8 9
$num9 ;
); <
;< =
TimeSpan 
helicopterTimeSpan	 
= 
TimeSpan &
.& '
FromMilliseconds' 7
(7 8
$num8 :
): ;
;; <
TimeSpan 
ufoMovementTimeSpan	 
= 
TimeSpan '
.' (
FromMilliseconds( 8
(8 9
$num9 <
)< =
;= >
TimeSpan		 
enemySpawnTimeSpan			 
=		 
TimeSpan		 &
.		& '
FromSeconds		' 2
(		2 3
$num		3 7
)		7 8
;		8 9
List 
< 
UFO 
> 	
ufos
 
= 
new 
( 
) 
; 
List 
< 
Bullet 
> 
bullets 
= 
new 
( 
) 
; 
List 
< 
	Explosion 
> 

explosions 
= 
new  
(  !
)! "
;" #
	Stopwatch 	
stopwatchGame
 
= 
new 
( 
) 
;  
	Stopwatch 	
stopwatchUFOSpawn
 
= 
new !
(! "
)" #
;# $
	Stopwatch 	
stopwatchHelicopter
 
= 
new  #
(# $
)$ %
;% &
	Stopwatch 	
stopwatchUFO
 
= 
new 
( 
) 
; 
Random 
random 
= 
new 
( 
) 
; 
int 
score 	
=
 
$num 
; 
bool 
bulletFrame 
= 
default 
; 
bool 
helicopterRender 
= 
default 
;  
string 
[ 
] 
bulletRenders	 
= 
new 
string #
[# $
]$ %
{ 
$str 
, 
$str 
, 
$str 
, 
$str 
, 
}   
;   
string"" 
["" 
]"" 
helicopterRenders""	 
="" 
new""  
string""! '
[""' (
]""( )
{## 
$str%% 
+%% 
$char%% 
+%% 
$str&& 
+&& 
$char&& 
+&& 
$str'' 
,'' 
$str)) 
+)) 
$char)) 
+)) 
$str** 
+** 
$char** 
+** 
$str++ 
,++ 
$str-- 
+-- 
$char-- 
+-- 
$str.. 
+.. 
$char.. 
+.. 
$str// 
,// 
}00 
;00 
string22 
[22 
]22 

ufoRenders22	 
=22 
new22 
string22  
[22  !
]22! "
{33 
$str55 
+55 
$char55 
+55 
$str66 
,66 
$str88 
+88 
$char88 
+88 
$str99 
+99 
$char99 
+99 
$str:: 
,:: 
$str<< 
+<< 
$char<< 
+<< 
$str== 
+== 
$char== 
+== 
$str>> 
,>> 
$str@@ 
+@@ 
$char@@ 
+@@ 
$strAA 
+AA 
$charAA 
+AA 
$strBB 
,BB 
$strDD 	
+DD
 
$charDD 
+DD 
$strEE 	
+EE
 
$charEE 
+EE 
$strFF 	
,FF	 

}GG 
;GG 
stringII 
[II 
]II 
explosionRendersII	 
=II 
newII 
stringII  &
[II& '
]II' (
{JJ 
$strLL 
+LL 
$charLL 
+LL 
$strMM 
+MM 
$charMM 
+MM 
$strNN 
+NN 
$charNN 
+NN 
$strOO 
+OO 
$charOO 
+OO 
$strPP 
,PP 
$strRR 
+RR 
$charRR 
+RR 
$strSS 
+SS 
$charSS 
+SS 
$strTT 
+TT 
$charTT 
+TT 
$strUU 
+UU 
$charUU 
+UU 
$strVV 
,VV 
$strXX 
+XX 
$charXX 
+XX 
$strYY 
+YY 
$charYY 
+YY 
$strZZ 
+ZZ 
$charZZ 
+ZZ 
$str[[ 
+[[ 
$char[[ 
+[[ 
$str\\ 
,\\ 
$str^^ 
+^^ 
$char^^ 
+^^ 
$str__ 
+__ 
$char__ 
+__ 
$str`` 
+`` 
$char`` 
+`` 
$straa 
+aa 
$charaa 
+aa 
$strbb 
,bb 
$strdd 
+dd 
$chardd 
+dd 
$stree 
+ee 
$charee 
+ee 
$strff 
+ff 
$charff 
+ff 
$strgg 
+gg 
$chargg 
+gg 
$strhh 
,hh 
$strjj 
+jj 
$charjj 
+jj 
$strkk 
+kk 
$charkk 
+kk 
$strll 
+ll 
$charll 
+ll 
$strmm 
+mm 
$charmm 
+mm 
$strnn 
,nn 
$strpp 
+pp 
$charpp 
+pp 
$strqq 
+qq 
$charqq 
+qq 
$strrr 
+rr 
$charrr 
+rr 
$strss 
+ss 
$charss 
+ss 
$strtt 
,tt 
$strvv 
+vv 
$charvv 
+vv 
$strww 
+ww 
$charww 
+ww 
$strxx 
+xx 
$charxx 
+xx 
$stryy 
+yy 
$charyy 
+yy 
$strzz 
,zz 
}{{ 
;{{ 
Console 
. 
Clear 
( 
) 
; 
ifÄÄ 
(
ÄÄ 
OperatingSystem
ÄÄ 
.
ÄÄ 
	IsWindows
ÄÄ 
(
ÄÄ 
)
ÄÄ 
)
ÄÄ  
{ÅÅ 
Console
ÇÇ 
.
ÇÇ 	
WindowWidth
ÇÇ	 
=
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
Console
ÉÉ 
.
ÉÉ 	
WindowHeight
ÉÉ	 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
}ÑÑ 
intÜÜ 
height
ÜÜ 

=
ÜÜ 
Console
ÜÜ 
.
ÜÜ 
WindowHeight
ÜÜ !
;
ÜÜ! "
intáá 
width
áá 	
=
áá
 
Console
áá 
.
áá 
WindowWidth
áá 
;
áá  
Playeràà 
player
àà 
=
àà 
new
àà 
(
àà 
)
àà 
{
àà 
Left
àà 
=
àà 
$num
àà  
,
àà  !
Top
àà" %
=
àà& '
height
àà( .
/
àà/ 0
$num
àà1 2
,
àà2 3
}
àà4 5
;
àà5 6
Consoleää 
.
ää 
CursorVisible
ää 
=
ää 
false
ää 
;
ää 
stopwatchGameãã 
.
ãã 
Restart
ãã 
(
ãã 
)
ãã 
;
ãã 
stopwatchUFOSpawnåå 
.
åå 
Restart
åå 
(
åå 
)
åå 
;
åå 
stopwatchHelicopterçç 
.
çç 
Restart
çç 
(
çç 
)
çç 
;
çç 
stopwatchUFOéé 
.
éé 
Restart
éé 
(
éé 
)
éé 
;
éé 
whileèè 
(
èè 
true
èè 
)
èè 
{êê 
if
ìì 
(
ìì 
height
ìì 
!=
ìì 
Console
ìì 
.
ìì 
WindowHeight
ìì #
||
ìì$ &
width
ìì' ,
!=
ìì- /
Console
ìì0 7
.
ìì7 8
WindowWidth
ìì8 C
)
ììC D
{
îî 
Console
ïï 	
.
ïï	 

Clear
ïï
 
(
ïï 
)
ïï 
;
ïï 
Console
ññ 	
.
ññ	 

Write
ññ
 
(
ññ 
$str
ññ <
)
ññ< =
;
ññ= >
return
óó 
;
óó 	
}
òò 
if
ûû 
(
ûû 
stopwatchUFOSpawn
ûû 
.
ûû 
Elapsed
ûû 
>
ûû   
enemySpawnTimeSpan
ûû! 3
)
ûû3 4
{
üü 
ufos
†† 
.
†† 
Add
†† 

(
††
 
new
†† 
UFO
†† 
{
°° 
Health
¢¢ 	
=
¢¢
 
$num
¢¢ 
,
¢¢ 
Frame
££ 
=
££	 

random
££ 
.
££ 
Next
££ 
(
££ 
$num
££ 
)
££ 
,
££ 
Top
§§ 
=
§§ 
random
§§	 
.
§§ 
Next
§§ 
(
§§ 
height
§§ 
-
§§ 
$num
§§ 
)
§§  
,
§§  !
Left
•• 
=
•• 	
width
••
 
,
•• 
}
¶¶ 
)
¶¶ 
;
¶¶ 
stopwatchUFOSpawn
ßß 
.
ßß 
Restart
ßß 
(
ßß 
)
ßß 
;
ßß 
}
®® 
if
™™ 
(
™™ 
stopwatchUFO
™™ 
.
™™ 
Elapsed
™™ 
>
™™ !
ufoMovementTimeSpan
™™ /
)
™™/ 0
{
´´ 
foreach
¨¨ 	
(
¨¨
 
UFO
¨¨ 
ufo
¨¨ 
in
¨¨ 
ufos
¨¨ 
)
¨¨ 
{
≠≠ 
if
ÆÆ 
(
ÆÆ 
ufo
ÆÆ 

.
ÆÆ
 
Left
ÆÆ 
<
ÆÆ 
width
ÆÆ 
)
ÆÆ 
{
ØØ 
Console
∞∞ 
.
∞∞ 
SetCursorPosition
∞∞ 
(
∞∞ 
ufo
∞∞ !
.
∞∞! "
Left
∞∞" &
,
∞∞& '
ufo
∞∞( +
.
∞∞+ ,
Top
∞∞, /
)
∞∞/ 0
;
∞∞0 1
Erase
±± 	
(
±±	 


ufoRenders
±±
 
[
±± 
ufo
±± 
.
±± 
Frame
±± 
]
±± 
)
±±  
;
±±  !
}
≤≤ 
ufo
≥≥ 
.
≥≥ 
Left
≥≥ 
--
≥≥ 
;
≥≥ 
if
¥¥ 
(
¥¥ 
ufo
¥¥ 

.
¥¥
 
Left
¥¥ 
<=
¥¥ 
$num
¥¥ 
)
¥¥ 
{
µµ 
Console
∂∂ 
.
∂∂ 
Clear
∂∂ 
(
∂∂ 
)
∂∂ 
;
∂∂ 
Console
∑∑ 
.
∑∑ 
Write
∑∑ 
(
∑∑ 
$str
∑∑ &
+
∑∑' (
score
∑∑) .
+
∑∑/ 0
$str
∑∑1 4
)
∑∑4 5
;
∑∑5 6
return
∏∏ 

;
∏∏
 
}
ππ 
}
∫∫ 
stopwatchUFO
ªª 
.
ªª 
Restart
ªª 
(
ªª 
)
ªª 
;
ªª 
}
ºº 
bool
¬¬ "
playerRenderRequired
¬¬ 
=
¬¬ 
false
¬¬ "
;
¬¬" #
if
√√ 
(
√√ 
Console
√√ 
.
√√ 
KeyAvailable
√√ 
)
√√ 
{
ƒƒ 
switch
≈≈ 
(
≈≈	 

Console
≈≈
 
.
≈≈ 
ReadKey
≈≈ 
(
≈≈ 
true
≈≈ 
)
≈≈ 
.
≈≈  
Key
≈≈  #
)
≈≈# $
{
∆∆ 
case
«« 

ConsoleKey
«« 
.
«« 
UpArrow
«« 
:
«« 
Console
»» 
.
»» 
SetCursorPosition
»» 
(
»» 
player
»» $
.
»»$ %
Left
»»% )
,
»») *
player
»»+ 1
.
»»1 2
Top
»»2 5
)
»»5 6
;
»»6 7
Render
…… 

(
……
 
helicopterRenders
…… 
[
…… 
default
…… $
]
……$ %
,
……% &
true
……' +
)
……+ ,
;
……, -
player
   

.
  
 
Top
   
=
   
Math
   
.
   
Max
   
(
   
player
    
.
    !
Top
  ! $
-
  % &
$num
  ' (
,
  ( )
$num
  * +
)
  + ,
;
  , -"
playerRenderRequired
ÀÀ 
=
ÀÀ 
true
ÀÀ 
;
ÀÀ  
break
ÃÃ 	
;
ÃÃ	 

case
ÕÕ 

ConsoleKey
ÕÕ 
.
ÕÕ 
	DownArrow
ÕÕ 
:
ÕÕ 
Console
ŒŒ 
.
ŒŒ 
SetCursorPosition
ŒŒ 
(
ŒŒ 
player
ŒŒ $
.
ŒŒ$ %
Left
ŒŒ% )
,
ŒŒ) *
player
ŒŒ+ 1
.
ŒŒ1 2
Top
ŒŒ2 5
)
ŒŒ5 6
;
ŒŒ6 7
Render
œœ 

(
œœ
 
helicopterRenders
œœ 
[
œœ 
default
œœ $
]
œœ$ %
,
œœ% &
true
œœ' +
)
œœ+ ,
;
œœ, -
player
–– 

.
––
 
Top
–– 
=
–– 
Math
–– 
.
–– 
Min
–– 
(
–– 
player
––  
.
––  !
Top
––! $
+
––% &
$num
––' (
,
––( )
height
––* 0
-
––1 2
$num
––3 4
)
––4 5
;
––5 6"
playerRenderRequired
—— 
=
—— 
true
—— 
;
——  
break
““ 	
;
““	 

case
”” 

ConsoleKey
”” 
.
”” 

RightArrow
”” 
:
”” 
bullets
‘‘ 
.
‘‘ 
Add
‘‘ 
(
‘‘ 
new
‘‘ 
Bullet
‘‘ 
{
’’ 
Left
÷÷ 	
=
÷÷
 
player
÷÷ 
.
÷÷ 
Left
÷÷ 
+
÷÷ 
$num
÷÷ 
,
÷÷ 
Top
◊◊ 
=
◊◊	 

player
◊◊ 
.
◊◊ 
Top
◊◊ 
+
◊◊ 
$num
◊◊ 
,
◊◊ 
Frame
ÿÿ 

=
ÿÿ 
(
ÿÿ 
bulletFrame
ÿÿ 
=
ÿÿ 
!
ÿÿ 
bulletFrame
ÿÿ (
)
ÿÿ( )
?
ÿÿ* +
$num
ÿÿ, -
:
ÿÿ. /
$num
ÿÿ0 1
,
ÿÿ1 2
}
ŸŸ 
)
ŸŸ 
;
ŸŸ 
break
⁄⁄ 	
;
⁄⁄	 

case
€€ 

ConsoleKey
€€ 
.
€€ 
Escape
€€ 
:
€€ 
Console
‹‹ 
.
‹‹ 
Clear
‹‹ 
(
‹‹ 
)
‹‹ 
;
‹‹ 
Console
›› 
.
›› 
Write
›› 
(
›› 
$str
›› *
)
››* +
;
››+ ,
return
ﬁﬁ 

;
ﬁﬁ
 
}
ﬂﬂ 
}
‡‡ 
while
·· 
(
·· 
Console
·· 
.
·· 
KeyAvailable
·· 
)
·· 
{
‚‚ 
Console
„„ 	
.
„„	 

ReadKey
„„
 
(
„„ 
true
„„ 
)
„„ 
;
„„ 
}
‰‰ 
HashSet
ÍÍ 
<
ÍÍ 	
Bullet
ÍÍ	 
>
ÍÍ 
bulletRemovals
ÍÍ 
=
ÍÍ  !
new
ÍÍ" %
(
ÍÍ% &
)
ÍÍ& '
;
ÍÍ' (
foreach
ÎÎ 
(
ÎÎ	 

Bullet
ÎÎ
 
bullet
ÎÎ 
in
ÎÎ 
bullets
ÎÎ "
)
ÎÎ" #
{
ÏÏ 
Console
ÌÌ 	
.
ÌÌ	 

SetCursorPosition
ÌÌ
 
(
ÌÌ 
bullet
ÌÌ "
.
ÌÌ" #
Left
ÌÌ# '
,
ÌÌ' (
bullet
ÌÌ) /
.
ÌÌ/ 0
Top
ÌÌ0 3
)
ÌÌ3 4
;
ÌÌ4 5
Console
ÓÓ 	
.
ÓÓ	 

Write
ÓÓ
 
(
ÓÓ 
bulletRenders
ÓÓ 
[
ÓÓ 
default
ÓÓ %
]
ÓÓ% &
)
ÓÓ& '
;
ÓÓ' (
bullet
ÔÔ 
.
ÔÔ 	
Left
ÔÔ	 
++
ÔÔ 
;
ÔÔ 
if
 
(
 
bullet
 
.
 
Left
 
>=
 
width
 
||
 
bullet
 $
.
$ %
Frame
% *
is
+ -
$num
. /
)
/ 0
{
ÒÒ 
bulletRemovals
ÚÚ 
.
ÚÚ 
Add
ÚÚ 
(
ÚÚ 
bullet
ÚÚ 
)
ÚÚ 
;
ÚÚ 
}
ÛÛ 
HashSet
ÙÙ 	
<
ÙÙ	 

UFO
ÙÙ
 
>
ÙÙ 
ufoRemovals
ÙÙ 
=
ÙÙ 
new
ÙÙ  
(
ÙÙ  !
)
ÙÙ! "
;
ÙÙ" #
foreach
ıı 	
(
ıı
 
UFO
ıı 
ufo
ıı 
in
ıı 
ufos
ıı 
)
ıı 
{
ˆˆ 
if
˜˜ 
(
˜˜ 
ufo
˜˜ 

.
˜˜
 
Left
˜˜ 
<=
˜˜ 
bullet
˜˜ 
.
˜˜ 
Left
˜˜ 
&&
˜˜ !
ufo
¯¯ 
.
¯¯ 
Top
¯¯ 
<=
¯¯ 
bullet
¯¯ 
.
¯¯ 
Top
¯¯ 
&&
¯¯ 
CollisionCheck
˘˘ 
(
˘˘ 
(
˙˙ 
bulletRenders
˙˙ 
[
˙˙ 
bullet
˙˙ 
.
˙˙ 
Frame
˙˙ 
]
˙˙  
,
˙˙  !
bullet
˙˙" (
.
˙˙( )
Left
˙˙) -
,
˙˙- .
bullet
˙˙/ 5
.
˙˙5 6
Top
˙˙6 9
)
˙˙9 :
,
˙˙: ;
(
˚˚ 

ufoRenders
˚˚ 
[
˚˚ 
ufo
˚˚ 
.
˚˚ 
Frame
˚˚ 
]
˚˚ 
,
˚˚ 
ufo
˚˚ 
.
˚˚  
Left
˚˚  $
,
˚˚$ %
ufo
˚˚& )
.
˚˚) *
Top
˚˚* -
)
˚˚- .
)
˚˚. /
)
˚˚/ 0
{
¸¸ 
bullet
˝˝ 

.
˝˝
 
Frame
˝˝ 
=
˝˝ 
$num
˝˝ 
;
˝˝ 
ufo
˛˛ 
.
˛˛ 
Health
˛˛ 
--
˛˛ 
;
˛˛ 
if
ˇˇ 
(
ˇˇ 
ufo
ˇˇ 
.
ˇˇ 
Health
ˇˇ 
<=
ˇˇ 
$num
ˇˇ 
)
ˇˇ 
{
ÄÄ 
score
ÅÅ 

+=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
Console
ÇÇ 
.
ÇÇ 
SetCursorPosition
ÇÇ 
(
ÇÇ 
ufo
ÇÇ "
.
ÇÇ" #
Left
ÇÇ# '
,
ÇÇ' (
ufo
ÇÇ) ,
.
ÇÇ, -
Top
ÇÇ- 0
)
ÇÇ0 1
;
ÇÇ1 2
Erase
ÉÉ 

(
ÉÉ
 

ufoRenders
ÉÉ 
[
ÉÉ 
ufo
ÉÉ 
.
ÉÉ 
Frame
ÉÉ 
]
ÉÉ  
)
ÉÉ  !
;
ÉÉ! "
ufoRemovals
ÑÑ 
.
ÑÑ 
Add
ÑÑ 
(
ÑÑ 
ufo
ÑÑ 
)
ÑÑ 
;
ÑÑ 

explosions
ÖÖ 
.
ÖÖ 
Add
ÖÖ 
(
ÖÖ 
new
ÖÖ 
	Explosion
ÖÖ !
{
ÜÜ 
Left
áá 

=
áá 
bullet
áá 
.
áá 
Left
áá 
-
áá 
$num
áá 
,
áá 
Top
àà 	
=
àà
 
Math
àà 
.
àà 
Max
àà 
(
àà 
bullet
àà 
.
àà 
Top
àà 
-
àà  !
$num
àà" #
,
àà# $
$num
àà% &
)
àà& '
,
àà' (
}
ââ 
)
ââ 
;
ââ 
}
ää 
}
ãã 
}
åå 
ufos
çç 
.
çç 
	RemoveAll
çç 
(
çç 
ufoRemovals
çç 
.
çç 
Contains
çç %
)
çç% &
;
çç& '
}
éé 
bullets
èè 
.
èè 	
	RemoveAll
èè	 
(
èè 
bulletRemovals
èè !
.
èè! "
Contains
èè" *
)
èè* +
;
èè+ ,
HashSet
ïï 
<
ïï 	
	Explosion
ïï	 
>
ïï 
explosionRemovals
ïï %
=
ïï& '
new
ïï( +
(
ïï+ ,
)
ïï, -
;
ïï- .
foreach
ññ 
(
ññ	 

	Explosion
ññ
 
	explosion
ññ 
in
ññ  

explosions
ññ! +
)
ññ+ ,
{
óó 
if
òò 
(
òò 
	explosion
òò 
.
òò 
Frame
òò 
>
òò 
$num
òò 
)
òò 
{
ôô 
Console
öö 

.
öö
 
SetCursorPosition
öö 
(
öö 
	explosion
öö &
.
öö& '
Left
öö' +
,
öö+ ,
	explosion
öö- 6
.
öö6 7
Top
öö7 :
)
öö: ;
;
öö; <
Erase
õõ 
(
õõ 	
explosionRenders
õõ	 
[
õõ 
	explosion
õõ #
.
õõ# $
Frame
õõ$ )
-
õõ* +
$num
õõ, -
]
õõ- .
)
õõ. /
;
õõ/ 0
}
úú 
if
ùù 
(
ùù 
	explosion
ùù 
.
ùù 
Frame
ùù 
<
ùù 
explosionRenders
ùù (
.
ùù( )
Length
ùù) /
)
ùù/ 0
{
ûû 
Console
üü 

.
üü
 
SetCursorPosition
üü 
(
üü 
	explosion
üü &
.
üü& '
Left
üü' +
,
üü+ ,
	explosion
üü- 6
.
üü6 7
Top
üü7 :
)
üü: ;
;
üü; <
Render
†† 	
(
††	 

explosionRenders
††
 
[
†† 
	explosion
†† $
.
††$ %
Frame
††% *
]
††* +
)
††+ ,
;
††, -
}
°° 
	explosion
¢¢ 
.
¢¢ 
Frame
¢¢ 
++
¢¢ 
;
¢¢ 
if
££ 
(
££ 
	explosion
££ 
.
££ 
Frame
££ 
>
££ 
explosionRenders
££ (
.
££( )
Length
££) /
)
££/ 0
{
§§ 
explosionRemovals
•• 
.
•• 
Add
•• 
(
•• 
	explosion
•• "
)
••" #
;
••# $
}
¶¶ 
}
ßß 

explosions
®® 
.
®® 
	RemoveAll
®® 
(
®® 
explosionRemovals
®® '
.
®®' (
Contains
®®( 0
)
®®0 1
;
®®1 2
if
ÆÆ 
(
ÆÆ !
stopwatchHelicopter
ÆÆ 
.
ÆÆ 
Elapsed
ÆÆ  
>
ÆÆ! " 
helicopterTimeSpan
ÆÆ# 5
)
ÆÆ5 6
{
ØØ 
helicopterRender
∞∞ 
=
∞∞ 
!
∞∞ 
helicopterRender
∞∞ &
;
∞∞& '!
stopwatchHelicopter
±± 
.
±± 
Restart
±± 
(
±± 
)
±± 
;
±±  "
playerRenderRequired
≤≤ 
=
≤≤ 
true
≤≤ 
;
≤≤ 
}
≥≥ 
if
¥¥ 
(
¥¥ "
playerRenderRequired
¥¥ 
)
¥¥ 
{
µµ 
Console
∂∂ 	
.
∂∂	 

SetCursorPosition
∂∂
 
(
∂∂ 
player
∂∂ "
.
∂∂" #
Left
∂∂# '
,
∂∂' (
player
∂∂) /
.
∂∂/ 0
Top
∂∂0 3
)
∂∂3 4
;
∂∂4 5
Render
∑∑ 
(
∑∑ 	
helicopterRenders
∑∑	 
[
∑∑ 
helicopterRender
∑∑ +
?
∑∑, -
$num
∑∑. /
:
∑∑0 1
$num
∑∑2 3
]
∑∑3 4
)
∑∑4 5
;
∑∑5 6
}
∏∏ 
foreach
ææ 
(
ææ	 

UFO
ææ
 
ufo
ææ 
in
ææ 
ufos
ææ 
)
ææ 
{
øø 
if
¿¿ 
(
¿¿ 
ufo
¿¿ 	
.
¿¿	 

Left
¿¿
 
<
¿¿ 
width
¿¿ 
)
¿¿ 
{
¡¡ 
Console
¬¬ 

.
¬¬
 
SetCursorPosition
¬¬ 
(
¬¬ 
ufo
¬¬  
.
¬¬  !
Left
¬¬! %
,
¬¬% &
ufo
¬¬' *
.
¬¬* +
Top
¬¬+ .
)
¬¬. /
;
¬¬/ 0
Render
√√ 	
(
√√	 


ufoRenders
√√
 
[
√√ 
ufo
√√ 
.
√√ 
Frame
√√ 
]
√√ 
)
√√  
;
√√  !
}
ƒƒ 
}
≈≈ 
foreach
ÀÀ 
(
ÀÀ	 

Bullet
ÀÀ
 
bullet
ÀÀ 
in
ÀÀ 
bullets
ÀÀ "
)
ÀÀ" #
{
ÃÃ 
Console
ÕÕ 	
.
ÕÕ	 

SetCursorPosition
ÕÕ
 
(
ÕÕ 
bullet
ÕÕ "
.
ÕÕ" #
Left
ÕÕ# '
,
ÕÕ' (
bullet
ÕÕ) /
.
ÕÕ/ 0
Top
ÕÕ0 3
)
ÕÕ3 4
;
ÕÕ4 5
Render
ŒŒ 
(
ŒŒ 	
bulletRenders
ŒŒ	 
[
ŒŒ 
bullet
ŒŒ 
.
ŒŒ 
Frame
ŒŒ #
]
ŒŒ# $
)
ŒŒ$ %
;
ŒŒ% &
}
œœ 
Thread
”” 
.
”” 
Sleep
”” 
(
”” !
threadSleepTimeSpan
”” !
)
””! "
;
””" #
}‘‘ 
void÷÷ 
Render
÷÷ 
(
÷÷ 
string
÷÷ 
@string
÷÷ 
,
÷÷ 
bool
÷÷  
renderSpace
÷÷! ,
=
÷÷- .
false
÷÷/ 4
)
÷÷4 5
{◊◊ 
int
ÿÿ 
x
ÿÿ 
=
ÿÿ 
Console
ÿÿ	 
.
ÿÿ 

CursorLeft
ÿÿ 
;
ÿÿ 
int
ŸŸ 
y
ŸŸ 
=
ŸŸ 
Console
ŸŸ	 
.
ŸŸ 
	CursorTop
ŸŸ 
;
ŸŸ 
foreach
⁄⁄ 
(
⁄⁄	 

char
⁄⁄
 
c
⁄⁄ 
in
⁄⁄ 
@string
⁄⁄ 
)
⁄⁄ 
if
€€ 
(
€€ 
c
€€ 
is
€€ 

$char
€€ 
)
€€ 
Console
‹‹ 

.
‹‹
 
SetCursorPosition
‹‹ 
(
‹‹ 
x
‹‹ 
,
‹‹ 
++
‹‹  "
y
‹‹" #
)
‹‹# $
;
‹‹$ %
else
›› 
if
›› 	
(
››
 
Console
›› 
.
›› 

CursorLeft
›› 
<
›› 
width
››  %
-
››& '
$num
››( )
&&
››* ,
(
››- .
c
››. /
is
››0 2
not
››3 6
$char
››7 :
||
››; =
renderSpace
››> I
)
››I J
)
››J K
Console
ﬁﬁ 

.
ﬁﬁ
 
Write
ﬁﬁ 
(
ﬁﬁ 
c
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
else
ﬂﬂ 
if
ﬂﬂ 	
(
ﬂﬂ
 
Console
ﬂﬂ 
.
ﬂﬂ 

CursorLeft
ﬂﬂ 
<
ﬂﬂ 
width
ﬂﬂ  %
-
ﬂﬂ& '
$num
ﬂﬂ( )
&&
ﬂﬂ* ,
Console
ﬂﬂ- 4
.
ﬂﬂ4 5
	CursorTop
ﬂﬂ5 >
<
ﬂﬂ? @
height
ﬂﬂA G
-
ﬂﬂH I
$num
ﬂﬂJ K
)
ﬂﬂK L
Console
‡‡ 

.
‡‡
 
SetCursorPosition
‡‡ 
(
‡‡ 
Console
‡‡ $
.
‡‡$ %

CursorLeft
‡‡% /
+
‡‡0 1
$num
‡‡2 3
,
‡‡3 4
Console
‡‡5 <
.
‡‡< =
	CursorTop
‡‡= F
)
‡‡F G
;
‡‡G H
}·· 
void„„ 
Erase
„„ 

(
„„
 
string
„„ 
@string
„„ 
)
„„ 
{‰‰ 
int
ÂÂ 
x
ÂÂ 
=
ÂÂ 
Console
ÂÂ	 
.
ÂÂ 

CursorLeft
ÂÂ 
;
ÂÂ 
int
ÊÊ 
y
ÊÊ 
=
ÊÊ 
Console
ÊÊ	 
.
ÊÊ 
	CursorTop
ÊÊ 
;
ÊÊ 
foreach
ÁÁ 
(
ÁÁ	 

char
ÁÁ
 
c
ÁÁ 
in
ÁÁ 
@string
ÁÁ 
)
ÁÁ 
if
ËË 
(
ËË 
c
ËË 
is
ËË 

$char
ËË 
)
ËË 
Console
ÈÈ 

.
ÈÈ
 
SetCursorPosition
ÈÈ 
(
ÈÈ 
x
ÈÈ 
,
ÈÈ 
++
ÈÈ  "
y
ÈÈ" #
)
ÈÈ# $
;
ÈÈ$ %
else
ÍÍ 
if
ÍÍ 	
(
ÍÍ
 
Console
ÍÍ 
.
ÍÍ 

CursorLeft
ÍÍ 
<
ÍÍ 
width
ÍÍ  %
-
ÍÍ& '
$num
ÍÍ( )
&&
ÍÍ* ,
c
ÍÍ- .
is
ÍÍ/ 1
not
ÍÍ2 5
$char
ÍÍ6 9
)
ÍÍ9 :
Console
ÎÎ 

.
ÎÎ
 
Write
ÎÎ 
(
ÎÎ 
$char
ÎÎ 
)
ÎÎ 
;
ÎÎ 
else
ÏÏ 
if
ÏÏ 	
(
ÏÏ
 
Console
ÏÏ 
.
ÏÏ 

CursorLeft
ÏÏ 
<
ÏÏ 
width
ÏÏ  %
-
ÏÏ& '
$num
ÏÏ( )
&&
ÏÏ* ,
Console
ÏÏ- 4
.
ÏÏ4 5
	CursorTop
ÏÏ5 >
<
ÏÏ? @
height
ÏÏA G
-
ÏÏH I
$num
ÏÏJ K
)
ÏÏK L
Console
ÌÌ 

.
ÌÌ
 
SetCursorPosition
ÌÌ 
(
ÌÌ 
Console
ÌÌ $
.
ÌÌ$ %

CursorLeft
ÌÌ% /
+
ÌÌ0 1
$num
ÌÌ2 3
,
ÌÌ3 4
Console
ÌÌ5 <
.
ÌÌ< =
	CursorTop
ÌÌ= F
)
ÌÌF G
;
ÌÌG H
}ÓÓ 
bool 
CollisionCheck
 
(
 
(
 
string
 
String
 "
,
" #
int
$ '
Left
( ,
,
, -
int
. 1
Top
2 5
)
5 6
A
7 8
,
8 9
(
: ;
string
; A
String
B H
,
H I
int
J M
Left
N R
,
R S
int
T W
Top
X [
)
[ \
B
] ^
)
^ _
{ÒÒ 
char
ÚÚ 
[
ÚÚ 
,
ÚÚ 
]
ÚÚ 
buffer
ÚÚ	 
=
ÚÚ 
new
ÚÚ 
char
ÚÚ 
[
ÚÚ 
width
ÚÚ  
,
ÚÚ  !
height
ÚÚ" (
]
ÚÚ( )
;
ÚÚ) *
int
ÛÛ 
left
ÛÛ 	
=
ÛÛ
 
A
ÛÛ 
.
ÛÛ 
Left
ÛÛ 
;
ÛÛ 
int
ÙÙ 
top
ÙÙ 
=
ÙÙ	 

A
ÙÙ 
.
ÙÙ 
Top
ÙÙ 
;
ÙÙ 
foreach
ıı 
(
ıı	 

char
ıı
 
c
ıı 
in
ıı 
A
ıı 
.
ıı 
String
ıı 
)
ıı 
{
ˆˆ 
if
˜˜ 
(
˜˜ 
c
˜˜ 
is
˜˜ 

$char
˜˜ 
)
˜˜ 
{
¯¯ 
left
˘˘ 
=
˘˘ 	
A
˘˘
 
.
˘˘ 
Left
˘˘ 
;
˘˘ 
top
˙˙ 
++
˙˙ 
;
˙˙ 	
}
˚˚ 
else
¸¸ 
if
¸¸ 	
(
¸¸
 
left
¸¸ 
<
¸¸ 
width
¸¸ 
&&
¸¸ 
top
¸¸ 
<
¸¸  
height
¸¸! '
&&
¸¸( *
c
¸¸+ ,
!=
¸¸- /
$char
¸¸0 3
)
¸¸3 4
{
˝˝ 
buffer
˛˛ 	
[
˛˛	 

left
˛˛
 
++
˛˛ 
,
˛˛ 
top
˛˛ 
]
˛˛ 
=
˛˛ 
c
˛˛ 
;
˛˛ 
}
ˇˇ 
}
ÄÄ 
left
ÅÅ 
=
ÅÅ 
B
ÅÅ 	
.
ÅÅ	 

Left
ÅÅ
 
;
ÅÅ 
top
ÇÇ 
=
ÇÇ 
B
ÇÇ 
.
ÇÇ 	
Top
ÇÇ	 
;
ÇÇ 
foreach
ÉÉ 
(
ÉÉ	 

char
ÉÉ
 
c
ÉÉ 
in
ÉÉ 
B
ÉÉ 
.
ÉÉ 
String
ÉÉ 
)
ÉÉ 
{
ÑÑ 
if
ÖÖ 
(
ÖÖ 
c
ÖÖ 
is
ÖÖ 

$char
ÖÖ 
)
ÖÖ 
{
ÜÜ 
left
áá 
=
áá 	
A
áá
 
.
áá 
Left
áá 
;
áá 
top
àà 
++
àà 
;
àà 	
}
ââ 
else
ää 
if
ää 	
(
ää
 
left
ää 
<
ää 
width
ää 
&&
ää 
top
ää 
<
ää  
height
ää! '
&&
ää( *
c
ää+ ,
!=
ää- /
$char
ää0 3
)
ää3 4
{
ãã 
if
åå 
(
åå 
buffer
åå 
[
åå 
left
åå 
,
åå 
top
åå 
]
åå 
!=
åå 
default
åå #
)
åå# $
{
çç 
return
éé 

true
éé 
;
éé 
}
èè 
buffer
êê 	
[
êê	 

left
êê
 
++
êê 
,
êê 
top
êê 
]
êê 
=
êê 
c
êê 
;
êê 
}
ëë 
}
íí 
return
ìì 
false
ìì 
;
ìì 
}îî 
classññ 
Player
ññ 
{óó 
public
òò 
int
òò 
Left
òò 
;
òò 
public
ôô 
int
ôô 
Top
ôô 
;
ôô 
}öö 
classúú 
Bullet
úú 
{ùù 
public
ûû 
int
ûû 
Left
ûû 
;
ûû 
public
üü 
int
üü 
Top
üü 
;
üü 
public
†† 
int
†† 
Frame
†† 
;
†† 
}°° 
class££ 
	Explosion
££ 
{§§ 
public
•• 
int
•• 
Left
•• 
;
•• 
public
¶¶ 
int
¶¶ 
Top
¶¶ 
;
¶¶ 
public
ßß 
int
ßß 
Frame
ßß 
;
ßß 
}®® 
class™™ 
UFO
™™ 	
{´´ 
public
¨¨ 
int
¨¨ 
Frame
¨¨ 
;
¨¨ 
public
≠≠ 
int
≠≠ 
Left
≠≠ 
;
≠≠ 
public
ÆÆ 
int
ÆÆ 
Top
ÆÆ 
;
ÆÆ 
public
ØØ 
int
ØØ 
Health
ØØ 
;
ØØ 
}∞∞ 