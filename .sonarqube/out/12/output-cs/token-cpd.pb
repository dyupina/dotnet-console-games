√ç
VC:\ProgramData\Jenkins\.jenkins\workspace\GamePipeline\Projects\Flappy Bird\Program.cs
const 
float 
Gravity 
= 
$num 
; 
const 
int 	
	PipeWidth
 
= 
$num 
; 
const 
int 	
PipeGapHeight
 
= 
$num 
; 
const 
int 	
SpaceBetweenPipes
 
= 
$num  
;  !
const		 
string		 
BirdUp		 
=		 
$str		 
;		  
const

 
string

 
BirdDown

 
=

 
$str

 !
;

! "
int 
OriginalWidth 
= 
Console 
. 
WindowWidth '
;' (
int 
OriginalHeight 
= 
Console 
. 
WindowHeight )
;) *
TimeSpan 
Sleep	 
= 
TimeSpan 
. 
FromMilliseconds *
(* +
$num+ -
)- .
;. /
Random 
Random 
= 
new 
( 
) 
; 
List 
< 
( 
int 	
X
 
, 
int 
GapY 
) 
> 
Pipes 
= 
new  #
(# $
)$ %
;% &
int 
Width 	
;	 

int 
Height 

;
 
float 
BirdX 
; 
float 
BirdY 
; 
float 
BirdDY 
; 
int 
Frame 	
;	 

int 
	PipeFrame 
; 
try 
{ 
	PlayAgain 	
:	 

Console 
. 	
Clear	 
( 
) 
; 
Pipes 
. 
Clear 
( 
) 
; 
if   
(   
OperatingSystem   
.   
	IsWindows   
(   
)    
)    !
{!! 
Width"" 
="" 	
Console""
 
."" 
WindowWidth"" 
="" 
$num""  #
;""# $
Height## 
=##	 

Console## 
.## 
WindowHeight## 
=##  !
$num##" $
;##$ %
}$$ 
else%% 
{&& 
Width'' 
='' 	
Console''
 
.'' 
WindowWidth'' 
;'' 
Height(( 
=((	 

Console(( 
.(( 
WindowHeight(( 
;((  
})) 
BirdX** 
=** 
Width**	 
/** 
$num** 
;** 
BirdY++ 
=++ 
Height++	 
/++ 
$num++ 
;++ 
BirdDY,, 
=,, 	
$num,,
 
;,, 
Frame-- 
=-- 
$num--	 

;--
 
	PipeFrame.. 

=.. 
SpaceBetweenPipes.. 
;.. 
Console// 
.// 	
CursorVisible//	 
=// 
false// 
;// 

RenderBird11 
(11 
)11 
;11 
Console22 
.22 	
SetCursorPosition22	 
(22 
(22 
int22 
)22  
BirdX22  %
-22& '
$num22( *
,22* +
(22, -
int22- 0
)220 1
BirdY221 6
+227 8
$num229 :
)22: ;
;22; <
Console33 
.33 	
Write33	 
(33 
$str33 $
)33$ %
;33% &
StartingInput44 
:44 
switch55 
(55 	
Console55	 
.55 
ReadKey55 
(55 
true55 
)55 
.55 
Key55 "
)55" #
{66 
case77 

ConsoleKey77 
.77 
Spacebar77 
:77 
BirdDY88 	
=88
 
-88 
$num88 
;88 
break99 
;99 	
case:: 

ConsoleKey:: 
.:: 
Escape:: 
::: 
Console;; 

.;;
 
Clear;; 
(;; 
);; 
;;; 
Console<< 

.<<
 
Write<< 
(<< 
$str<< *
)<<* +
;<<+ ,
return== 	
;==	 

default>> 	
:>>	 

goto?? 
StartingInput?? 
;?? 
}@@ 
ConsoleAA 
.AA 	
SetCursorPositionAA	 
(AA 
(AA 
intAA 
)AA  
BirdXAA  %
-AA& '
$numAA( *
,AA* +
(AA, -
intAA- 0
)AA0 1
BirdYAA1 6
+AA7 8
$numAA9 :
)AA: ;
;AA; <
ConsoleBB 
.BB 	
WriteBB	 
(BB 
$strBB $
)BB$ %
;BB% &
whileDD 
(DD 
trueDD 
)DD 
{EE 
ifGG 
(GG 
ConsoleGG 
.GG 
WindowHeightGG 
!=GG 
HeightGG $
||GG% '
ConsoleGG( /
.GG/ 0
WindowWidthGG0 ;
!=GG< >
WidthGG? D
)GGD E
{HH 
ConsoleII 

.II
 
ClearII 
(II 
)II 
;II 
ConsoleJJ 

.JJ
 
WriteJJ 
(JJ 
$strJJ C
)JJC D
;JJD E
returnKK 	
;KK	 

}LL 
ifMM 
(MM 
FrameMM 
==MM 
intMM 
.MM 
MaxValueMM 
)MM 
{NN 
ConsoleOO 

.OO
 
SetCursorPositionOO 
(OO 
$numOO 
,OO 
HeightOO  &
-OO' (
$numOO) *
)OO* +
;OO+ ,
ConsolePP 

.PP
 
WritePP 
(PP 
$strPP #
+PP$ %
FramePP& +
+PP, -
$strPP. 1
)PP1 2
;PP2 3
breakQQ 
;QQ 	
}RR 
ifSS 
(SS 
!SS 
(SS 
BirdYSS 
<SS 
HeightSS 
-SS 
$numSS 
&&SS 
BirdYSS #
>SS$ %
$numSS& '
)SS' (
||SS) +#
IsBirdCollidingWithPipeSS, C
(SSC D
)SSD E
)SSE F
{TT 
ConsoleUU 

.UU
 
SetCursorPositionUU 
(UU 
$numUU 
,UU 
HeightUU  &
-UU' (
$numUU) *
)UU* +
;UU+ ,
ConsoleVV 

.VV
 
WriteVV 
(VV 
$strVV %
+VV& '
FrameVV( -
+VV. /
$strVV0 3
)VV3 4
;VV4 5
ConsoleWW 

.WW
 
WriteWW 
(WW 
$strWW 9
)WW9 :
;WW: ;
GetPlayAgainInputXX 
:XX 

ConsoleKeyYY 
keyYY 
=YY 
ConsoleYY 
.YY 
ReadKeyYY #
(YY# $
trueYY$ (
)YY( )
.YY) *
KeyYY* -
;YY- .
ifZZ 
(ZZ 
keyZZ 

isZZ 

ConsoleKeyZZ 
.ZZ 
EnterZZ 
)ZZ 
{[[ 
goto\\ 
	PlayAgain\\	 
;\\ 
}]] 
else^^ 
if^^ 

(^^ 
key^^ 
is^^ 
not^^ 

ConsoleKey^^ !
.^^! "
Escape^^" (
)^^( )
{__ 
goto`` 
GetPlayAgainInput``	 
;`` 
}aa 
Consolebb 

.bb
 
Clearbb 
(bb 
)bb 
;bb 
breakcc 
;cc 	
}dd 
{ff 
{hh 
foreachjj 
(jj 
varjj 
(jj 
Xjj 
,jj 
GapYjj 
)jj 
injj 
Pipesjj #
)jj# $
{kk 
intll 
xll	 

=ll 
Xll 
+ll 
	PipeWidthll 
/ll 
$numll 
;ll 
ifmm 
(mm 	
xmm	 

>=mm 
$nummm 
&&mm 
xmm 
<mm 
Widthmm 
)mm 
{nn 
foroo 	
(oo
 
intoo 
yoo 
=oo 
$numoo 
;oo 
yoo 
<oo 
Heightoo  
;oo  !
yoo" #
++oo# %
)oo% &
{pp 
Consoleqq 
.qq 
SetCursorPositionqq  
(qq  !
xqq! "
,qq" #
yqq$ %
)qq% &
;qq& '
Consolerr 
.rr 
Writerr 
(rr 
$charrr 
)rr 
;rr 
}ss 
}tt 
}uu 
forww 
(ww 	
intww	 
iww 
=ww 
$numww 
;ww 
iww 
<ww 
Pipesww 
.ww 
Countww #
;ww# $
iww% &
++ww& (
)ww( )
{xx 
Pipesyy 

[yy
 
iyy 
]yy 
=yy 
(yy 
Pipesyy 
[yy 
iyy 
]yy 
.yy 
Xyy 
-yy 
$numyy 
,yy  
Pipesyy! &
[yy& '
iyy' (
]yy( )
.yy) *
GapYyy* .
)yy. /
;yy/ 0
}zz 
if{{ 
({{ 
Pipes{{ 
.{{ 
Count{{ 
>{{ 
$num{{ 
&&{{ 
Pipes{{  
[{{  !
$num{{! "
]{{" #
.{{# $
X{{$ %
<{{& '
-{{( )
	PipeWidth{{) 2
){{2 3
{|| 
Pipes}} 

.}}
 
RemoveAt}} 
(}} 
$num}} 
)}} 
;}} 
}~~ 
if 
( 
	PipeFrame 
>= 
SpaceBetweenPipes &
)& '
{
ÄÄ 
int
ÅÅ 
gapY
ÅÅ	 
=
ÅÅ 
Random
ÅÅ 
.
ÅÅ 
Next
ÅÅ 
(
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
Height
ÅÅ %
-
ÅÅ& '
PipeGapHeight
ÅÅ( 5
-
ÅÅ6 7
$num
ÅÅ8 9
-
ÅÅ: ;
$num
ÅÅ< =
)
ÅÅ= >
+
ÅÅ? @
$num
ÅÅA B
;
ÅÅB C
Pipes
ÇÇ 

.
ÇÇ
 
Add
ÇÇ 
(
ÇÇ 
(
ÇÇ 
Width
ÇÇ 
+
ÇÇ 
	PipeWidth
ÇÇ !
/
ÇÇ" #
$num
ÇÇ$ %
,
ÇÇ% &
gapY
ÇÇ' +
)
ÇÇ+ ,
)
ÇÇ, -
;
ÇÇ- .
	PipeFrame
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
}
ÑÑ 
foreach
ÜÜ 
(
ÜÜ 
var
ÜÜ 
(
ÜÜ 
X
ÜÜ 
,
ÜÜ 
GapY
ÜÜ 
)
ÜÜ 
in
ÜÜ 
Pipes
ÜÜ #
)
ÜÜ# $
{
áá 
int
àà 
x
àà	 

=
àà 
X
àà 
-
àà 
	PipeWidth
àà 
/
àà 
$num
àà 
;
àà 
for
ââ 
(
ââ	 

int
ââ
 
y
ââ 
=
ââ 
$num
ââ 
;
ââ 
y
ââ 
<
ââ 
Height
ââ 
;
ââ  
y
ââ! "
++
ââ" $
)
ââ$ %
{
ää 
if
ãã 
(
ãã	 

x
ãã
 
>
ãã 
$num
ãã 
&&
ãã 
x
ãã 
<
ãã 
Width
ãã 
-
ãã 
$num
ãã  
&&
ãã! #
(
ãã$ %
y
ãã% &
<
ãã' (
GapY
ãã) -
||
ãã. 0
y
ãã1 2
>
ãã3 4
GapY
ãã5 9
+
ãã: ;
PipeGapHeight
ãã< I
)
ããI J
)
ããJ K
{
åå 
Console
çç 
.
çç 
SetCursorPosition
çç  
(
çç  !
x
çç! "
,
çç" #
y
çç$ %
)
çç% &
;
çç& '
Console
éé 
.
éé 
Write
éé 
(
éé 
$char
éé 
)
éé 
;
éé 
}
èè 
}
êê 
}
ëë 

RenderBird
íí 
(
íí 
)
íí 
;
íí 
	PipeFrame
ìì 
++
ìì 
;
ìì 
}
îî 
{
ññ 
{
òò 
bool
ôô 	
verticalVelocity
ôô
 
=
ôô 
BirdDY
ôô #
<
ôô$ %
$num
ôô& '
;
ôô' (
Console
öö 
.
öö 
SetCursorPosition
öö 
(
öö 
(
öö  
int
öö  #
)
öö# $
(
öö$ %
BirdX
öö% *
)
öö* +
-
öö, -
$num
öö. /
,
öö/ 0
(
öö1 2
int
öö2 5
)
öö5 6
BirdY
öö6 ;
)
öö; <
;
öö< =
Console
õõ 
.
õõ 
Write
õõ 
(
õõ 
$str
õõ 
)
õõ 
;
õõ 
}
úú 
while
ûû 	
(
ûû
 
Console
ûû 
.
ûû 
KeyAvailable
ûû 
)
ûû  
{
üü 
switch
†† 
(
†† 
Console
†† 
.
†† 
ReadKey
†† 
(
†† 
true
†† !
)
††! "
.
††" #
Key
††# &
)
††& '
{
°° 
case
¢¢ 


ConsoleKey
¢¢ 
.
¢¢ 
Spacebar
¢¢ 
:
¢¢ 
BirdDY
££ 
=
££ 
-
££ 
$num
££ 
;
££ 
break
§§ 
;
§§ 
case
•• 


ConsoleKey
•• 
.
•• 
Escape
•• 
:
•• 
Console
¶¶ 
.
¶¶ 
Clear
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
Console
ßß 
.
ßß 
Write
ßß 
(
ßß 
$str
ßß .
)
ßß. /
;
ßß/ 0
return
®® 
;
®® 
}
©© 
}
™™ 
BirdY
´´ 	
+=
´´
 
BirdDY
´´ 
;
´´ 
BirdDY
¨¨ 

+=
¨¨ 
Gravity
¨¨ 
;
¨¨ 

RenderBird
ÆÆ 
(
ÆÆ 
)
ÆÆ 
;
ÆÆ 
}
ØØ 
Frame
∞∞ 
++
∞∞ 

;
∞∞
 
}
±± 
Thread
≤≤ 
.
≤≤ 	
Sleep
≤≤	 
(
≤≤ 
Sleep
≤≤ 
)
≤≤ 
;
≤≤ 
}
≥≥ 
}¥¥ 
finallyµµ 
{∂∂ 
Console
∑∑ 
.
∑∑ 	
CursorVisible
∑∑	 
=
∑∑ 
true
∑∑ 
;
∑∑ 
if
∏∏ 
(
∏∏ 
OperatingSystem
∏∏ 
.
∏∏ 
	IsWindows
∏∏ 
(
∏∏ 
)
∏∏  
)
∏∏  !
{
ππ 
Console
∫∫ 	
.
∫∫	 

WindowWidth
∫∫
 
=
∫∫ 
OriginalWidth
∫∫ %
;
∫∫% &
Console
ªª 	
.
ªª	 

WindowHeight
ªª
 
=
ªª 
OriginalHeight
ªª '
;
ªª' (
}
ºº 
}ΩΩ 
booløø %
IsBirdCollidingWithPipe
øø 
(
øø 
)
øø 
{¿¿ 
foreach
¡¡ 
(
¡¡	 

var
¡¡
 
(
¡¡ 
X
¡¡ 
,
¡¡ 
GapY
¡¡ 
)
¡¡ 
in
¡¡ 
Pipes
¡¡  
)
¡¡  !
{
¬¬ 
if
√√ 
(
√√ 
Math
√√ 

.
√√
 
Abs
√√ 
(
√√ 
X
√√ 
-
√√ 
BirdX
√√ 
)
√√ 
<
√√ 
	PipeWidth
√√ %
/
√√& '
$num
√√( )
+
√√* +
$num
√√, -
&&
√√. 0
(
√√1 2
(
√√2 3
int
√√3 6
)
√√6 7
BirdY
√√7 <
<
√√= >
GapY
√√? C
||
√√D F
(
√√G H
int
√√H K
)
√√K L
BirdY
√√L Q
>
√√R S
GapY
√√T X
+
√√Y Z
PipeGapHeight
√√[ h
)
√√h i
)
√√i j
{
ƒƒ 
return
≈≈ 	
true
≈≈
 
;
≈≈ 
}
∆∆ 
}
«« 
return
»» 
false
»» 
;
»» 
}…… 
voidÀÀ 

RenderBird
ÀÀ 
(
ÀÀ 
)
ÀÀ 
{ÃÃ 
if
ÕÕ 
(
ÕÕ 
(
ÕÕ 
int
ÕÕ 	
)
ÕÕ	 

BirdY
ÕÕ
 
<
ÕÕ 
Height
ÕÕ 
-
ÕÕ 
$num
ÕÕ 
&&
ÕÕ 
(
ÕÕ  !
int
ÕÕ! $
)
ÕÕ$ %
BirdY
ÕÕ% *
>=
ÕÕ+ -
$num
ÕÕ. /
)
ÕÕ/ 0
{
ŒŒ 
bool
œœ 
verticalVelocity
œœ 
=
œœ 
BirdDY
œœ  
<
œœ! "
$num
œœ# $
;
œœ$ %
Console
–– 	
.
––	 

SetCursorPosition
––
 
(
–– 
(
–– 
int
––  
)
––  !
BirdX
––! &
-
––' (
$num
––) *
,
––* +
(
––, -
int
––- 0
)
––0 1
BirdY
––1 6
)
––6 7
;
––7 8
Console
—— 	
.
——	 

Write
——
 
(
—— 
verticalVelocity
——  
?
——! "
BirdUp
——# )
:
——* +
BirdDown
——, 4
)
——4 5
;
——5 6
}
““ 
}”” 