½£
OC:\ProgramData\Jenkins\.jenkins\workspace\GamePipeline\Projects\Pong\Program.cs
int 
width 	
=
 
Console 
. 
WindowWidth 
;  
int 
height 

= 
Console 
. 
WindowHeight !
;! "
float 

multiplier 
= 
$num 
; 
Random 
random 
= 
new 
( 
) 
; 
TimeSpan		 
delay			 
=		 
TimeSpan		 
.		 
FromMilliseconds		 *
(		* +
$num		+ -
)		- .
;		. /
TimeSpan

 
enemyInputDelay

	 
=

 
TimeSpan

 #
.

# $
FromMilliseconds

$ 4
(

4 5
$num

5 8
)

8 9
;

9 :
int 

paddleSize 
= 
height 
/ 
$num 
; 
	Stopwatch 	
	stopwatch
 
= 
new 
( 
) 
; 
	Stopwatch 	
enemyStopwatch
 
= 
new 
( 
)  
;  !
int 
scoreA 

= 
$num 
; 
int 
scoreB 

= 
$num 
; 
Ball 
ball 	
;	 

int 
paddleA 
= 
height 
/ 
$num 
; 
int 
paddleB 
= 
height 
/ 
$num 
; 
Console 
. 
Clear 
( 
) 
; 
	stopwatch 	
.	 

Restart
 
( 
) 
; 
enemyStopwatch 
. 
Restart 
( 
) 
; 
Console 
. 
CursorVisible 
= 
false 
; 
while 
( 
scoreA 
< 
$num 
&& 
scoreB 
< 
$num 
)  
{ 
ball 
= 
CreateNewBall 
( 
) 
; 
while 
( 
true 
) 
{ 
float   
time   
=   
(   
float   
)   
	stopwatch   
.    
Elapsed    '
.  ' (
TotalSeconds  ( 4
*  5 6
$num  7 9
;  9 :
var!! 
(!! 
X2!! 	
,!!	 

Y2!! 
)!! 
=!! 
(!! 
ball!! 
.!! 
X!! 
+!! 
(!! 
time!!  
*!!! "
ball!!# '
.!!' (
dX!!( *
)!!* +
,!!+ ,
ball!!- 1
.!!1 2
Y!!2 3
+!!4 5
(!!6 7
time!!7 ;
*!!< =
ball!!> B
.!!B C
dY!!C E
)!!E F
)!!F G
;!!G H
if$$ 
($$ 
Y2$$ 
<$$	 

$num$$ 
||$$ 
Y2$$ 
>$$ 
height$$ 
)$$ 
{%% 
ball&& 
.&& 
dY&& 

=&& 
-&& 
ball&& 
.&& 
dY&& 
;&& 
Y2'' 
='' 
ball'' 
.'' 
Y'' 
+'' 
ball'' 
.'' 
dY'' 
;'' 
}(( 
if++ 
(++ 
Math++ 

.++
 
Min++ 
(++ 
ball++ 
.++ 
X++ 
,++ 
X2++ 
)++ 
<=++ 
$num++ 
&&++  "
$num++# $
<=++% '
Math++( ,
.++, -
Max++- 0
(++0 1
ball++1 5
.++5 6
X++6 7
,++7 8
X2++9 ;
)++; <
)++< =
{,, 
int-- 
ballPathAtPaddleA-- 
=-- 
height-- !
---" #
(--$ %
int--% (
)--( )
GetLineValue--) 5
(--5 6
(--6 7
(--7 8
ball--8 <
.--< =
X--= >
,--> ?
height--@ F
---G H
ball--I M
.--M N
Y--N O
)--O P
,--P Q
(--R S
X2--S U
,--U V
height--W ]
---^ _
Y2--` b
)--b c
)--c d
,--d e
$num--f g
)--g h
;--h i
ballPathAtPaddleA.. 
=.. 
Math.. 
... 
Max.. 
(..  
$num..  !
,..! "
ballPathAtPaddleA..# 4
)..4 5
;..5 6
ballPathAtPaddleA// 
=// 
Math// 
.// 
Min// 
(//  
height//  &
-//' (
$num//) *
,//* +
ballPathAtPaddleA//, =
)//= >
;//> ?
if00 
(00 
paddleA00 
<=00 
ballPathAtPaddleA00 #
&&00$ &
ballPathAtPaddleA00' 8
<=009 ;
paddleA00< C
+00D E

paddleSize00F P
)00P Q
{11 
ball22 
.22 	
dX22	 
=22 
-22 
ball22 
.22 
dX22 
;22 
ball33 
.33 	
dX33	 
*=33 

multiplier33 
;33 
ball44 
.44 	
dY44	 
*=44 

multiplier44 
;44 
X255 
=55 
ball55	 
.55 
X55 
+55 
(55 
time55 
*55 
ball55 
.55 
dX55 !
)55! "
;55" #
}66 
}77 
if:: 
(:: 
Math:: 

.::
 
Min:: 
(:: 
ball:: 
.:: 
X:: 
,:: 
X2:: 
):: 
<=:: 
width:: #
-::$ %
$num::& '
&&::( *
width::+ 0
-::1 2
$num::3 4
<=::5 7
Math::8 <
.::< =
Max::= @
(::@ A
ball::A E
.::E F
X::F G
,::G H
X2::I K
)::K L
)::L M
{;; 
int<< 
ballPathAtPaddleB<< 
=<< 
height<< !
-<<" #
(<<$ %
int<<% (
)<<( )
GetLineValue<<) 5
(<<5 6
(<<6 7
(<<7 8
ball<<8 <
.<<< =
X<<= >
,<<> ?
height<<@ F
-<<G H
ball<<I M
.<<M N
Y<<N O
)<<O P
,<<P Q
(<<R S
X2<<S U
,<<U V
height<<W ]
-<<^ _
Y2<<` b
)<<b c
)<<c d
,<<d e
width<<f k
-<<l m
$num<<n o
)<<o p
;<<p q
ballPathAtPaddleB== 
=== 
Math== 
.== 
Max== 
(==  
$num==  !
,==! "
ballPathAtPaddleB==# 4
)==4 5
;==5 6
ballPathAtPaddleB>> 
=>> 
Math>> 
.>> 
Min>> 
(>>  
height>>  &
->>' (
$num>>) *
,>>* +
ballPathAtPaddleB>>, =
)>>= >
;>>> ?
if?? 
(?? 
paddleB?? 
<=?? 
ballPathAtPaddleB?? #
&&??$ &
ballPathAtPaddleB??' 8
<=??9 ;
paddleB??< C
+??D E

paddleSize??F P
)??P Q
{@@ 
ballAA 
.AA 	
dXAA	 
=AA 
-AA 
ballAA 
.AA 
dXAA 
;AA 
ballBB 
.BB 	
dXBB	 
*=BB 

multiplierBB 
;BB 
ballCC 
.CC 	
dYCC	 
*=CC 

multiplierCC 
;CC 
X2DD 
=DD 
ballDD	 
.DD 
XDD 
+DD 
(DD 
timeDD 
*DD 
ballDD 
.DD 
dXDD !
)DD! "
;DD" #
}EE 
}FF 
ifII 
(II 
X2II 
<II	 

$numII 
)II 
{JJ 
scoreBKK 	
++KK	 
;KK 
breakLL 
;LL 	
}MM 
ifNN 
(NN 
X2NN 
>NN	 

widthNN 
)NN 
{OO 
scoreAPP 	
++PP	 
;PP 
breakQQ 
;QQ 	
}RR 
ConsoleUU 	
.UU	 

SetCursorPositionUU
 
(UU 
(UU 
intUU  
)UU  !
ballUU! %
.UU% &
XUU& '
,UU' (
(UU) *
intUU* -
)UU- .
ballUU. 2
.UU2 3
YUU3 4
)UU4 5
;UU5 6
ConsoleVV 	
.VV	 

WriteVV
 
(VV 
$charVV 
)VV 
;VV 
ballWW 
.WW 
XWW 
+=WW	 
timeWW 
*WW 
ballWW 
.WW 
dXWW 
;WW 
ballXX 
.XX 
YXX 
+=XX	 
timeXX 
*XX 
ballXX 
.XX 
dYXX 
;XX 
ConsoleYY 	
.YY	 

SetCursorPositionYY
 
(YY 
(YY 
intYY  
)YY  !
ballYY! %
.YY% &
XYY& '
,YY' (
(YY) *
intYY* -
)YY- .
ballYY. 2
.YY2 3
YYY3 4
)YY4 5
;YY5 6
ConsoleZZ 	
.ZZ	 

WriteZZ
 
(ZZ 
$charZZ 
)ZZ 
;ZZ 
if`` 
(`` 
Console`` 
.`` 
KeyAvailable`` 
)`` 
{aa 
switchbb 	
(bb
 
Consolebb 
.bb 
ReadKeybb 
(bb 
truebb 
)bb  
.bb  !
Keybb! $
)bb$ %
{cc 
casedd 

ConsoleKeydd	 
.dd 
UpArrowdd 
:dd 
paddleAdd $
=dd% &
Mathdd' +
.dd+ ,
Maxdd, /
(dd/ 0
paddleAdd0 7
-dd8 9
$numdd: ;
,dd; <
$numdd= >
)dd> ?
;dd? @
breakddA F
;ddF G
caseee 

ConsoleKeyee	 
.ee 
	DownArrowee 
:ee 
paddleAee &
=ee' (
Mathee) -
.ee- .
Minee. 1
(ee1 2
paddleAee2 9
+ee: ;
$numee< =
,ee= >
heightee? E
-eeF G

paddleSizeeeH R
-eeS T
$numeeU V
)eeV W
;eeW X
breakeeY ^
;ee^ _
caseff 

ConsoleKeyff	 
.ff 
Escapeff 
:ff 
Consolegg 
.gg 
Cleargg 
(gg 
)gg 
;gg 
Consolehh 
.hh 
Writehh 
(hh 
$strhh %
)hh% &
;hh& '
returnii 
;ii 
}jj 
}kk 
whilell 
(ll 	
Consolell	 
.ll 
KeyAvailablell 
)ll 
{mm 
Consolenn 

.nn
 
ReadKeynn 
(nn 
truenn 
)nn 
;nn 
}oo 
ifuu 
(uu 
enemyStopwatchuu 
.uu 
Elapseduu 
>uu 
enemyInputDelayuu .
)uu. /
{vv 
ifww 
(ww 
ballww 
.ww 
Yww 
<ww 
paddleBww 
+ww 
(ww 

paddleSizeww %
/ww& '
$numww( )
)ww) *
&&ww+ -
ballww. 2
.ww2 3
dYww3 5
<ww6 7
$numww8 9
)ww9 :
{xx 
paddleByy 
=yy 
Mathyy 
.yy 
Maxyy 
(yy 
paddleByy 
-yy  
$numyy! "
,yy" #
$numyy$ %
)yy% &
;yy& '
}zz 
else{{ 
if{{ 

({{ 
ball{{ 
.{{ 
Y{{ 
>{{ 
paddleB{{ 
+{{ 
({{  

paddleSize{{  *
/{{+ ,
$num{{- .
){{. /
&&{{0 2
ball{{3 7
.{{7 8
dY{{8 :
>{{; <
$num{{= >
){{> ?
{|| 
paddleB}} 
=}} 
Math}} 
.}} 
Min}} 
(}} 
paddleB}} 
+}}  
$num}}! "
,}}" #
height}}$ *
-}}+ ,

paddleSize}}- 7
-}}8 9
$num}}: ;
)}}; <
;}}< =
}~~ 
enemyStopwatch 
. 
Restart 
( 
) 
; 
}
 
for
 
(
 
int
 

i
 
=
 
$num
 
;
 
i
 
<
 
height
 
;
 
i
 
++
 !
)
! "
{
 
Console
 

.

 
SetCursorPosition
 
(
 
$num
 
,
 
i
  !
)
! "
;
" #
Console
 

.

 
Write
 
(
 
paddleA
 
<=
 
i
 
&&
  
i
! "
<=
# %
paddleA
& -
+
. /

paddleSize
0 :
?
; <
$char
= @
:
A B
$char
C F
)
F G
;
G H
Console
 

.

 
SetCursorPosition
 
(
 
width
 "
-
# $
$num
% &
,
& '
i
( )
)
) *
;
* +
Console
 

.

 
Write
 
(
 
paddleB
 
<=
 
i
 
&&
  
i
! "
<=
# %
paddleB
& -
+
. /

paddleSize
0 :
?
; <
$char
= @
:
A B
$char
C F
)
F G
;
G H
}
 
	stopwatch
 
.
 
Restart
 
(
 
)
 
;
 
Thread
 
.
 	
Sleep
	 
(
 
delay
 
)
 
;
 
}
 
Console
 
.
 	
SetCursorPosition
	 
(
 
(
 
int
 
)
  
ball
  $
.
$ %
X
% &
,
& '
(
( )
int
) ,
)
, -
ball
- 1
.
1 2
Y
2 3
)
3 4
;
4 5
Console
 
.
 	
Write
	 
(
 
$char
 
)
 
;
 
} 
Console 
.
 
Clear
 
(
 
)
 
;
 
if 
(
 
scoreA
 

>
 
scoreB
 
)
 
{ 
Console
 
.
 	
Write
	 
(
 
$str
 
)
 
;
 
} 
if 
(
 
scoreA
 

<
 
scoreB
 
)
 
{ 
Console
 
.
 	
Write
	 
(
 
$str
 
)
 
;
 
} 
Ball   
CreateNewBall
   
(
   
)
   
{¡¡ 
float
¢¢ 
randomFloat
¢¢ 
=
¢¢ 
(
¢¢ 
float
¢¢ 
)
¢¢ 
random
¢¢ "
.
¢¢" #

NextDouble
¢¢# -
(
¢¢- .
)
¢¢. /
*
¢¢0 1
$num
¢¢2 4
;
¢¢4 5
float
££ 
dx
££ 	
=
££
 
Math
££ 
.
££ 
Max
££ 
(
££ 
randomFloat
££  
,
££  !
$num
££" $
-
££% &
randomFloat
££' 2
)
££2 3
;
££3 4
float
¤¤ 
dy
¤¤ 	
=
¤¤
 
$num
¤¤ 
-
¤¤ 
dx
¤¤ 
;
¤¤ 
float
¥¥ 
x
¥¥ 
=
¥¥	 

width
¥¥ 
/
¥¥ 
$num
¥¥ 
;
¥¥ 
float
¦¦ 
y
¦¦ 
=
¦¦	 

height
¦¦ 
/
¦¦ 
$num
¦¦ 
;
¦¦ 
if
§§ 
(
§§ 
random
§§ 
.
§§ 
Next
§§ 
(
§§ 
$num
§§ 
)
§§ 
==
§§ 
$num
§§ 
)
§§ 
{
¨¨ 
dx
©© 
=
©© 
-
©© 
dx
©© 

;
©©
 
}
ªª 
if
«« 
(
«« 
random
«« 
.
«« 
Next
«« 
(
«« 
$num
«« 
)
«« 
==
«« 
$num
«« 
)
«« 
{
¬¬ 
dy
­­ 
=
­­ 
-
­­ 
dy
­­ 

;
­­
 
}
®® 
return
¯¯ 
new
¯¯ 
Ball
¯¯ 
{
°° 
X
±± 
=
±± 
x
±± 
,
±± 
Y
²² 
=
²² 
y
²² 
,
²² 
dX
³³ 
=
³³ 
dx
³³ 	
,
³³	 

dY
´´ 
=
´´ 
dy
´´ 	
,
´´	 

}
µµ 
;
µµ 
}¶¶ 
float¸¸ 
GetLineValue
¸¸ 
(
¸¸ 
(
¸¸ 
(
¸¸ 
float
¸¸ 
X
¸¸ 
,
¸¸ 
float
¸¸ #
Y
¸¸$ %
)
¸¸% &
A
¸¸' (
,
¸¸( )
(
¸¸* +
float
¸¸+ 0
X
¸¸1 2
,
¸¸2 3
float
¸¸4 9
Y
¸¸: ;
)
¸¸; <
B
¸¸= >
)
¸¸> ?
line
¸¸@ D
,
¸¸D E
float
¸¸F K
x
¸¸L M
)
¸¸M N
{¹¹ 
if
»» 
(
»» 
line
»» 	
.
»»	 

B
»»
 
.
»» 
X
»» 
<
»» 
line
»» 
.
»» 
A
»» 
.
»» 
X
»» 
)
»» 
{
¼¼ 
(
½½ 
line
½½ 
.
½½ 
A
½½ 	
,
½½	 

line
½½ 
.
½½ 
B
½½ 
)
½½ 
=
½½ 
(
½½ 
line
½½ 
.
½½ 
B
½½ 
,
½½ 
line
½½ "
.
½½" #
A
½½# $
)
½½$ %
;
½½% &
}
¾¾ 
float
ÀÀ 
slope
ÀÀ 
=
ÀÀ 
(
ÀÀ 
line
ÀÀ 
.
ÀÀ 
B
ÀÀ 
.
ÀÀ 
Y
ÀÀ 
-
ÀÀ 
line
ÀÀ 
.
ÀÀ  
A
ÀÀ  !
.
ÀÀ! "
Y
ÀÀ" #
)
ÀÀ# $
/
ÀÀ% &
(
ÀÀ' (
line
ÀÀ( ,
.
ÀÀ, -
B
ÀÀ- .
.
ÀÀ. /
X
ÀÀ/ 0
-
ÀÀ1 2
line
ÀÀ3 7
.
ÀÀ7 8
A
ÀÀ8 9
.
ÀÀ9 :
X
ÀÀ: ;
)
ÀÀ; <
;
ÀÀ< =
float
ÂÂ 

yIntercept
ÂÂ 
=
ÂÂ 
line
ÂÂ 
.
ÂÂ 
A
ÂÂ 
.
ÂÂ 
Y
ÂÂ 
-
ÂÂ 
line
ÂÂ #
.
ÂÂ# $
A
ÂÂ$ %
.
ÂÂ% &
X
ÂÂ& '
*
ÂÂ( )
slope
ÂÂ* /
;
ÂÂ/ 0
return
ÄÄ 
x
ÄÄ 	
*
ÄÄ
 
slope
ÄÄ 
+
ÄÄ 

yIntercept
ÄÄ 
;
ÄÄ 
}ÅÅ 
publicÇÇ 
class
ÇÇ 
Ball
ÇÇ 
{ÈÈ 
public
ÉÉ 
float
ÉÉ 
X
ÉÉ 
;
ÉÉ 
public
ÊÊ 
float
ÊÊ 
Y
ÊÊ 
;
ÊÊ 
public
ËË 
float
ËË 
dX
ËË 
;
ËË 
public
ÌÌ 
float
ÌÌ 
dY
ÌÌ 
;
ÌÌ 
}ÍÍ 