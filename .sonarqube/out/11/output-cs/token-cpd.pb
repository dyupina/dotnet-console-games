Úb
PC:\ProgramData\Jenkins\.jenkins\workspace\GamePipeline\Projects\Snake\Program.cs
	Exception 	
?	 

	exception 
= 
null 
; 
char 
[ 
] 
DirectionChars 
= 
{ 
$char 
, 
$char "
," #
$char$ '
,' (
$char) ,
,, -
}. /
;/ 0
TimeSpan 
sleep	 
= 
TimeSpan 
. 
FromMilliseconds *
(* +
$num+ -
)- .
;. /
int 
width 	
=
 
Console 
. 
WindowWidth 
;  
int		 
height		 

=		 
Console		 
.		 
WindowHeight		 !
;		! "
Random

 
random

 
=

 
new

 
(

 
)

 
;

 
Tile 
[ 
, 
] 
map 
= 
new 
Tile 
[ 
width 
, 
height $
]$ %
;% &
	Direction 	
?	 

	direction 
= 
null 
; 
Queue 
< 
( 
int 

X 
, 
int 
Y 
) 
> 
snake 
= 
new !
(! "
)" #
;# $
( 
int 
X 
, 
int 
Y 
) 
= 
( 
width 
/ 
$num 
, 
height #
/$ %
$num& '
)' (
;( )
bool 
closeRequested 
= 
false 
; 
try 
{ 
Console 
. 	
CursorVisible	 
= 
false 
; 
Console 
. 	
Clear	 
( 
) 
; 
snake 
. 
Enqueue 
( 
( 
X 
, 
Y 
) 
) 
; 
map 
[ 
X 
, 
Y 	
]	 

= 
Tile 
. 
Snake 
; 
PositionFood 
( 
) 
; 
Console 
. 	
SetCursorPosition	 
( 
X 
, 
Y 
)  
;  !
Console 
. 	
Write	 
( 
$char 
) 
; 
while 
( 
! 	
	direction	 
. 
HasValue 
&& 
!  
closeRequested  .
). /
{ 
GetDirection 
( 
) 
; 
} 
while 
( 
! 	
closeRequested	 
) 
{ 
if   
(   
Console   
.   
WindowWidth   
!=   
width   "
||  # %
Console  & -
.  - .
WindowHeight  . :
!=  ; =
height  > D
)  D E
{!! 
Console"" 

.""
 
Clear"" 
("" 
)"" 
;"" 
Console## 

.##
 
Write## 
(## 
$str## =
)##= >
;##> ?
return$$ 	
;$$	 

}%% 
switch&& 
(&&	 

	direction&&
 
)&& 
{'' 
case(( 
	Direction(( 
.(( 
Up(( 
:(( 
Y(( 
--(( 
;(( 
break((  
;((  !
case)) 
	Direction)) 
.)) 
Down)) 
:)) 
Y)) 
++)) 
;)) 
break)) "
;))" #
case** 
	Direction** 
.** 
Left** 
:** 
X** 
--** 
;** 
break** "
;**" #
case++ 
	Direction++ 
.++ 
Right++ 
:++ 
X++ 
++++ 
;++ 
break++ #
;++# $
},, 
if-- 
(-- 
X-- 
<-- 	
$num--
 
||-- 
X-- 
>=-- 
width-- 
||-- 
Y.. 
<.. 
$num.. 
||..	 
Y.. 
>=.. 
height.. 
||.. 
map// 
[// 
X// 
,// 	
Y//
 
]// 
is// 
Tile// 
.// 
Snake// 
)// 
{00 
Console11 

.11
 
Clear11 
(11 
)11 
;11 
Console22 

.22
 
Write22 
(22 
$str22 %
+22& '
(22( )
snake22) .
.22. /
Count22/ 4
-225 6
$num227 8
)228 9
+22: ;
$str22< ?
)22? @
;22@ A
return33 	
;33	 

}44 
Console55 	
.55	 

SetCursorPosition55
 
(55 
X55 
,55 
Y55  
)55  !
;55! "
Console66 	
.66	 

Write66
 
(66 
DirectionChars66 
[66 
(66  
int66  #
)66# $
	direction66$ -
!66- .
]66. /
)66/ 0
;660 1
snake77 
.77 
Enqueue77 
(77 
(77 
X77 
,77 
Y77 
)77 
)77 
;77 
if88 
(88 
map88 	
[88	 

X88
 
,88 
Y88 
]88 
==88 
Tile88 
.88 
Food88 
)88 
{99 
PositionFood:: 
(:: 
):: 
;:: 
};; 
else<< 
{== 
(>> 
int>> 
x>> 	
,>>	 

int>> 
y>> 
)>> 
=>> 
snake>> 
.>> 
Dequeue>> !
(>>! "
)>>" #
;>># $
map?? 
[?? 
x?? 
,?? 	
y??
 
]?? 
=?? 
Tile?? 
.?? 
Open?? 
;?? 
Console@@ 

.@@
 
SetCursorPosition@@ 
(@@ 
x@@ 
,@@ 
y@@  !
)@@! "
;@@" #
ConsoleAA 

.AA
 
WriteAA 
(AA 
$charAA 
)AA 
;AA 
}BB 
mapCC 
[CC 
XCC 
,CC 
YCC	 

]CC
 
=CC 
TileCC 
.CC 
SnakeCC 
;CC 
ifDD 
(DD 
ConsoleDD 
.DD 
KeyAvailableDD 
)DD 
{EE 
GetDirectionFF 
(FF 
)FF 
;FF 
}GG 
SystemHH 
.HH 	
	ThreadingHH	 
.HH 
ThreadHH 
.HH 
SleepHH 
(HH  
sleepHH  %
)HH% &
;HH& '
}II 
}JJ 
catchKK 
(KK 
	ExceptionKK 
eKK 
)KK 
{LL 
	exceptionMM 

=MM 
eMM 
;MM 
throwNN 
;NN 
}OO 
finallyPP 
{QQ 
ConsoleRR 
.RR 	
CursorVisibleRR	 
=RR 
trueRR 
;RR 
ConsoleSS 
.SS 	
ClearSS	 
(SS 
)SS 
;SS 
ConsoleTT 
.TT 	
	WriteLineTT	 
(TT 
	exceptionTT 
?TT 
.TT 
ToStringTT &
(TT& '
)TT' (
??TT) +
$strTT, ?
)TT? @
;TT@ A
}UU 
voidWW 
GetDirectionWW 
(WW 
)WW 
{XX 
switchYY 
(YY 	
ConsoleYY	 
.YY 
ReadKeyYY 
(YY 
trueYY 
)YY 
.YY 
KeyYY "
)YY" #
{ZZ 
case[[ 

ConsoleKey[[ 
.[[ 
UpArrow[[ 
:[[ 
	direction[[ '
=[[( )
	Direction[[* 3
.[[3 4
Up[[4 6
;[[6 7
break[[8 =
;[[= >
case\\ 

ConsoleKey\\ 
.\\ 
	DownArrow\\ 
:\\ 
	direction\\ '
=\\( )
	Direction\\* 3
.\\3 4
Down\\4 8
;\\8 9
break\\: ?
;\\? @
case]] 

ConsoleKey]] 
.]] 
	LeftArrow]] 
:]] 
	direction]] '
=]]( )
	Direction]]* 3
.]]3 4
Left]]4 8
;]]8 9
break]]: ?
;]]? @
case^^ 

ConsoleKey^^ 
.^^ 

RightArrow^^ 
:^^ 
	direction^^ '
=^^( )
	Direction^^* 3
.^^3 4
Right^^4 9
;^^9 :
break^^; @
;^^@ A
case__ 

ConsoleKey__ 
.__ 
Escape__ 
:__ 
closeRequested__ ,
=__- .
true__/ 3
;__3 4
break__5 :
;__: ;
}`` 
}aa 
voidcc 
PositionFoodcc 
(cc 
)cc 
{dd 
Listee 
<ee 
(ee 
intee 

Xee 
,ee 
intee 
Yee 
)ee 
>ee 
possibleCoordinatesee )
=ee* +
newee, /
(ee/ 0
)ee0 1
;ee1 2
forff 
(ff 
intff 	
iff
 
=ff 
$numff 
;ff 
iff 
<ff 
widthff 
;ff 
iff 
++ff 
)ff  
{gg 
forhh 
(hh 
inthh 

jhh 
=hh 
$numhh 
;hh 
jhh 
<hh 
heighthh 
;hh 
jhh 
++hh !
)hh! "
{ii 
ifjj 
(jj 
mapjj 

[jj
 
ijj 
,jj 
jjj 
]jj 
isjj 
Tilejj 
.jj 
Openjj 
)jj 
{kk 
possibleCoordinatesll 
.ll 
Addll 
(ll 
(ll 
ill 
,ll 
jll  !
)ll! "
)ll" #
;ll# $
}mm 
}nn 
}oo 
intpp 
indexpp 

=pp 
randompp 
.pp 
Nextpp 
(pp 
possibleCoordinatespp ,
.pp, -
Countpp- 2
)pp2 3
;pp3 4
(qq 
intqq 
Xqq 
,qq 
intqq	 
Yqq 
)qq 
=qq 
possibleCoordinatesqq %
[qq% &
indexqq& +
]qq+ ,
;qq, -
maprr 
[rr 
Xrr 
,rr 
Yrr 	
]rr	 

=rr 
Tilerr 
.rr 
Foodrr 
;rr 
Consoless 
.ss 	
SetCursorPositionss	 
(ss 
Xss 
,ss 
Yss 
)ss  
;ss  !
Consolett 
.tt 	
Writett	 
(tt 
$chartt 
)tt 
;tt 
}uu 
enumww 
	Directionww 
{xx 
Upyy 
=yy 
$numyy 
,yy 
Downzz 
=zz 
$numzz 	
,zz	 

Left{{ 
={{ 
$num{{ 	
,{{	 

Right|| 
=|| 
$num||	 

,||
 
}}} 
enum 
Tile 	
{ 
Open
 
=
 
$num
 	
,
	 

Snake
 
,
 
Food
 
,
 
} 