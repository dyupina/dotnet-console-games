Бо
PC:\ProgramData\Jenkins\.jenkins\workspace\GamePipeline\Projects\Tanks\Program.cs
string 
[ 
] 
Tank	 
= 
new 
string 
[ 
] 
{ 
null 
, 
$str

 	
+


 
$str

 
+

 
$str 	
+
 
$str 
+ 
$str 	
+
 
$str 
, 
$str 	
+
 
$str 
+ 
$str 	
+
 
$str 
+ 
$str 	
+
 
$str 
, 
$str 	
+
 
$str 
+ 
$str 	
+
 
$str 
+ 
$str 	
+
 
$str 
, 
$str 	
+
 
$str 
+ 
$str 	
+
 
$str 
+ 
$str 	
+
 
$str 
, 
} 
; 
string 
[ 
] 
TankShooting	 
= 
new 
string "
[" #
]# $
{ 
null 
, 
$str!! 	
+!!
 
$str!! 
+!! 
$str"" 	
+""
 
$str"" 
+"" 
$str## 	
+##
 
$str## 
,## 
$str%% 	
+%%
 
$str%% 
+%% 
$str&& 	
+&&
 
$str&& 
+&& 
$str'' 	
+''
 
$str'' 
,'' 
$str)) 	
+))
 
$str)) 
+)) 
$str** 	
+**
 
$str** 
+** 
$str++ 	
+++
 
$str++ 
,++ 
$str-- 	
+--
 
$str-- 
+-- 
$str.. 	
+..
 
$str.. 
+.. 
$str// 	
+//
 
$str// 
,// 
}11 
;11 
string33 
[33 
]33 
TankExploding33	 
=33 
new33 
string33 #
[33# $
]33$ %
{44 
$str77 	
+77
 
$str77 
+77 
$str88 	
+88
 
$str88 
+88 
$str99 	
+99
 
$str99 
,99 
$str;; 	
+;;
 
$str;; 
+;; 
$str<< 	
+<<
 
$str<< 
+<< 
$str== 	
+==
 
$str== 
,== 
$str?? 	
+??
 
$str?? 
+?? 
$str@@ 	
+@@
 
$str@@ 
+@@ 
$strAA 	
+AA
 
$strAA 
,AA 
}CC 
;CC 
charEE 
[EE 
]EE 
BulletEE 
=EE 
newEE 
charEE 
[EE 
]EE 
{FF 
defaultHH 
,HH 	
$charII 
,II 
$charJJ 
,JJ 
$charKK 
,KK 
$charLL 
,LL 
}NN 
;NN 
stringPP 
MapPP 

=PP 
$strRR O
+RRP Q
$strRRR V
+RRW X
$strSS O
+SSP Q
$strSSR V
+SSW X
$strTT O
+TTP Q
$strTTR V
+TTW X
$strUU O
+UUP Q
$strUUR V
+UUW X
$strVV O
+VVP Q
$strVVR V
+VVW X
$strWW O
+WWP Q
$strWWR V
+WWW X
$strXX O
+XXP Q
$strXXR V
+XXW X
$strYY O
+YYP Q
$strYYR V
+YYW X
$strZZ O
+ZZP Q
$strZZR V
+ZZW X
$str[[ O
+[[P Q
$str[[R V
+[[W X
$str\\ O
+\\P Q
$str\\R V
+\\W X
$str]] O
+]]P Q
$str]]R V
+]]W X
$str^^ O
+^^P Q
$str^^R V
+^^W X
$str__ O
+__P Q
$str__R V
+__W X
$str`` O
+``P Q
$str``R V
+``W X
$straa O
+aaP Q
$straaR V
+aaW X
$strbb O
+bbP Q
$strbbR V
+bbW X
$strcc O
+ccP Q
$strccR V
+ccW X
$strdd O
+ddP Q
$strddR V
+ddW X
$stree O
+eeP Q
$streeR V
+eeW X
$strff O
+ffP Q
$strffR V
+ffW X
$strgg O
+ggP Q
$strggR V
+ggW X
$strhh O
+hhP Q
$strhhR V
+hhW X
$strii O
+iiP Q
$striiR V
+iiW X
$strjj O
+jjP Q
$strjjR V
+jjW X
$strkk O
+kkP Q
$strkkR V
+kkW X
$strll O
+llP Q
$strllR V
+llW X
$strmm O
+mmP Q
$strmmR V
;mmV W
varpp 
Tankspp 	
=pp
 
newpp 
Listpp 
<pp 
Tankpp 
>pp 
(pp 
)pp 
;pp 
varqq 
AllTanksqq 
=qq 
newqq 
Listqq 
<qq 
Tankqq 
>qq 
(qq 
)qq 
;qq  
varrr 
Playerrr 

=rr 
newrr 
Tankrr 
(rr 
)rr 
{rr 
Xrr 
=rr 
$numrr  
,rr  !
Yrr" #
=rr$ %
$numrr& (
,rr( )
IsPlayerrr* 2
=rr3 4
truerr5 9
}rr: ;
;rr; <
varss 
randomss 

=ss 
newss 
Randomss 
(ss 
)ss 
;ss 
Tanksuu 
.uu 
Adduu 	
(uu	 

Playeruu
 
)uu 
;uu 
Tanksvv 
.vv 
Addvv 	
(vv	 

newvv
 
Tankvv 
(vv 
)vv 
{vv 
Xvv 
=vv 
$numvv 
,vv 
Yvv  
=vv! "
$numvv# %
,vv% &
}vv' (
)vv( )
;vv) *
Tanksww 
.ww 
Addww 	
(ww	 

newww
 
Tankww 
(ww 
)ww 
{ww 
Xww 
=ww 
$numww 
,ww 
Yww  
=ww! "
$numww# %
,ww% &
}ww' (
)ww( )
;ww) *
Tanksxx 
.xx 
Addxx 	
(xx	 

newxx
 
Tankxx 
(xx 
)xx 
{xx 
Xxx 
=xx 
$numxx 
,xx 
Yxx  
=xx! "
$numxx# %
,xx% &
}xx' (
)xx( )
;xx) *
AllTanksyy 
.yy 	
AddRangeyy	 
(yy 
Tanksyy 
)yy 
;yy 
Console{{ 
.{{ 
CursorVisible{{ 
={{ 
false{{ 
;{{ 
if|| 
(|| 
OperatingSystem|| 
.|| 
	IsWindows|| 
(|| 
)|| 
)||  
{}} 
Console~~ 
.~~ 	
WindowWidth~~	 
=~~ 
Math~~ 
.~~ 
Max~~ 
(~~  
Console~~  '
.~~' (
WindowWidth~~( 3
,~~3 4
$num~~5 7
)~~7 8
;~~8 9
Console 
. 	
WindowHeight	 
= 
Math 
. 
Max  
(  !
Console! (
.( )
WindowHeight) 5
,5 6
$num7 9
)9 :
;: ;
}АА 
ConsoleББ 
.
ББ 
Clear
ББ 
(
ББ 
)
ББ 
;
ББ 
ConsoleВВ 
.
ВВ 
SetCursorPosition
ВВ 
(
ВВ 
$num
ВВ 
,
ВВ 
$num
ВВ 
)
ВВ 
;
ВВ  
RenderГГ 
(
ГГ 
Map
ГГ 

)
ГГ
 
;
ГГ 
ConsoleДД 
.
ДД 
	WriteLine
ДД 
(
ДД 
)
ДД 
;
ДД 
ConsoleЕЕ 
.
ЕЕ 
	WriteLine
ЕЕ 
(
ЕЕ 
$str
ЕЕ R
)
ЕЕR S
;
ЕЕS T
staticЙЙ 
void
ЙЙ 
Render
ЙЙ 
(
ЙЙ 
string
ЙЙ 
@string
ЙЙ !
,
ЙЙ! "
bool
ЙЙ# '
renderSpace
ЙЙ( 3
=
ЙЙ4 5
false
ЙЙ6 ;
)
ЙЙ; <
{КК 
int
ЛЛ 
x
ЛЛ 
=
ЛЛ 
Console
ЛЛ	 
.
ЛЛ 

CursorLeft
ЛЛ 
;
ЛЛ 
int
ММ 
y
ММ 
=
ММ 
Console
ММ	 
.
ММ 
	CursorTop
ММ 
;
ММ 
foreach
НН 
(
НН	 

char
НН
 
c
НН 
in
НН 
@string
НН 
)
НН 
if
ОО 
(
ОО 
c
ОО 
is
ОО 

$char
ОО 
)
ОО 
Console
ОО 
.
ОО 
SetCursorPosition
ОО *
(
ОО* +
x
ОО+ ,
,
ОО, -
++
ОО. 0
y
ОО0 1
)
ОО1 2
;
ОО2 3
else
ПП 
if
ПП 	
(
ПП
 
c
ПП 
is
ПП 
not
ПП 
$char
ПП 
||
ПП 
renderSpace
ПП &
)
ПП& '
Console
ПП( /
.
ПП/ 0
Write
ПП0 5
(
ПП5 6
c
ПП6 7
)
ПП7 8
;
ПП8 9
else
РР 
Console
РР 
.
РР 
SetCursorPosition
РР  
(
РР  !
Console
РР! (
.
РР( )

CursorLeft
РР) 3
+
РР4 5
$num
РР6 7
,
РР7 8
Console
РР9 @
.
РР@ A
	CursorTop
РРA J
)
РРJ K
;
РРK L
}СС 
whileХХ 
(
ХХ 
Tanks
ХХ 
.
ХХ 
Contains
ХХ 
(
ХХ 
Player
ХХ 
)
ХХ 
&&
ХХ  
Tanks
ХХ! &
.
ХХ& '
Count
ХХ' ,
>
ХХ- .
$num
ХХ/ 0
)
ХХ0 1
{ЦЦ 
foreach
ЩЩ 
(
ЩЩ	 

var
ЩЩ
 
tank
ЩЩ 
in
ЩЩ 
Tanks
ЩЩ 
)
ЩЩ 
{
ЪЪ 
if
ЭЭ 
(
ЭЭ 
tank
ЭЭ 

.
ЭЭ
 

IsShooting
ЭЭ 
)
ЭЭ 
{
ЮЮ 
tank
ЯЯ 
.
ЯЯ 
Bullet
ЯЯ 
=
ЯЯ 
new
ЯЯ 
Bullet
ЯЯ 
(
ЯЯ 
)
ЯЯ 
{
†† 
X
°° 
=
°° 
tank
°° 
.
°° 
	Direction
°° 
switch
°° 
{
ҐҐ 
	Direction
££ 
.
££ 
Left
££ 
=>
££ 
tank
££ 
.
££ 
X
££ 
-
££ 
$num
££  !
,
££! "
	Direction
§§ 
.
§§ 
Right
§§ 
=>
§§ 
tank
§§ 
.
§§ 
X
§§ 
+
§§  
$num
§§! "
,
§§" #
_
•• 
=>
•• 	
tank
••
 
.
•• 
X
•• 
,
•• 
}
¶¶ 
,
¶¶ 
Y
ІІ 
=
ІІ 
tank
ІІ 
.
ІІ 
	Direction
ІІ 
switch
ІІ 
{
®® 
	Direction
©© 
.
©© 
Up
©© 
=>
©© 
tank
©© 
.
©© 
Y
©© 
-
©© 
$num
©© 
,
©©  
	Direction
™™ 
.
™™ 
Down
™™ 
=>
™™ 
tank
™™ 
.
™™ 
Y
™™ 
+
™™ 
$num
™™  !
,
™™! "
_
ЂЂ 
=>
ЂЂ 	
tank
ЂЂ
 
.
ЂЂ 
Y
ЂЂ 
,
ЂЂ 
}
ђђ 
,
ђђ 
	Direction
≠≠ 
=
≠≠ 
tank
≠≠ 
.
≠≠ 
	Direction
≠≠ 
,
≠≠ 
}
ЃЃ 
;
ЃЃ 
tank
ѓѓ 
.
ѓѓ 

IsShooting
ѓѓ 
=
ѓѓ 
false
ѓѓ 
;
ѓѓ 
continue
∞∞ 
;
∞∞ 
}
±± 
if
ЈЈ 
(
ЈЈ 
tank
ЈЈ 

.
ЈЈ
 
IsExploding
ЈЈ 
)
ЈЈ 
{
ЄЄ 
tank
єє 
.
єє 
ExplodingFrame
єє 
++
єє 
;
єє 
Console
ЇЇ 

.
ЇЇ
 
SetCursorPosition
ЇЇ 
(
ЇЇ 
tank
ЇЇ !
.
ЇЇ! "
X
ЇЇ" #
-
ЇЇ$ %
$num
ЇЇ& '
,
ЇЇ' (
tank
ЇЇ) -
.
ЇЇ- .
Y
ЇЇ. /
-
ЇЇ0 1
$num
ЇЇ2 3
)
ЇЇ3 4
;
ЇЇ4 5
Render
її 	
(
її	 

tank
її
 
.
її 
ExplodingFrame
її 
>
її 
$num
її  !
?
ЉЉ 
TankExploding
ЉЉ 
[
ЉЉ 
$num
ЉЉ 
]
ЉЉ 
:
љљ 
TankExploding
љљ 
[
љљ 
tank
љљ 
.
љљ 
ExplodingFrame
љљ '
%
љљ( )
$num
љљ* +
]
љљ+ ,
,
љљ, -
true
љљ. 2
)
љљ2 3
;
љљ3 4
continue
ЊЊ 
;
ЊЊ 
}
њњ 
bool
≈≈ 
	MoveCheck
≈≈ 
(
≈≈ 
Tank
≈≈ 

movingTank
≈≈  
,
≈≈  !
int
≈≈" %
X
≈≈& '
,
≈≈' (
int
≈≈) ,
Y
≈≈- .
)
≈≈. /
{
∆∆ 
foreach
«« 

(
«« 
var
«« 
tank
«« 
in
«« 
Tanks
«« 
)
«« 
{
»» 
if
…… 
(
…… 
tank
…… 
==
…… 

movingTank
…… 
)
…… 
{
   
continue
ЋЋ 
;
ЋЋ 
}
ћћ 
if
ЌЌ 
(
ЌЌ 
Math
ЌЌ 
.
ЌЌ 
Abs
ЌЌ 
(
ЌЌ 
tank
ЌЌ 
.
ЌЌ 
X
ЌЌ 
-
ЌЌ 
X
ЌЌ 
)
ЌЌ 
<=
ЌЌ 
$num
ЌЌ  !
&&
ЌЌ" $
Math
ЌЌ% )
.
ЌЌ) *
Abs
ЌЌ* -
(
ЌЌ- .
tank
ЌЌ. 2
.
ЌЌ2 3
Y
ЌЌ3 4
-
ЌЌ5 6
Y
ЌЌ7 8
)
ЌЌ8 9
<=
ЌЌ: <
$num
ЌЌ= >
)
ЌЌ> ?
{
ќќ 
return
ѕѕ 
false
ѕѕ 
;
ѕѕ 
}
–– 
}
—— 
if
““ 
(
““ 
X
““ 
<
““	 

$num
““ 
||
““ 
X
““ 
>
““ 
$num
““ 
||
““ 
Y
““ 
<
““ 
$num
““ 
||
““  "
Y
““# $
>
““% &
$num
““' )
)
““) *
{
”” 
return
‘‘ 

false
‘‘ 
;
‘‘ 
}
’’ 
if
÷÷ 
(
÷÷ 
$num
÷÷ 
<
÷÷	 

X
÷÷ 
&&
÷÷ 
X
÷÷ 
<
÷÷ 
$num
÷÷ 
&&
÷÷ 
$num
÷÷ 
<
÷÷ 
Y
÷÷  
&&
÷÷! #
Y
÷÷$ %
<
÷÷& '
$num
÷÷( *
)
÷÷* +
{
„„ 
return
ЎЎ 

false
ЎЎ 
;
ЎЎ 
}
ўў 
if
ЏЏ 
(
ЏЏ 
$num
ЏЏ 	
<
ЏЏ
 
X
ЏЏ 
&&
ЏЏ 
X
ЏЏ 
<
ЏЏ 
$num
ЏЏ 
&&
ЏЏ 
$num
ЏЏ 
<
ЏЏ 
Y
ЏЏ  
&&
ЏЏ! #
Y
ЏЏ$ %
<
ЏЏ& '
$num
ЏЏ( )
)
ЏЏ) *
{
џџ 
return
№№ 

false
№№ 
;
№№ 
}
ЁЁ 
if
ёё 
(
ёё 
$num
ёё 	
<
ёё
 
X
ёё 
&&
ёё 
X
ёё 
<
ёё 
$num
ёё 
&&
ёё 
$num
ёё 
<
ёё 
Y
ёё  !
&&
ёё" $
Y
ёё% &
<
ёё' (
$num
ёё) +
)
ёё+ ,
{
яя 
return
аа 

false
аа 
;
аа 
}
бб 
if
вв 
(
вв 
$num
вв 	
<
вв
 
X
вв 
&&
вв 
X
вв 
<
вв 
$num
вв 
&&
вв 
$num
вв 
<
вв 
Y
вв  !
&&
вв" $
Y
вв% &
<
вв' (
$num
вв) +
)
вв+ ,
{
гг 
return
дд 

false
дд 
;
дд 
}
ее 
return
жж 	
true
жж
 
;
жж 
}
зз 
void
нн 
TryMove
нн 
(
нн 
	Direction
нн 
	direction
нн "
)
нн" #
{
оо 
switch
пп 	
(
пп
 
	direction
пп 
)
пп 
{
рр 
case
сс 
	Direction
сс	 
.
сс 
Up
сс 
:
сс 
if
тт 
(
тт 	
	MoveCheck
тт	 
(
тт 
tank
тт 
,
тт 
tank
тт 
.
тт 
X
тт 
,
тт  
tank
тт! %
.
тт% &
Y
тт& '
-
тт( )
$num
тт* +
)
тт+ ,
)
тт, -
{
уу 
Console
фф 
.
фф 
SetCursorPosition
фф 
(
фф  
tank
фф  $
.
фф$ %
X
фф% &
-
фф' (
$num
фф) *
,
фф* +
tank
фф, 0
.
фф0 1
Y
фф1 2
+
фф3 4
$num
фф5 6
)
фф6 7
;
фф7 8
Console
хх 
.
хх 
Write
хх 
(
хх 
$char
хх 
)
хх 
;
хх 
Console
цц 
.
цц 
SetCursorPosition
цц 
(
цц  
tank
цц  $
.
цц$ %
X
цц% &
-
цц' (
$num
цц) *
,
цц* +
tank
цц, 0
.
цц0 1
Y
цц1 2
+
цц3 4
$num
цц5 6
)
цц6 7
;
цц7 8
Console
чч 
.
чч 
Write
чч 
(
чч 
$char
чч 
)
чч 
;
чч 
Console
шш 
.
шш 
SetCursorPosition
шш 
(
шш  
tank
шш  $
.
шш$ %
X
шш% &
,
шш& '
tank
шш( ,
.
шш, -
Y
шш- .
+
шш/ 0
$num
шш1 2
)
шш2 3
;
шш3 4
Console
щщ 
.
щщ 
Write
щщ 
(
щщ 
$char
щщ 
)
щщ 
;
щщ 
Console
ъъ 
.
ъъ 
SetCursorPosition
ъъ 
(
ъъ  
tank
ъъ  $
.
ъъ$ %
X
ъъ% &
+
ъъ' (
$num
ъъ) *
,
ъъ* +
tank
ъъ, 0
.
ъъ0 1
Y
ъъ1 2
+
ъъ3 4
$num
ъъ5 6
)
ъъ6 7
;
ъъ7 8
Console
ыы 
.
ыы 
Write
ыы 
(
ыы 
$char
ыы 
)
ыы 
;
ыы 
Console
ьь 
.
ьь 
SetCursorPosition
ьь 
(
ьь  
tank
ьь  $
.
ьь$ %
X
ьь% &
+
ьь' (
$num
ьь) *
,
ьь* +
tank
ьь, 0
.
ьь0 1
Y
ьь1 2
+
ьь3 4
$num
ьь5 6
)
ьь6 7
;
ьь7 8
Console
ээ 
.
ээ 
Write
ээ 
(
ээ 
$char
ээ 
)
ээ 
;
ээ 
tank
юю 

.
юю
 
Y
юю 
--
юю 
;
юю 
}
€€ 
break
АА 

;
АА
 
case
ББ 
	Direction
ББ	 
.
ББ 
Down
ББ 
:
ББ 
if
ВВ 
(
ВВ 	
	MoveCheck
ВВ	 
(
ВВ 
tank
ВВ 
,
ВВ 
tank
ВВ 
.
ВВ 
X
ВВ 
,
ВВ  
tank
ВВ! %
.
ВВ% &
Y
ВВ& '
+
ВВ( )
$num
ВВ* +
)
ВВ+ ,
)
ВВ, -
{
ГГ 
Console
ДД 
.
ДД 
SetCursorPosition
ДД 
(
ДД  
tank
ДД  $
.
ДД$ %
X
ДД% &
-
ДД' (
$num
ДД) *
,
ДД* +
tank
ДД, 0
.
ДД0 1
Y
ДД1 2
-
ДД3 4
$num
ДД5 6
)
ДД6 7
;
ДД7 8
Console
ЕЕ 
.
ЕЕ 
Write
ЕЕ 
(
ЕЕ 
$char
ЕЕ 
)
ЕЕ 
;
ЕЕ 
Console
ЖЖ 
.
ЖЖ 
SetCursorPosition
ЖЖ 
(
ЖЖ  
tank
ЖЖ  $
.
ЖЖ$ %
X
ЖЖ% &
-
ЖЖ' (
$num
ЖЖ) *
,
ЖЖ* +
tank
ЖЖ, 0
.
ЖЖ0 1
Y
ЖЖ1 2
-
ЖЖ3 4
$num
ЖЖ5 6
)
ЖЖ6 7
;
ЖЖ7 8
Console
ЗЗ 
.
ЗЗ 
Write
ЗЗ 
(
ЗЗ 
$char
ЗЗ 
)
ЗЗ 
;
ЗЗ 
Console
ИИ 
.
ИИ 
SetCursorPosition
ИИ 
(
ИИ  
tank
ИИ  $
.
ИИ$ %
X
ИИ% &
,
ИИ& '
tank
ИИ( ,
.
ИИ, -
Y
ИИ- .
-
ИИ/ 0
$num
ИИ1 2
)
ИИ2 3
;
ИИ3 4
Console
ЙЙ 
.
ЙЙ 
Write
ЙЙ 
(
ЙЙ 
$char
ЙЙ 
)
ЙЙ 
;
ЙЙ 
Console
КК 
.
КК 
SetCursorPosition
КК 
(
КК  
tank
КК  $
.
КК$ %
X
КК% &
+
КК' (
$num
КК) *
,
КК* +
tank
КК, 0
.
КК0 1
Y
КК1 2
-
КК3 4
$num
КК5 6
)
КК6 7
;
КК7 8
Console
ЛЛ 
.
ЛЛ 
Write
ЛЛ 
(
ЛЛ 
$char
ЛЛ 
)
ЛЛ 
;
ЛЛ 
Console
ММ 
.
ММ 
SetCursorPosition
ММ 
(
ММ  
tank
ММ  $
.
ММ$ %
X
ММ% &
+
ММ' (
$num
ММ) *
,
ММ* +
tank
ММ, 0
.
ММ0 1
Y
ММ1 2
-
ММ3 4
$num
ММ5 6
)
ММ6 7
;
ММ7 8
Console
НН 
.
НН 
Write
НН 
(
НН 
$char
НН 
)
НН 
;
НН 
tank
ОО 

.
ОО
 
Y
ОО 
++
ОО 
;
ОО 
}
ПП 
break
РР 

;
РР
 
case
СС 
	Direction
СС	 
.
СС 
Left
СС 
:
СС 
if
ТТ 
(
ТТ 	
	MoveCheck
ТТ	 
(
ТТ 
tank
ТТ 
,
ТТ 
tank
ТТ 
.
ТТ 
X
ТТ 
-
ТТ  !
$num
ТТ" #
,
ТТ# $
tank
ТТ% )
.
ТТ) *
Y
ТТ* +
)
ТТ+ ,
)
ТТ, -
{
УУ 
Console
ФФ 
.
ФФ 
SetCursorPosition
ФФ 
(
ФФ  
tank
ФФ  $
.
ФФ$ %
X
ФФ% &
+
ФФ' (
$num
ФФ) *
,
ФФ* +
tank
ФФ, 0
.
ФФ0 1
Y
ФФ1 2
-
ФФ3 4
$num
ФФ5 6
)
ФФ6 7
;
ФФ7 8
Console
ХХ 
.
ХХ 
Write
ХХ 
(
ХХ 
$char
ХХ 
)
ХХ 
;
ХХ 
Console
ЦЦ 
.
ЦЦ 
SetCursorPosition
ЦЦ 
(
ЦЦ  
tank
ЦЦ  $
.
ЦЦ$ %
X
ЦЦ% &
+
ЦЦ' (
$num
ЦЦ) *
,
ЦЦ* +
tank
ЦЦ, 0
.
ЦЦ0 1
Y
ЦЦ1 2
)
ЦЦ2 3
;
ЦЦ3 4
Console
ЧЧ 
.
ЧЧ 
Write
ЧЧ 
(
ЧЧ 
$char
ЧЧ 
)
ЧЧ 
;
ЧЧ 
Console
ШШ 
.
ШШ 
SetCursorPosition
ШШ 
(
ШШ  
tank
ШШ  $
.
ШШ$ %
X
ШШ% &
+
ШШ' (
$num
ШШ) *
,
ШШ* +
tank
ШШ, 0
.
ШШ0 1
Y
ШШ1 2
+
ШШ3 4
$num
ШШ5 6
)
ШШ6 7
;
ШШ7 8
Console
ЩЩ 
.
ЩЩ 
Write
ЩЩ 
(
ЩЩ 
$char
ЩЩ 
)
ЩЩ 
;
ЩЩ 
tank
ЪЪ 

.
ЪЪ
 
X
ЪЪ 
--
ЪЪ 
;
ЪЪ 
}
ЫЫ 
break
ЬЬ 

;
ЬЬ
 
case
ЭЭ 
	Direction
ЭЭ	 
.
ЭЭ 
Right
ЭЭ 
:
ЭЭ 
if
ЮЮ 
(
ЮЮ 	
	MoveCheck
ЮЮ	 
(
ЮЮ 
tank
ЮЮ 
,
ЮЮ 
tank
ЮЮ 
.
ЮЮ 
X
ЮЮ 
+
ЮЮ  !
$num
ЮЮ" #
,
ЮЮ# $
tank
ЮЮ% )
.
ЮЮ) *
Y
ЮЮ* +
)
ЮЮ+ ,
)
ЮЮ, -
{
ЯЯ 
Console
†† 
.
†† 
SetCursorPosition
†† 
(
††  
tank
††  $
.
††$ %
X
††% &
-
††' (
$num
††) *
,
††* +
tank
††, 0
.
††0 1
Y
††1 2
-
††3 4
$num
††5 6
)
††6 7
;
††7 8
Console
°° 
.
°° 
Write
°° 
(
°° 
$char
°° 
)
°° 
;
°° 
Console
ҐҐ 
.
ҐҐ 
SetCursorPosition
ҐҐ 
(
ҐҐ  
tank
ҐҐ  $
.
ҐҐ$ %
X
ҐҐ% &
-
ҐҐ' (
$num
ҐҐ) *
,
ҐҐ* +
tank
ҐҐ, 0
.
ҐҐ0 1
Y
ҐҐ1 2
)
ҐҐ2 3
;
ҐҐ3 4
Console
££ 
.
££ 
Write
££ 
(
££ 
$char
££ 
)
££ 
;
££ 
Console
§§ 
.
§§ 
SetCursorPosition
§§ 
(
§§  
tank
§§  $
.
§§$ %
X
§§% &
-
§§' (
$num
§§) *
,
§§* +
tank
§§, 0
.
§§0 1
Y
§§1 2
+
§§3 4
$num
§§5 6
)
§§6 7
;
§§7 8
Console
•• 
.
•• 
Write
•• 
(
•• 
$char
•• 
)
•• 
;
•• 
tank
¶¶ 

.
¶¶
 
X
¶¶ 
++
¶¶ 
;
¶¶ 
}
ІІ 
break
®® 

;
®®
 
}
©© 
}
™™ 
if
ЃЃ 
(
ЃЃ 
tank
ЃЃ 

.
ЃЃ
 
IsPlayer
ЃЃ 
)
ЃЃ 
{
ѓѓ 
	Direction
≤≤ 
?
≤≤ 
move
≤≤ 
=
≤≤ 
null
≤≤ 
;
≤≤ 
	Direction
≥≥ 
?
≥≥ 
shoot
≥≥ 
=
≥≥ 
null
≥≥ 
;
≥≥ 
while
µµ 
(
µµ	 

Console
µµ
 
.
µµ 
KeyAvailable
µµ 
)
µµ 
{
ґґ 
switch
ЈЈ 

(
ЈЈ 
Console
ЈЈ 
.
ЈЈ 
ReadKey
ЈЈ 
(
ЈЈ 
true
ЈЈ  
)
ЈЈ  !
.
ЈЈ! "
Key
ЈЈ" %
)
ЈЈ% &
{
ЄЄ 
case
ЇЇ 	

ConsoleKey
ЇЇ
 
.
ЇЇ 
W
ЇЇ 
:
ЇЇ 
move
ЇЇ 
=
ЇЇ 
move
ЇЇ #
.
ЇЇ# $
HasValue
ЇЇ$ ,
?
ЇЇ- .
	Direction
ЇЇ/ 8
.
ЇЇ8 9
Null
ЇЇ9 =
:
ЇЇ> ?
	Direction
ЇЇ@ I
.
ЇЇI J
Up
ЇЇJ L
;
ЇЇL M
break
ЇЇN S
;
ЇЇS T
case
її 	

ConsoleKey
її
 
.
її 
S
її 
:
її 
move
її 
=
її 
move
її #
.
її# $
HasValue
її$ ,
?
її- .
	Direction
її/ 8
.
її8 9
Null
її9 =
:
її> ?
	Direction
її@ I
.
їїI J
Down
їїJ N
;
їїN O
break
їїP U
;
їїU V
case
ЉЉ 	

ConsoleKey
ЉЉ
 
.
ЉЉ 
A
ЉЉ 
:
ЉЉ 
move
ЉЉ 
=
ЉЉ 
move
ЉЉ #
.
ЉЉ# $
HasValue
ЉЉ$ ,
?
ЉЉ- .
	Direction
ЉЉ/ 8
.
ЉЉ8 9
Null
ЉЉ9 =
:
ЉЉ> ?
	Direction
ЉЉ@ I
.
ЉЉI J
Left
ЉЉJ N
;
ЉЉN O
break
ЉЉP U
;
ЉЉU V
case
љљ 	

ConsoleKey
љљ
 
.
љљ 
D
љљ 
:
љљ 
move
љљ 
=
љљ 
move
љљ #
.
љљ# $
HasValue
љљ$ ,
?
љљ- .
	Direction
љљ/ 8
.
љљ8 9
Null
љљ9 =
:
љљ> ?
	Direction
љљ@ I
.
љљI J
Right
љљJ O
;
љљO P
break
љљQ V
;
љљV W
case
јј 	

ConsoleKey
јј
 
.
јј 
UpArrow
јј 
:
јј 
shoot
јј #
=
јј$ %
shoot
јј& +
.
јј+ ,
HasValue
јј, 4
?
јј5 6
	Direction
јј7 @
.
јј@ A
Null
јјA E
:
јјF G
	Direction
јјH Q
.
јјQ R
Up
јјR T
;
јјT U
break
јјV [
;
јј[ \
case
ЅЅ 	

ConsoleKey
ЅЅ
 
.
ЅЅ 
	DownArrow
ЅЅ 
:
ЅЅ 
shoot
ЅЅ  %
=
ЅЅ& '
shoot
ЅЅ( -
.
ЅЅ- .
HasValue
ЅЅ. 6
?
ЅЅ7 8
	Direction
ЅЅ9 B
.
ЅЅB C
Null
ЅЅC G
:
ЅЅH I
	Direction
ЅЅJ S
.
ЅЅS T
Down
ЅЅT X
;
ЅЅX Y
break
ЅЅZ _
;
ЅЅ_ `
case
¬¬ 	

ConsoleKey
¬¬
 
.
¬¬ 
	LeftArrow
¬¬ 
:
¬¬ 
shoot
¬¬  %
=
¬¬& '
shoot
¬¬( -
.
¬¬- .
HasValue
¬¬. 6
?
¬¬7 8
	Direction
¬¬9 B
.
¬¬B C
Null
¬¬C G
:
¬¬H I
	Direction
¬¬J S
.
¬¬S T
Left
¬¬T X
;
¬¬X Y
break
¬¬Z _
;
¬¬_ `
case
√√ 	

ConsoleKey
√√
 
.
√√ 

RightArrow
√√ 
:
√√  
shoot
√√! &
=
√√' (
shoot
√√) .
.
√√. /
HasValue
√√/ 7
?
√√8 9
	Direction
√√: C
.
√√C D
Null
√√D H
:
√√I J
	Direction
√√K T
.
√√T U
Right
√√U Z
;
√√Z [
break
√√\ a
;
√√a b
case
∆∆ 	

ConsoleKey
∆∆
 
.
∆∆ 
Escape
∆∆ 
:
∆∆ 
Console
«« 
.
«« 
Clear
«« 
(
«« 
)
«« 
;
«« 
Console
»» 
.
»» 
Write
»» 
(
»» 
$str
»» '
)
»»' (
;
»»( )
return
…… 
;
…… 
}
   
while
ЋЋ 	
(
ЋЋ
 
Console
ЋЋ 
.
ЋЋ 
KeyAvailable
ЋЋ 
)
ЋЋ  
{
ћћ 
Console
ЌЌ 
.
ЌЌ 
ReadKey
ЌЌ 
(
ЌЌ 
true
ЌЌ 
)
ЌЌ 
;
ЌЌ 
}
ќќ 
}
ѕѕ 
tank
—— 
.
—— 

IsShooting
—— 
=
—— 
shoot
—— 
.
—— 
HasValue
—— #
&&
——$ &
shoot
——' ,
.
——, -
Value
——- 2
is
——3 5
not
——6 9
	Direction
——: C
.
——C D
Null
——D H
&&
——I K
tank
——L P
.
——P Q
Bullet
——Q W
is
——X Z
null
——[ _
;
——_ `
if
““ 
(
““ 
tank
““ 
.
““ 

IsShooting
““ 
)
““ 
{
”” 
tank
‘‘ 
.
‘‘ 	
	Direction
‘‘	 
=
‘‘ 
shoot
‘‘ 
??
‘‘ 
tank
‘‘ "
.
‘‘" #
	Direction
‘‘# ,
;
‘‘, -
}
’’ 
if
„„ 
(
„„ 
move
„„ 
.
„„ 
HasValue
„„ 
)
„„ 
TryMove
ЎЎ 
(
ЎЎ 
move
ЎЎ 
.
ЎЎ 
Value
ЎЎ 
)
ЎЎ 
;
ЎЎ 
}
џџ 
else
№№ 
{
ЁЁ 
int
аа 
randomIndex
аа 
=
аа 
random
аа 
.
аа 
Next
аа  
(
аа  !
$num
аа! "
,
аа" #
$num
аа$ %
)
аа% &
;
аа& '
if
бб 
(
бб 
randomIndex
бб 
<
бб 
$num
бб 
)
бб 
TryMove
вв 
(
вв 
(
вв 
	Direction
вв 
)
вв 
randomIndex
вв "
+
вв# $
$num
вв% &
)
вв& '
;
вв' (
if
дд 
(
дд 
tank
дд 
.
дд 
Bullet
дд 
is
дд 
null
дд 
)
дд 
{
ее 
	Direction
жж 
shoot
жж 
=
жж 
Math
жж 
.
жж 
Abs
жж 
(
жж 
tank
жж #
.
жж# $
X
жж$ %
-
жж& '
Player
жж( .
.
жж. /
X
жж/ 0
)
жж0 1
>
жж2 3
Math
жж4 8
.
жж8 9
Abs
жж9 <
(
жж< =
tank
жж= A
.
жжA B
Y
жжB C
-
жжD E
Player
жжF L
.
жжL M
Y
жжM N
)
жжN O
?
зз 
(
зз 
tank
зз 
.
зз 
X
зз 
<
зз 
Player
зз 
.
зз 
X
зз 
?
зз 
	Direction
зз %
.
зз% &
Right
зз& +
:
зз, -
	Direction
зз. 7
.
зз7 8
Left
зз8 <
)
зз< =
:
ии 
(
ии 
tank
ии 
.
ии 
Y
ии 
>
ии 
Player
ии 
.
ии 
Y
ии 
?
ии 
	Direction
ии %
.
ии% &
Up
ии& (
:
ии) *
	Direction
ии+ 4
.
ии4 5
Down
ии5 9
)
ии9 :
;
ии: ;
tank
йй 
.
йй 	
	Direction
йй	 
=
йй 
shoot
йй 
;
йй 
tank
кк 
.
кк 	

IsShooting
кк	 
=
кк 
true
кк 
;
кк 
}
лл 
}
оо 
Console
тт 	
.
тт	 

SetCursorPosition
тт
 
(
тт 
tank
тт  
.
тт  !
X
тт! "
-
тт# $
$num
тт% &
,
тт& '
tank
тт( ,
.
тт, -
Y
тт- .
-
тт/ 0
$num
тт1 2
)
тт2 3
;
тт3 4
Render
уу 
(
уу 	
tank
уу	 
.
уу 
IsExploding
уу 
?
фф 
TankExploding
фф 
[
фф 
tank
фф 
.
фф 
ExplodingFrame
фф &
%
фф' (
$num
фф) *
]
фф* +
:
хх 
tank
хх 	
.
хх	 


IsShooting
хх
 
?
цц 
TankShooting
цц 
[
цц 
(
цц 
int
цц 
)
цц 
tank
цц 
.
цц 
	Direction
цц &
]
цц& '
:
чч 
Tank
чч 

[
чч
 
(
чч 
int
чч 
)
чч 
tank
чч 
.
чч 
	Direction
чч 
]
чч 
,
чч  
true
шш 
)
шш 
;
шш 	
}
ыы 
bool
ББ "
BulletCollisionCheck
ББ 
(
ББ 
Bullet
ББ !
bullet
ББ" (
,
ББ( )
out
ББ* -
Tank
ББ. 2
collidingTank
ББ3 @
)
ББ@ A
{
ВВ 
collidingTank
ГГ 
=
ГГ 
null
ГГ 
;
ГГ 
foreach
ДД 	
(
ДД
 
var
ДД 
tank
ДД 
in
ДД 
Tanks
ДД 
)
ДД 
{
ЕЕ 
if
ЖЖ 
(
ЖЖ 
Math
ЖЖ 
.
ЖЖ 
Abs
ЖЖ 
(
ЖЖ 
bullet
ЖЖ 
.
ЖЖ 
X
ЖЖ 
-
ЖЖ 
tank
ЖЖ 
.
ЖЖ  
X
ЖЖ  !
)
ЖЖ! "
<
ЖЖ# $
$num
ЖЖ% &
&&
ЖЖ' )
Math
ЖЖ* .
.
ЖЖ. /
Abs
ЖЖ/ 2
(
ЖЖ2 3
bullet
ЖЖ3 9
.
ЖЖ9 :
Y
ЖЖ: ;
-
ЖЖ< =
tank
ЖЖ> B
.
ЖЖB C
Y
ЖЖC D
)
ЖЖD E
<
ЖЖF G
$num
ЖЖH I
)
ЖЖI J
{
ЗЗ 
collidingTank
ИИ 
=
ИИ 
tank
ИИ 
;
ИИ 
return
ЙЙ 

true
ЙЙ 
;
ЙЙ 
}
КК 
}
ЛЛ 
if
ММ 
(
ММ 
bullet
ММ 
.
ММ 
X
ММ 
is
ММ 
$num
ММ 
||
ММ 
bullet
ММ 
.
ММ 
X
ММ 
is
ММ  "
$num
ММ# %
||
ММ& (
bullet
ММ) /
.
ММ/ 0
Y
ММ0 1
is
ММ2 4
$num
ММ5 6
||
ММ7 9
bullet
ММ: @
.
ММ@ A
Y
ММA B
is
ММC E
$num
ММF H
)
ММH I
{
НН 
return
ОО 	
true
ОО
 
;
ОО 
}
ПП 
if
РР 
(
РР 
$num
РР 
<
РР 	
bullet
РР
 
.
РР 
X
РР 
&&
РР 
bullet
РР 
.
РР 
X
РР 
<
РР  
$num
РР! #
&&
РР$ &
bullet
РР' -
.
РР- .
Y
РР. /
==
РР0 2
$num
РР3 5
)
РР5 6
{
СС 
return
ТТ 	
true
ТТ
 
;
ТТ 
}
УУ 
if
ФФ 
(
ФФ 
bullet
ФФ 
.
ФФ 
X
ФФ 
==
ФФ 
$num
ФФ 
&&
ФФ 
$num
ФФ 
<
ФФ 
bullet
ФФ "
.
ФФ" #
Y
ФФ# $
&&
ФФ% '
bullet
ФФ( .
.
ФФ. /
Y
ФФ/ 0
<
ФФ1 2
$num
ФФ3 4
)
ФФ4 5
{
ХХ 
return
ЦЦ 	
true
ЦЦ
 
;
ЦЦ 
}
ЧЧ 
if
ШШ 
(
ШШ 
bullet
ШШ 
.
ШШ 
X
ШШ 
==
ШШ 
$num
ШШ 
&&
ШШ 
$num
ШШ 
<
ШШ 
bullet
ШШ #
.
ШШ# $
Y
ШШ$ %
&&
ШШ& (
bullet
ШШ) /
.
ШШ/ 0
Y
ШШ0 1
<
ШШ2 3
$num
ШШ4 6
)
ШШ6 7
{
ЩЩ 
return
ЪЪ 	
true
ЪЪ
 
;
ЪЪ 
}
ЫЫ 
if
ЬЬ 
(
ЬЬ 
$num
ЬЬ 
<
ЬЬ	 

bullet
ЬЬ 
.
ЬЬ 
X
ЬЬ 
&&
ЬЬ 
bullet
ЬЬ 
.
ЬЬ 
X
ЬЬ 
<
ЬЬ  !
$num
ЬЬ" $
&&
ЬЬ% '
bullet
ЬЬ( .
.
ЬЬ. /
Y
ЬЬ/ 0
==
ЬЬ1 3
$num
ЬЬ4 6
)
ЬЬ6 7
{
ЭЭ 
return
ЮЮ 	
true
ЮЮ
 
;
ЮЮ 
}
ЯЯ 
return
†† 
false
††	 
;
†† 
}
°° 
foreach
££ 
(
££	 

var
££
 
tank
££ 
in
££ 
AllTanks
££ 
)
££ 
{
§§ 
if
•• 
(
•• 
tank
•• 

.
••
 
Bullet
•• 
is
•• 
not
•• 
null
•• 
)
•• 
{
¶¶ 
var
ІІ 
bullet
ІІ 
=
ІІ 
tank
ІІ 
.
ІІ 
Bullet
ІІ 
;
ІІ 
Console
®® 

.
®®
 
SetCursorPosition
®® 
(
®® 
bullet
®® #
.
®®# $
X
®®$ %
,
®®% &
bullet
®®' -
.
®®- .
Y
®®. /
)
®®/ 0
;
®®0 1
Console
©© 

.
©©
 
Write
©© 
(
©© 
$char
©© 
)
©© 
;
©© 
switch
™™ 	
(
™™
 
bullet
™™ 
.
™™ 
	Direction
™™ 
)
™™ 
{
ЂЂ 
case
ђђ 
	Direction
ђђ	 
.
ђђ 
Up
ђђ 
:
ђђ 
bullet
ђђ 
.
ђђ 
Y
ђђ 
--
ђђ !
;
ђђ! "
break
ђђ# (
;
ђђ( )
case
≠≠ 
	Direction
≠≠	 
.
≠≠ 
Down
≠≠ 
:
≠≠ 
bullet
≠≠ 
.
≠≠  
Y
≠≠  !
++
≠≠! #
;
≠≠# $
break
≠≠% *
;
≠≠* +
case
ЃЃ 
	Direction
ЃЃ	 
.
ЃЃ 
Left
ЃЃ 
:
ЃЃ 
bullet
ЃЃ 
.
ЃЃ  
X
ЃЃ  !
--
ЃЃ! #
;
ЃЃ# $
break
ЃЃ% *
;
ЃЃ* +
case
ѓѓ 
	Direction
ѓѓ	 
.
ѓѓ 
Right
ѓѓ 
:
ѓѓ 
bullet
ѓѓ  
.
ѓѓ  !
X
ѓѓ! "
++
ѓѓ" $
;
ѓѓ$ %
break
ѓѓ& +
;
ѓѓ+ ,
}
∞∞ 
Console
±± 

.
±±
 
SetCursorPosition
±± 
(
±± 
bullet
±± #
.
±±# $
X
±±$ %
,
±±% &
bullet
±±' -
.
±±- .
Y
±±. /
)
±±/ 0
;
±±0 1
bool
≤≤ 
	collision
≤≤ 
=
≤≤ "
BulletCollisionCheck
≤≤ (
(
≤≤( )
bullet
≤≤) /
,
≤≤/ 0
out
≤≤1 4
Tank
≤≤5 9
collisionTank
≤≤: G
)
≤≤G H
;
≤≤H I
Console
≥≥ 

.
≥≥
 
Write
≥≥ 
(
≥≥ 
	collision
≥≥ 
?
іі 
$char
іі 	
:
µµ 
Bullet
µµ 
[
µµ 
(
µµ 
int
µµ 
)
µµ 
bullet
µµ 
.
µµ 
	Direction
µµ "
]
µµ" #
)
µµ# $
;
µµ$ %
if
ґґ 
(
ґґ 
	collision
ґґ 
)
ґґ 
{
ЈЈ 
if
ЄЄ 
(
ЄЄ 
collisionTank
ЄЄ 
is
ЄЄ 
not
ЄЄ 
null
ЄЄ !
&&
ЄЄ" $
--
ЄЄ% '
collisionTank
ЄЄ' 4
.
ЄЄ4 5
Health
ЄЄ5 ;
<=
ЄЄ< >
$num
ЄЄ? @
)
ЄЄ@ A
{
єє 
collisionTank
ЇЇ 
.
ЇЇ 
ExplodingFrame
ЇЇ !
=
ЇЇ" #
$num
ЇЇ$ %
;
ЇЇ% &
}
її 
tank
ЉЉ 
.
ЉЉ 	
Bullet
ЉЉ	 
=
ЉЉ 
null
ЉЉ 
;
ЉЉ 
}
љљ 
}
ЊЊ 
}
њњ 
for
√√ 
(
√√ 
int
√√ 	
i
√√
 
=
√√ 
$num
√√ 
;
√√ 
i
√√ 
<
√√ 
Tanks
√√ 
.
√√ 
Count
√√  
;
√√  !
i
√√" #
++
√√# %
)
√√% &
{
ƒƒ 
if
≈≈ 
(
≈≈ 
Tanks
≈≈ 
[
≈≈ 
i
≈≈ 
]
≈≈ 
.
≈≈ 
ExplodingFrame
≈≈ 
>
≈≈ 
$num
≈≈  "
)
≈≈" #
{
∆∆ 
Tanks
«« 
.
«« 	
RemoveAt
««	 
(
«« 
i
«« 
)
«« 
;
«« 
i
»» 
--
»» 
;
»» 
}
…… 
}
   
Console
–– 
.
–– 	
SetCursorPosition
––	 
(
–– 
$num
–– 
,
–– 
$num
–– 
)
––  
;
––  !
Render
—— 
(
—— 
Map
—— 
)
—— 
;
—— 
Thread
““ 
.
““ 
Sleep
““ 
(
““ 
TimeSpan
““ 
.
““ 
FromMilliseconds
““ '
(
““' (
$num
““( *
)
““* +
)
““+ ,
;
““, -
}”” 
Console’’ 
.
’’ 
SetCursorPosition
’’ 
(
’’ 
$num
’’ 
,
’’ 
$num
’’ 
)
’’  
;
’’  !
Console÷÷ 
.
÷÷ 
Write
÷÷ 
(
÷÷ 
Tanks
÷÷ 
.
÷÷ 
Contains
÷÷ 
(
÷÷ 
Player
÷÷ #
)
÷÷# $
?
„„ 
$str
„„ 
:
ЎЎ 
$str
ЎЎ 
)
ЎЎ 
;
ЎЎ 
Consoleўў 
.
ўў 
ReadLine
ўў 
(
ўў 
)
ўў 
;
ўў 
enumџџ 
	Direction
џџ 
{№№ 
Null
ЁЁ 
=
ЁЁ 
$num
ЁЁ 	
,
ЁЁ	 

Up
ёё 
=
ёё 
$num
ёё 
,
ёё 
Down
яя 
=
яя 
$num
яя 	
,
яя	 

Left
аа 
=
аа 
$num
аа 	
,
аа	 

Right
бб 
=
бб 
$num
бб	 

,
бб
 
}вв 
classдд 
Tank
дд 

{ее 
public
жж 
bool
жж 
IsPlayer
жж 
;
жж 
public
зз 
int
зз 
Health
зз 
=
зз 
$num
зз 
;
зз 
public
ии 
int
ии 
X
ии 
;
ии 
public
йй 
int
йй 
Y
йй 
;
йй 
public
кк 
	Direction
кк 
	Direction
кк 
=
кк 
	Direction
кк '
.
кк' (
Down
кк( ,
;
кк, -
public
лл 
Bullet
лл 
Bullet
лл 
;
лл 
public
мм 
bool
мм 

IsShooting
мм 
;
мм 
public
нн 
int
нн 
ExplodingFrame
нн 
;
нн 
public
оо 
bool
оо 
IsExploding
оо 
=>
оо 
ExplodingFrame
оо *
>
оо+ ,
$num
оо- .
;
оо. /
}пп 
classсс 
Bullet
сс 
{тт 
public
уу 
int
уу 
X
уу 
;
уу 
public
фф 
int
фф 
Y
фф 
;
фф 
public
хх 
	Direction
хх 
	Direction
хх 
;
хх 
}цц 