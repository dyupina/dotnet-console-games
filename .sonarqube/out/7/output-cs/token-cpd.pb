£ó
RC:\ProgramData\Jenkins\.jenkins\workspace\GamePipeline\Projects\Fighter\Program.cs
class 
Program 
{ 
static 
readonly 
int 
height 
= 
Console %
.% &
WindowHeight& 2
;2 3
static 
readonly 
int 
width 
= 
Console $
.$ %
WindowWidth% 0
;0 1
static

 
readonly

 
int

 
barWidth

 
=

 
(

  !
width

! &
-

' (
$num

) *
)

* +
/

, -
$num

. /
;

/ 0
const 
int 

Y 
= 
$num 
; 
static 
readonly 
TimeSpan 
sleep 
=  !
TimeSpan" *
.* +
FromMilliseconds+ ;
(; <
$num< >
)> ?
;? @
static 
readonly 
TimeSpan 
timeSpanIdle &
=' (
TimeSpan) 1
.1 2
FromMilliseconds2 B
(B C
$numC F
)F G
;G H
static 
readonly 
TimeSpan 
timeSpanPunch '
=( )
TimeSpan* 2
.2 3
FromMilliseconds3 C
(C D
$numD G
)G H
;H I
static 
readonly 
TimeSpan 
timeSpanBlock '
=( )
TimeSpan* 2
.2 3
FromMilliseconds3 C
(C D
$numD G
)G H
;H I
static 
readonly 
TimeSpan 
timeSpanJumpKick *
=+ ,
TimeSpan- 5
.5 6
FromMilliseconds6 F
(F G
$numG J
)J K
;K L
static 
readonly 
TimeSpan 
timeSpanOwned '
=( )
TimeSpan* 2
.2 3
FromMilliseconds3 C
(C D
$numD F
)F G
;G H
static 
readonly 
TimeSpan 
timeSpanGround (
=) *
TimeSpan+ 3
.3 4
FromMilliseconds4 D
(D E
$numE H
)H I
;I J
static 
readonly 
TimeSpan 
timeSpanGetUp '
=( )
TimeSpan* 2
.2 3
FromMilliseconds3 C
(C D
$numD F
)F G
;G H
static 
readonly 
Random 
random 
=  
new! $
($ %
)% &
;& '
enum 
Action 
{ 
Idle 
= 
$num	 

,
 
Punch 
= 	
$num
 
, 
Block 
= 	
$num
 
, 
JumpKick 

= 
$num 
, 
Owned 
= 	
$num
 
, 
Ground 
=	 

$num 
, 
GetUp   
=   	
$num  
 
,   
}!! 
class## 
Fighter## 
{$$ 
public%% 
Action%%	 
Action%% 
=%% 
Action%% 
.%%  
Idle%%  $
;%%$ %
public&& 
int&&	 
Frame&& 
=&& 
$num&& 
;&& 
public'' 
int''	 
Position'' 
;'' 
public(( 
	Stopwatch((	 
	Stopwatch(( 
=(( 
new(( "
(((" #
)((# $
;(($ %
public)) 
int))	 
	MaxEnergy)) 
=)) 
$num)) 
;)) 
public** 
int**	 
Energy** 
=** 
$num** 
;** 
public++ 
int++	 
	MaxHealth++ 
=++ 
$num++ 
;++ 
public,, 
int,,	 
Health,, 
=,, 
$num,, 
;,, 
public-- 
string--	 
[-- 
]-- 
IdleAnimation-- 
;--  
public.. 
string..	 
[.. 
].. 
PunchAnimation..  
;..  !
public// 
string//	 
[// 
]// 
BlockAnimation//  
;//  !
public00 
string00	 
[00 
]00 
JumpKickAnimation00 #
;00# $
public11 
string11	 
[11 
]11 
OwnedAnimation11  
;11  !
public22 
string22	 
[22 
]22 
GroundAnimation22 !
;22! "
public33 
string33	 
[33 
]33 
GetUpAnimation33  
;33  !
public55 
Fighter55	 
(55 
int55 
position55 
,55 
string55 %
[55% &
]55& '
idleAnimation55( 5
,555 6
string557 =
[55= >
]55> ?
punchAnimation55@ N
,55N O
string55P V
[55V W
]55W X
blockAnimation55Y g
,55g h
string55i o
[55o p
]55p q
jumpKickAnimation	55r É
,
55É Ñ
string
55Ö ã
[
55ã å
]
55å ç
ownedAnimation
55é ú
,
55ú ù
string
55û §
[
55§ •
]
55• ¶
groundAnimation
55ß ∂
,
55∂ ∑
string
55∏ æ
[
55æ ø
]
55ø ¿
getUpAnimation
55¡ œ
)
55œ –
{66 
Position77 
=77 
position77 
;77 
IdleAnimation88 
=88 
idleAnimation88  
;88  !
PunchAnimation99 
=99 
punchAnimation99 "
;99" #
BlockAnimation:: 
=:: 
blockAnimation:: "
;::" #
JumpKickAnimation;; 
=;; 
jumpKickAnimation;; (
;;;( )
OwnedAnimation<< 
=<< 
ownedAnimation<< "
;<<" #
GroundAnimation== 
=== 
groundAnimation== $
;==$ %
GetUpAnimation>> 
=>> 
getUpAnimation>> "
;>>" #
}?? 
}AA 
staticCC 
voidCC 
MainCC 
(CC 
)CC 
{DD 
ConsoleEE 	
.EE	 

ClearEE
 
(EE 
)EE 
;EE 
ConsoleFF 	
.FF	 

CursorVisibleFF
 
=FF 
falseFF 
;FF  
FighterHH 	
playerHH
 
=HH 
newHH 
(HH 
positionII 
:II 
widthII 
/II 
$numII 
,II 
idleAnimationJJ 
:JJ 
AsciiJJ 
.JJ 
PlayerJJ 
.JJ 
IdleAnimationJJ ,
,JJ, -
punchAnimationKK 
:KK 
AsciiKK 
.KK 
PlayerKK 
.KK  
PunchAnimationKK  .
,KK. /
blockAnimationLL 
:LL 
AsciiLL 
.LL 
PlayerLL 
.LL  
BlockAnimationLL  .
,LL. /
jumpKickAnimationMM 
:MM 
AsciiMM 
.MM 
PlayerMM "
.MM" #
JumpKickAnimationMM# 4
,MM4 5
ownedAnimationNN 
:NN 
AsciiNN 
.NN 
PlayerNN 
.NN  
OwnedAnimationNN  .
,NN. /
groundAnimationOO 
:OO 
AsciiOO 
.OO 
PlayerOO  
.OO  !
GroundAnimationOO! 0
,OO0 1
getUpAnimationPP 
:PP 
AsciiPP 
.PP 
PlayerPP 
.PP  
GetUpAnimationPP  .
)PP. /
;PP/ 0
FighterRR 	
enemyRR
 
=RR 
newRR 
(RR 
positionSS 
:SS 
(SS 
widthSS 
/SS 
$numSS 
)SS 
*SS 
$numSS 
,SS 
idleAnimationTT 
:TT 
AsciiTT 
.TT 
EnemyTT 
.TT 
IdleAnimationTT +
,TT+ ,
punchAnimationUU 
:UU 
AsciiUU 
.UU 
EnemyUU 
.UU 
PunchAnimationUU -
,UU- .
blockAnimationVV 
:VV 
AsciiVV 
.VV 
EnemyVV 
.VV 
BlockAnimationVV -
,VV- .
jumpKickAnimationWW 
:WW 
AsciiWW 
.WW 
EnemyWW !
.WW! "
JumpKickAnimationWW" 3
,WW3 4
ownedAnimationXX 
:XX 
AsciiXX 
.XX 
EnemyXX 
.XX 
OwnedAnimationXX -
,XX- .
groundAnimationYY 
:YY 
AsciiYY 
.YY 
EnemyYY 
.YY  
GroundAnimationYY  /
,YY/ 0
getUpAnimationZZ 
:ZZ 
AsciiZZ 
.ZZ 
EnemyZZ 
.ZZ 
GetUpAnimationZZ -
)ZZ- .
;ZZ. /
player\\ 
.\\ 	
	Stopwatch\\	 
.\\ 
Restart\\ 
(\\ 
)\\ 
;\\ 
enemy]] 
.]] 
	Stopwatch]] 
.]] 
Restart]] 
(]] 
)]] 
;]] 
Console^^ 	
.^^	 

SetCursorPosition^^
 
(^^ 
player^^ "
.^^" #
Position^^# +
,^^+ ,
Y^^- .
)^^. /
;^^/ 0
Render__ 
(__ 	
Ascii__	 
.__ 
Player__ 
.__ 
IdleAnimation__ #
[__# $
player__$ *
.__* +
Frame__+ 0
]__0 1
)__1 2
;__2 3
Console`` 	
.``	 

SetCursorPosition``
 
(`` 
enemy`` !
.``! "
Position``" *
,``* +
Y``, -
)``- .
;``. /
Renderaa 
(aa 	
Asciiaa	 
.aa 
Enemyaa 
.aa 
IdleAnimationaa "
[aa" #
enemyaa# (
.aa( )
Frameaa) .
]aa. /
)aa/ 0
;aa0 1
Consolecc 	
.cc	 

SetCursorPositioncc
 
(cc 
$numcc 
,cc 
Ycc  
+cc! "
$numcc# $
)cc$ %
;cc% &
fordd 
(dd 
intdd 

idd 
=dd 
$numdd 
;dd 
idd 
<dd 
widthdd 
;dd 
idd 
++dd  
)dd  !
{ee 
Consoleff 

.ff
 
Writeff 
(ff 
$charff 
)ff 
;ff 
}gg 
whileii 
(ii 	
trueii	 
)ii 
{jj 
ifmm 
(mm 
Consolemm 
.mm 
WindowHeightmm 
!=mm 
heightmm %
||mm& (
Consolemm) 0
.mm0 1
WindowWidthmm1 <
!=mm= ?
widthmm@ E
)mmE F
{nn 
Consoleoo 
.oo 
Clearoo 
(oo 
)oo 
;oo 
Consolepp 
.pp 
Writepp 
(pp 
$strpp 8
)pp8 9
;pp9 :
returnqq 

;qq
 
}rr 
boolvv 
skipPlayerUpdatevv 
=vv 
falsevv  
;vv  !
boolww 
skipEnemyUpdateww 
=ww 
falseww 
;ww  
static{{ 	
void{{
 
Trigger{{ 
({{ 
Fighter{{ 
fighter{{ &
,{{& '
Action{{( .
action{{/ 5
){{5 6
{|| 
if}} 
(}} 
!}} 	
(}}	 

fighter}}
 
.}} 
Energy}} 
>=}} 
action}} "
switch}}# )
{~~ 
Action 
. 
Punch 
=> 
$num 
, 
Action
ÄÄ 
.
ÄÄ 
JumpKick
ÄÄ 
=>
ÄÄ 
$num
ÄÄ 
,
ÄÄ 
Action
ÅÅ 
.
ÅÅ 
Block
ÅÅ 
=>
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
_
ÇÇ 
=>
ÇÇ 	
throw
ÇÇ
 
new
ÇÇ %
NotImplementedException
ÇÇ +
(
ÇÇ+ ,
)
ÇÇ, -
,
ÇÇ- .
}
ÉÉ 
)
ÉÉ 
)
ÉÉ 
return
ÉÉ 
;
ÉÉ 
Console
ÖÖ 
.
ÖÖ 
SetCursorPosition
ÖÖ 
(
ÖÖ 
fighter
ÖÖ %
.
ÖÖ% &
Position
ÖÖ& .
,
ÖÖ. /
Y
ÖÖ0 1
)
ÖÖ1 2
;
ÖÖ2 3
Erase
ÜÜ 	
(
ÜÜ	 

fighter
ÜÜ
 
.
ÜÜ 
IdleAnimation
ÜÜ 
[
ÜÜ  
fighter
ÜÜ  '
.
ÜÜ' (
Frame
ÜÜ( -
]
ÜÜ- .
)
ÜÜ. /
;
ÜÜ/ 0
fighter
áá 
.
áá 
Action
áá 
=
áá 
action
áá 
;
áá 
fighter
àà 
.
àà 
Frame
àà 
=
àà 
$num
àà 
;
àà 
fighter
ââ 
.
ââ 
Energy
ââ 
=
ââ 
Math
ââ 
.
ââ 
Max
ââ 
(
ââ 
action
ââ $
switch
ââ% +
{
ää 
Action
ãã 
.
ãã 
Punch
ãã 
=>
ãã 
fighter
ãã 
.
ãã 
Energy
ãã #
-
ãã$ %
$num
ãã& (
,
ãã( )
Action
åå 
.
åå 
JumpKick
åå 
=>
åå 
fighter
åå 
.
åå  
Energy
åå  &
-
åå' (
$num
åå) +
,
åå+ ,
Action
çç 
.
çç 
Block
çç 
=>
çç 
fighter
çç 
.
çç 
Energy
çç #
,
çç# $
_
éé 
=>
éé 	
throw
éé
 
new
éé %
NotImplementedException
éé +
(
éé+ ,
)
éé, -
,
éé- .
}
èè 
,
èè 
$num
èè 
)
èè 	
;
èè	 

Console
ëë 
.
ëë 
SetCursorPosition
ëë 
(
ëë 
fighter
ëë %
.
ëë% &
Position
ëë& .
,
ëë. /
Y
ëë0 1
)
ëë1 2
;
ëë2 3
Render
íí 

(
íí
 
action
íí 
switch
íí 
{
ìì 
Action
îî 
.
îî 
Idle
îî 
=>
îî 
fighter
îî 
.
îî 
IdleAnimation
îî )
[
îî) *
fighter
îî* 1
.
îî1 2
Frame
îî2 7
]
îî7 8
,
îî8 9
Action
ïï 
.
ïï 
Punch
ïï 
=>
ïï 
fighter
ïï 
.
ïï 
PunchAnimation
ïï +
[
ïï+ ,
fighter
ïï, 3
.
ïï3 4
Frame
ïï4 9
]
ïï9 :
,
ïï: ;
Action
ññ 
.
ññ 
Block
ññ 
=>
ññ 
fighter
ññ 
.
ññ 
BlockAnimation
ññ +
[
ññ+ ,
fighter
ññ, 3
.
ññ3 4
Frame
ññ4 9
]
ññ9 :
,
ññ: ;
Action
óó 
.
óó 
JumpKick
óó 
=>
óó 
fighter
óó 
.
óó  
JumpKickAnimation
óó  1
[
óó1 2
fighter
óó2 9
.
óó9 :
Frame
óó: ?
]
óó? @
,
óó@ A
Action
òò 
.
òò 
Owned
òò 
=>
òò 
fighter
òò 
.
òò 
OwnedAnimation
òò +
[
òò+ ,
fighter
òò, 3
.
òò3 4
Frame
òò4 9
]
òò9 :
,
òò: ;
Action
ôô 
.
ôô 
GetUp
ôô 
=>
ôô 
fighter
ôô 
.
ôô 
GetUpAnimation
ôô +
[
ôô+ ,
fighter
ôô, 3
.
ôô3 4
Frame
ôô4 9
]
ôô9 :
,
ôô: ;
_
öö 
=>
öö 	
throw
öö
 
new
öö %
NotImplementedException
öö +
(
öö+ ,
)
öö, -
,
öö- .
}
õõ 
)
õõ 
;
õõ 
fighter
úú 
.
úú 
	Stopwatch
úú 
.
úú 
Restart
úú 
(
úú 
)
úú 
;
úú  
}
ùù 
static
üü 	
void
üü
 
Move
üü 
(
üü 
Fighter
üü 
fighter
üü #
,
üü# $
int
üü% (
location
üü) 1
)
üü1 2
{
†† 
Console
°° 
.
°° 
SetCursorPosition
°° 
(
°° 
fighter
°° %
.
°°% &
Position
°°& .
,
°°. /
Y
°°0 1
)
°°1 2
;
°°2 3
Erase
¢¢ 	
(
¢¢	 

fighter
¢¢
 
.
¢¢ 
IdleAnimation
¢¢ 
[
¢¢  
fighter
¢¢  '
.
¢¢' (
Frame
¢¢( -
]
¢¢- .
)
¢¢. /
;
¢¢/ 0
fighter
££ 
.
££ 
Position
££ 
=
££ 
location
££ 
;
££  
Console
§§ 
.
§§ 
SetCursorPosition
§§ 
(
§§ 
fighter
§§ %
.
§§% &
Position
§§& .
,
§§. /
Y
§§0 1
)
§§1 2
;
§§2 3
Render
•• 

(
••
 
fighter
•• 
.
•• 
IdleAnimation
••  
[
••  !
fighter
••! (
.
••( )
Frame
••) .
]
••. /
)
••/ 0
;
••0 1
}
¶¶ 
if
¨¨ 
(
¨¨ 
Console
¨¨ 
.
¨¨ 
KeyAvailable
¨¨ 
)
¨¨ 
{
≠≠ 
switch
ÆÆ 

(
ÆÆ 
Console
ÆÆ 
.
ÆÆ 
ReadKey
ÆÆ 
(
ÆÆ 
true
ÆÆ  
)
ÆÆ  !
.
ÆÆ! "
Key
ÆÆ" %
)
ÆÆ% &
{
ØØ 
case
∞∞ 	

ConsoleKey
∞∞
 
.
∞∞ 
F
∞∞ 
:
∞∞ 
if
±± 
(
±±	 

player
±±
 
.
±± 
Action
±± 
==
±± 
Action
±± !
.
±±! "
Idle
±±" &
)
±±& '
{
≤≤ 
Trigger
≥≥ 
(
≥≥ 
player
≥≥ 
,
≥≥ 
Action
≥≥ 
.
≥≥ 
Punch
≥≥ #
)
≥≥# $
;
≥≥$ %
skipPlayerUpdate
¥¥ 
=
¥¥ 
true
¥¥ 
;
¥¥ 
}
µµ 
break
∂∂ 
;
∂∂ 
case
∑∑ 	

ConsoleKey
∑∑
 
.
∑∑ 
D
∑∑ 
:
∑∑ 
if
∏∏ 
(
∏∏	 

player
∏∏
 
.
∏∏ 
Action
∏∏ 
==
∏∏ 
Action
∏∏ !
.
∏∏! "
Idle
∏∏" &
)
∏∏& '
{
ππ 
Trigger
∫∫ 
(
∫∫ 
player
∫∫ 
,
∫∫ 
Action
∫∫ 
.
∫∫ 
Block
∫∫ #
)
∫∫# $
;
∫∫$ %
skipPlayerUpdate
ªª 
=
ªª 
true
ªª 
;
ªª 
}
ºº 
break
ΩΩ 
;
ΩΩ 
case
ææ 	

ConsoleKey
ææ
 
.
ææ 
S
ææ 
:
ææ 
if
øø 
(
øø	 

player
øø
 
.
øø 
Action
øø 
==
øø 
Action
øø !
.
øø! "
Idle
øø" &
)
øø& '
{
¿¿ 
Trigger
¡¡ 
(
¡¡ 
player
¡¡ 
,
¡¡ 
Action
¡¡ 
.
¡¡ 
JumpKick
¡¡ &
)
¡¡& '
;
¡¡' (
skipPlayerUpdate
¬¬ 
=
¬¬ 
true
¬¬ 
;
¬¬ 
}
√√ 
break
ƒƒ 
;
ƒƒ 
case
ÃÃ 	

ConsoleKey
ÃÃ
 
.
ÃÃ 
	LeftArrow
ÃÃ 
:
ÃÃ 
if
ÕÕ 
(
ÕÕ	 

player
ÕÕ
 
.
ÕÕ 
Action
ÕÕ 
==
ÕÕ 
Action
ÕÕ !
.
ÕÕ! "
Idle
ÕÕ" &
)
ÕÕ& '
{
ŒŒ 
int
œœ 

newPosition
œœ 
=
œœ 
Math
œœ 
.
œœ 
Min
œœ !
(
œœ! "
Math
œœ" &
.
œœ& '
Max
œœ' *
(
œœ* +
player
œœ+ 1
.
œœ1 2
Position
œœ2 :
-
œœ; <
$num
œœ= >
,
œœ> ?
$num
œœ@ A
)
œœA B
,
œœB C
enemy
œœD I
.
œœI J
Position
œœJ R
-
œœS T
$num
œœU V
)
œœV W
;
œœW X
if
–– 	
(
––
 
newPosition
–– 
!=
–– 
player
––  
.
––  !
Position
––! )
&&
––* ,
player
––- 3
.
––3 4
Energy
––4 :
>=
––; =
$num
––> ?
)
––? @
{
—— 
Move
““ 
(
““ 
player
““ 
,
““ 
newPosition
““  
)
““  !
;
““! "
skipPlayerUpdate
”” 
=
”” 
true
”” 
;
””  
player
‘‘ 
.
‘‘ 
Energy
‘‘ 
=
‘‘ 
Math
‘‘ 
.
‘‘ 
Max
‘‘  
(
‘‘  !
player
‘‘! '
.
‘‘' (
Energy
‘‘( .
-
‘‘/ 0
$num
‘‘1 2
,
‘‘2 3
$num
‘‘4 5
)
‘‘5 6
;
‘‘6 7
}
’’ 
}
÷÷ 
break
◊◊ 
;
◊◊ 
case
ÿÿ 	

ConsoleKey
ÿÿ
 
.
ÿÿ 

RightArrow
ÿÿ 
:
ÿÿ  
if
ŸŸ 
(
ŸŸ	 

player
ŸŸ
 
.
ŸŸ 
Action
ŸŸ 
==
ŸŸ 
Action
ŸŸ !
.
ŸŸ! "
Idle
ŸŸ" &
)
ŸŸ& '
{
⁄⁄ 
int
€€ 

newPosition
€€ 
=
€€ 
Math
€€ 
.
€€ 
Min
€€ !
(
€€! "
Math
€€" &
.
€€& '
Max
€€' *
(
€€* +
player
€€+ 1
.
€€1 2
Position
€€2 :
+
€€; <
$num
€€= >
,
€€> ?
$num
€€@ A
)
€€A B
,
€€B C
enemy
€€D I
.
€€I J
Position
€€J R
-
€€S T
$num
€€U V
)
€€V W
;
€€W X
if
‹‹ 	
(
‹‹
 
newPosition
‹‹ 
!=
‹‹ 
player
‹‹  
.
‹‹  !
Position
‹‹! )
&&
‹‹* ,
player
‹‹- 3
.
‹‹3 4
Energy
‹‹4 :
>=
‹‹; =
$num
‹‹> ?
)
‹‹? @
{
›› 
Move
ﬁﬁ 
(
ﬁﬁ 
player
ﬁﬁ 
,
ﬁﬁ 
newPosition
ﬁﬁ  
)
ﬁﬁ  !
;
ﬁﬁ! "
skipPlayerUpdate
ﬂﬂ 
=
ﬂﬂ 
true
ﬂﬂ 
;
ﬂﬂ  
player
‡‡ 
.
‡‡ 
Energy
‡‡ 
=
‡‡ 
Math
‡‡ 
.
‡‡ 
Max
‡‡  
(
‡‡  !
player
‡‡! '
.
‡‡' (
Energy
‡‡( .
-
‡‡/ 0
$num
‡‡1 2
,
‡‡2 3
$num
‡‡4 5
)
‡‡5 6
;
‡‡6 7
}
·· 
}
‚‚ 
break
„„ 
;
„„ 
case
‰‰ 	

ConsoleKey
‰‰
 
.
‰‰ 
Escape
‰‰ 
:
‰‰ 
Console
ÂÂ 
.
ÂÂ 
Clear
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ 
Console
ÊÊ 
.
ÊÊ 
Write
ÊÊ 
(
ÊÊ 
$str
ÊÊ )
)
ÊÊ) *
;
ÊÊ* +
return
ÁÁ 
;
ÁÁ 
}
ËË 
}
ÈÈ 
while
ÍÍ 
(
ÍÍ	 

Console
ÍÍ
 
.
ÍÍ 
KeyAvailable
ÍÍ 
)
ÍÍ 
{
ÎÎ 
Console
ÏÏ 
.
ÏÏ 
ReadKey
ÏÏ 
(
ÏÏ 
true
ÏÏ 
)
ÏÏ 
;
ÏÏ 
}
ÌÌ 
if
ÛÛ 
(
ÛÛ 
enemy
ÛÛ 
.
ÛÛ 
Action
ÛÛ 
==
ÛÛ 
Action
ÛÛ 
.
ÛÛ 
Idle
ÛÛ "
)
ÛÛ" #
{
ÙÙ 
if
ıı 
(
ıı 
enemy
ıı 
.
ıı 
Position
ıı 
-
ıı 
player
ıı 
.
ıı  
Position
ıı  (
<=
ıı) +
$num
ıı, -
&&
ıı. 0
random
ıı1 7
.
ıı7 8
Next
ıı8 <
(
ıı< =
$num
ıı= ?
)
ıı? @
==
ııA C
$num
ııD E
)
ııE F
{
ˆˆ 
Trigger
˜˜ 
(
˜˜ 
enemy
˜˜ 
,
˜˜ 
Action
˜˜ 
.
˜˜ 
Punch
˜˜  
)
˜˜  !
;
˜˜! "
skipEnemyUpdate
¯¯ 
=
¯¯ 
true
¯¯ 
;
¯¯ 
}
˘˘ 
else
˙˙ 
if
˙˙	 
(
˙˙ 
enemy
˙˙ 
.
˙˙ 
Position
˙˙ 
-
˙˙ 
player
˙˙ $
.
˙˙$ %
Position
˙˙% -
<=
˙˙. 0
$num
˙˙1 2
&&
˙˙3 5
random
˙˙6 <
.
˙˙< =
Next
˙˙= A
(
˙˙A B
$num
˙˙B D
)
˙˙D E
==
˙˙F H
$num
˙˙I J
)
˙˙J K
{
˚˚ 
Trigger
¸¸ 
(
¸¸ 
enemy
¸¸ 
,
¸¸ 
Action
¸¸ 
.
¸¸ 
JumpKick
¸¸ #
)
¸¸# $
;
¸¸$ %
skipEnemyUpdate
˝˝ 
=
˝˝ 
true
˝˝ 
;
˝˝ 
}
˛˛ 
else
ˇˇ 
if
ˇˇ	 
(
ˇˇ 
enemy
ˇˇ 
.
ˇˇ 
Position
ˇˇ 
-
ˇˇ 
player
ˇˇ $
.
ˇˇ$ %
Position
ˇˇ% -
<=
ˇˇ. 0
$num
ˇˇ1 2
&&
ˇˇ3 5
random
ˇˇ6 <
.
ˇˇ< =
Next
ˇˇ= A
(
ˇˇA B
$num
ˇˇB C
)
ˇˇC D
==
ˇˇE G
$num
ˇˇH I
&&
ˇˇJ L
player
ˇˇM S
.
ˇˇS T
Energy
ˇˇT Z
>=
ˇˇ[ ]
$num
ˇˇ^ _
)
ˇˇ_ `
{
ÄÄ 
Trigger
ÅÅ 
(
ÅÅ 
enemy
ÅÅ 
,
ÅÅ 
Action
ÅÅ 
.
ÅÅ 
Block
ÅÅ  
)
ÅÅ  !
;
ÅÅ! "
skipEnemyUpdate
ÇÇ 
=
ÇÇ 
true
ÇÇ 
;
ÇÇ 
}
ÉÉ 
else
ÑÑ 
if
ÑÑ	 
(
ÑÑ 
random
ÑÑ 
.
ÑÑ 
Next
ÑÑ 
(
ÑÑ 
$num
ÑÑ 
)
ÑÑ 
==
ÑÑ 
$num
ÑÑ  !
&&
ÑÑ" $
enemy
ÑÑ% *
.
ÑÑ* +
Energy
ÑÑ+ 1
>=
ÑÑ2 4
$num
ÑÑ5 6
&&
ÑÑ7 9
(
ÑÑ: ;
enemy
ÑÑ; @
.
ÑÑ@ A
Energy
ÑÑA G
==
ÑÑH J
enemy
ÑÑK P
.
ÑÑP Q
	MaxEnergy
ÑÑQ Z
||
ÑÑ[ ]
random
ÑÑ^ d
.
ÑÑd e
Next
ÑÑe i
(
ÑÑi j
enemy
ÑÑj o
.
ÑÑo p
	MaxEnergy
ÑÑp y
-
ÑÑz {
enemyÑÑ| Å
.ÑÑÅ Ç
EnergyÑÑÇ à
+ÑÑâ ä
$numÑÑã å
)ÑÑå ç
==ÑÑé ê
$numÑÑë í
)ÑÑí ì
)ÑÑì î
{
ÖÖ 
int
ÜÜ 
newPosition
ÜÜ	 
=
ÜÜ 
Math
ÜÜ 
.
ÜÜ 
Min
ÜÜ 
(
ÜÜ  
Math
ÜÜ  $
.
ÜÜ$ %
Max
ÜÜ% (
(
ÜÜ( )
enemy
ÜÜ) .
.
ÜÜ. /
Position
ÜÜ/ 7
-
ÜÜ8 9
$num
ÜÜ: ;
,
ÜÜ; <
player
ÜÜ= C
.
ÜÜC D
Position
ÜÜD L
+
ÜÜM N
$num
ÜÜO P
)
ÜÜP Q
,
ÜÜQ R
width
ÜÜS X
-
ÜÜY Z
$num
ÜÜ[ \
)
ÜÜ\ ]
;
ÜÜ] ^
if
áá 
(
áá 	
enemy
áá	 
.
áá 
Position
áá 
!=
áá 
newPosition
áá &
)
áá& '
{
àà 
Move
ââ 

(
ââ
 
enemy
ââ 
,
ââ 
newPosition
ââ 
)
ââ 
;
ââ 
skipEnemyUpdate
ää 
=
ää 
true
ää 
;
ää 
enemy
ãã 
.
ãã 
Energy
ãã 
=
ãã 
Math
ãã 
.
ãã 
Max
ãã 
(
ãã 
enemy
ãã #
.
ãã# $
Energy
ãã$ *
-
ãã+ ,
$num
ãã- .
,
ãã. /
$num
ãã0 1
)
ãã1 2
;
ãã2 3
}
åå 
}
çç 
else
éé 
if
éé	 
(
éé 
random
éé 
.
éé 
Next
éé 
(
éé 
$num
éé 
)
éé 
==
éé 
$num
éé  !
&&
éé" $
enemy
éé% *
.
éé* +
Energy
éé+ 1
>=
éé2 4
$num
éé5 6
&&
éé7 9
(
éé: ;
enemy
éé; @
.
éé@ A
Energy
ééA G
==
ééH J
enemy
ééK P
.
ééP Q
	MaxEnergy
ééQ Z
||
éé[ ]
random
éé^ d
.
ééd e
Next
éée i
(
ééi j
enemy
ééj o
.
ééo p
	MaxEnergy
éép y
-
ééz {
enemyéé| Å
.ééÅ Ç
EnergyééÇ à
+ééâ ä
$numééã å
)ééå ç
==ééé ê
$numééë í
)ééí ì
)ééì î
{
èè 
int
êê 
newPosition
êê	 
=
êê 
Math
êê 
.
êê 
Min
êê 
(
êê  
Math
êê  $
.
êê$ %
Max
êê% (
(
êê( )
enemy
êê) .
.
êê. /
Position
êê/ 7
+
êê8 9
$num
êê: ;
,
êê; <
player
êê= C
.
êêC D
Position
êêD L
+
êêM N
$num
êêO P
)
êêP Q
,
êêQ R
width
êêS X
-
êêY Z
$num
êê[ \
)
êê\ ]
;
êê] ^
if
ëë 
(
ëë 	
enemy
ëë	 
.
ëë 
Position
ëë 
!=
ëë 
newPosition
ëë &
)
ëë& '
{
íí 
Move
ìì 

(
ìì
 
enemy
ìì 
,
ìì 
newPosition
ìì 
)
ìì 
;
ìì 
skipEnemyUpdate
îî 
=
îî 
true
îî 
;
îî 
enemy
ïï 
.
ïï 
Energy
ïï 
=
ïï 
Math
ïï 
.
ïï 
Max
ïï 
(
ïï 
enemy
ïï #
.
ïï# $
Energy
ïï$ *
-
ïï+ ,
$num
ïï- .
,
ïï. /
$num
ïï0 1
)
ïï1 2
;
ïï2 3
}
ññ 
}
óó 
}
òò 
if
ûû 
(
ûû 
!
ûû 
skipPlayerUpdate
ûû 
)
ûû 
{
üü 
Update
†† 

(
††
 
player
†† 
)
†† 
;
†† 
}
°° 
if
££ 
(
££ 
!
££ 
skipEnemyUpdate
££ 
)
££ 
{
§§ 
Update
•• 

(
••
 
enemy
•• 
)
•• 
;
•• 
}
¶¶ 
void
®® 
Update
®® 
(
®® 
Fighter
®® 
fighter
®® 
)
®® 
{
©© 
if
™™ 
(
™™ 
fighter
™™ 
.
™™ 
Action
™™ 
==
™™ 
Action
™™  
.
™™  !
Idle
™™! %
&&
™™& (
fighter
™™) 0
.
™™0 1
	Stopwatch
™™1 :
.
™™: ;
Elapsed
™™; B
>
™™C D
timeSpanIdle
™™E Q
)
™™Q R
{
´´ 
Console
¨¨ 
.
¨¨ 
SetCursorPosition
¨¨ 
(
¨¨ 
fighter
¨¨ &
.
¨¨& '
Position
¨¨' /
,
¨¨/ 0
Y
¨¨1 2
)
¨¨2 3
;
¨¨3 4
Erase
≠≠ 

(
≠≠
 
fighter
≠≠ 
.
≠≠ 
IdleAnimation
≠≠  
[
≠≠  !
fighter
≠≠! (
.
≠≠( )
Frame
≠≠) .
]
≠≠. /
)
≠≠/ 0
;
≠≠0 1
fighter
ÆÆ 
.
ÆÆ 
Frame
ÆÆ 
=
ÆÆ 
fighter
ÆÆ 
.
ÆÆ 
Frame
ÆÆ "
is
ÆÆ# %
$num
ÆÆ& '
?
ÆÆ( )
$num
ÆÆ* +
:
ÆÆ, -
$num
ÆÆ. /
;
ÆÆ/ 0
Console
ØØ 
.
ØØ 
SetCursorPosition
ØØ 
(
ØØ 
fighter
ØØ &
.
ØØ& '
Position
ØØ' /
,
ØØ/ 0
Y
ØØ1 2
)
ØØ2 3
;
ØØ3 4
Render
∞∞ 
(
∞∞ 
fighter
∞∞ 
.
∞∞ 
IdleAnimation
∞∞ !
[
∞∞! "
fighter
∞∞" )
.
∞∞) *
Frame
∞∞* /
]
∞∞/ 0
)
∞∞0 1
;
∞∞1 2
fighter
±± 
.
±± 
	Stopwatch
±± 
.
±± 
Restart
±± 
(
±± 
)
±±  
;
±±  !
fighter
≤≤ 
.
≤≤ 
Energy
≤≤ 
=
≤≤ 
Math
≤≤ 
.
≤≤ 
Min
≤≤ 
(
≤≤ 
fighter
≤≤ &
.
≤≤& '
Energy
≤≤' -
+
≤≤. /
$num
≤≤0 1
,
≤≤1 2
fighter
≤≤3 :
.
≤≤: ;
	MaxEnergy
≤≤; D
)
≤≤D E
;
≤≤E F
}
≥≥ 
else
¥¥ 
if
¥¥	 
(
¥¥ 
fighter
¥¥ 
.
¥¥ 
Action
¥¥ 
==
¥¥ 
Action
¥¥ %
.
¥¥% &
Punch
¥¥& +
&&
¥¥, .
fighter
¥¥/ 6
.
¥¥6 7
	Stopwatch
¥¥7 @
.
¥¥@ A
Elapsed
¥¥A H
>
¥¥I J
timeSpanPunch
¥¥K X
)
¥¥X Y
{
µµ 
Console
∂∂ 
.
∂∂ 
SetCursorPosition
∂∂ 
(
∂∂ 
fighter
∂∂ &
.
∂∂& '
Position
∂∂' /
,
∂∂/ 0
Y
∂∂1 2
)
∂∂2 3
;
∂∂3 4
Erase
∑∑ 

(
∑∑
 
fighter
∑∑ 
.
∑∑ 
PunchAnimation
∑∑ !
[
∑∑! "
fighter
∑∑" )
.
∑∑) *
Frame
∑∑* /
]
∑∑/ 0
)
∑∑0 1
;
∑∑1 2
fighter
∏∏ 
.
∏∏ 
Frame
∏∏ 
++
∏∏ 
;
∏∏ 
Fighter
∫∫ 
opponent
∫∫ 
=
∫∫ 
fighter
∫∫ 
==
∫∫  "
player
∫∫# )
?
∫∫* +
enemy
∫∫, 1
:
∫∫2 3
player
∫∫4 :
;
∫∫: ;
if
ªª 
(
ªª 	
Math
ªª	 
.
ªª 
Abs
ªª 
(
ªª 
opponent
ªª 
.
ªª 
Position
ªª #
-
ªª$ %
fighter
ªª& -
.
ªª- .
Position
ªª. 6
)
ªª6 7
<=
ªª8 :
$num
ªª; <
&&
ªª= ?
$num
ºº 
>=
ºº 

fighter
ºº 
.
ºº 
Frame
ºº 
&&
ºº 
fighter
ºº $
.
ºº$ %
Frame
ºº% *
<=
ºº+ -
$num
ºº. /
&&
ºº0 2
opponent
ΩΩ 
.
ΩΩ 
Action
ΩΩ 
!=
ΩΩ 
Action
ΩΩ 
.
ΩΩ  
Block
ΩΩ  %
&&
ΩΩ& (
opponent
ææ 
.
ææ 
Action
ææ 
!=
ææ 
Action
ææ 
.
ææ  
GetUp
ææ  %
&&
ææ& (
opponent
øø 
.
øø 
Action
øø 
!=
øø 
Action
øø 
.
øø  
Ground
øø  &
&&
øø' )
opponent
¿¿ 
.
¿¿ 
Action
¿¿ 
!=
¿¿ 
Action
¿¿ 
.
¿¿  
Owned
¿¿  %
)
¿¿% &
{
¡¡ 
opponent
¬¬ 
.
¬¬ 
Health
¬¬ 
-=
¬¬ 
$num
¬¬ 
;
¬¬ 
Console
√√ 
.
√√ 
SetCursorPosition
√√ 
(
√√  
opponent
√√  (
.
√√( )
Position
√√) 1
,
√√1 2
Y
√√3 4
)
√√4 5
;
√√5 6
Erase
ƒƒ 
(
ƒƒ 
opponent
ƒƒ 
.
ƒƒ 
Action
ƒƒ 
switch
ƒƒ "
{
≈≈ 
Action
∆∆ 
.
∆∆ 
Punch
∆∆ 
=>
∆∆ 
opponent
∆∆ 
.
∆∆  
PunchAnimation
∆∆  .
[
∆∆. /
opponent
∆∆/ 7
.
∆∆7 8
Frame
∆∆8 =
]
∆∆= >
,
∆∆> ?
Action
«« 
.
«« 
Idle
«« 
=>
«« 
opponent
«« 
.
«« 
IdleAnimation
«« ,
[
««, -
opponent
««- 5
.
««5 6
Frame
««6 ;
]
««; <
,
««< =
Action
»» 
.
»» 
JumpKick
»» 
=>
»» 
opponent
»» "
.
»»" #
JumpKickAnimation
»»# 4
[
»»4 5
opponent
»»5 =
.
»»= >
Frame
»»> C
]
»»C D
,
»»D E
_
…… 
=>
……	 
throw
…… 
new
…… %
NotImplementedException
…… -
(
……- .
)
……. /
,
……/ 0
}
   
)
   
;
   	
opponent
ÀÀ 
.
ÀÀ 
Action
ÀÀ 
=
ÀÀ 
Action
ÀÀ 
.
ÀÀ 
Owned
ÀÀ $
;
ÀÀ$ %
opponent
ÃÃ 
.
ÃÃ 
Frame
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
Console
ÕÕ 
.
ÕÕ 
SetCursorPosition
ÕÕ 
(
ÕÕ  
opponent
ÕÕ  (
.
ÕÕ( )
Position
ÕÕ) 1
,
ÕÕ1 2
Y
ÕÕ3 4
)
ÕÕ4 5
;
ÕÕ5 6
Render
ŒŒ 
(
ŒŒ 
opponent
ŒŒ 
.
ŒŒ 
OwnedAnimation
ŒŒ $
[
ŒŒ$ %
opponent
ŒŒ% -
.
ŒŒ- .
Frame
ŒŒ. 3
]
ŒŒ3 4
)
ŒŒ4 5
;
ŒŒ5 6
opponent
œœ 
.
œœ 
	Stopwatch
œœ 
.
œœ 
Restart
œœ  
(
œœ  !
)
œœ! "
;
œœ" #
}
–– 
if
““ 
(
““ 	
fighter
““	 
.
““ 
Frame
““ 
>=
““ 
fighter
““ !
.
““! "
PunchAnimation
““" 0
.
““0 1
Length
““1 7
)
““7 8
{
”” 
fighter
‘‘ 
.
‘‘ 
Action
‘‘ 
=
‘‘ 
Action
‘‘ 
.
‘‘ 
Idle
‘‘ "
;
‘‘" #
fighter
’’ 
.
’’ 
Frame
’’ 
=
’’ 
$num
’’ 
;
’’ 
Console
÷÷ 
.
÷÷ 
SetCursorPosition
÷÷ 
(
÷÷  
fighter
÷÷  '
.
÷÷' (
Position
÷÷( 0
,
÷÷0 1
Y
÷÷2 3
)
÷÷3 4
;
÷÷4 5
Render
◊◊ 
(
◊◊ 
fighter
◊◊ 
.
◊◊ 
IdleAnimation
◊◊ "
[
◊◊" #
fighter
◊◊# *
.
◊◊* +
Frame
◊◊+ 0
]
◊◊0 1
)
◊◊1 2
;
◊◊2 3
}
ÿÿ 
else
ŸŸ 	
{
⁄⁄ 
Console
€€ 
.
€€ 
SetCursorPosition
€€ 
(
€€  
fighter
€€  '
.
€€' (
Position
€€( 0
,
€€0 1
Y
€€2 3
)
€€3 4
;
€€4 5
Render
‹‹ 
(
‹‹ 
fighter
‹‹ 
.
‹‹ 
PunchAnimation
‹‹ #
[
‹‹# $
fighter
‹‹$ +
.
‹‹+ ,
Frame
‹‹, 1
]
‹‹1 2
)
‹‹2 3
;
‹‹3 4
}
›› 
fighter
ﬁﬁ 
.
ﬁﬁ 
	Stopwatch
ﬁﬁ 
.
ﬁﬁ 
Restart
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ  
;
ﬁﬁ  !
}
ﬂﬂ 
else
‡‡ 
if
‡‡	 
(
‡‡ 
fighter
‡‡ 
.
‡‡ 
Action
‡‡ 
==
‡‡ 
Action
‡‡ %
.
‡‡% &
Block
‡‡& +
&&
‡‡, .
fighter
‡‡/ 6
.
‡‡6 7
	Stopwatch
‡‡7 @
.
‡‡@ A
Elapsed
‡‡A H
>
‡‡I J
timeSpanBlock
‡‡K X
)
‡‡X Y
{
·· 
Console
‚‚ 
.
‚‚ 
SetCursorPosition
‚‚ 
(
‚‚ 
fighter
‚‚ &
.
‚‚& '
Position
‚‚' /
,
‚‚/ 0
Y
‚‚1 2
)
‚‚2 3
;
‚‚3 4
Erase
„„ 

(
„„
 
fighter
„„ 
.
„„ 
BlockAnimation
„„ !
[
„„! "
fighter
„„" )
.
„„) *
Frame
„„* /
]
„„/ 0
)
„„0 1
;
„„1 2
fighter
‰‰ 
.
‰‰ 
Action
‰‰ 
=
‰‰ 
Action
‰‰ 
.
‰‰ 
Idle
‰‰ !
;
‰‰! "
fighter
ÂÂ 
.
ÂÂ 
Frame
ÂÂ 
=
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
Console
ÊÊ 
.
ÊÊ 
SetCursorPosition
ÊÊ 
(
ÊÊ 
fighter
ÊÊ &
.
ÊÊ& '
Position
ÊÊ' /
,
ÊÊ/ 0
Y
ÊÊ1 2
)
ÊÊ2 3
;
ÊÊ3 4
Render
ÁÁ 
(
ÁÁ 
fighter
ÁÁ 
.
ÁÁ 
IdleAnimation
ÁÁ !
[
ÁÁ! "
fighter
ÁÁ" )
.
ÁÁ) *
Frame
ÁÁ* /
]
ÁÁ/ 0
)
ÁÁ0 1
;
ÁÁ1 2
fighter
ËË 
.
ËË 
	Stopwatch
ËË 
.
ËË 
Restart
ËË 
(
ËË 
)
ËË  
;
ËË  !
}
ÈÈ 
else
ÍÍ 
if
ÍÍ	 
(
ÍÍ 
fighter
ÍÍ 
.
ÍÍ 
Action
ÍÍ 
==
ÍÍ 
Action
ÍÍ %
.
ÍÍ% &
JumpKick
ÍÍ& .
&&
ÍÍ/ 1
fighter
ÍÍ2 9
.
ÍÍ9 :
	Stopwatch
ÍÍ: C
.
ÍÍC D
Elapsed
ÍÍD K
>
ÍÍL M
timeSpanJumpKick
ÍÍN ^
)
ÍÍ^ _
{
ÎÎ 
Console
ÏÏ 
.
ÏÏ 
SetCursorPosition
ÏÏ 
(
ÏÏ 
fighter
ÏÏ &
.
ÏÏ& '
Position
ÏÏ' /
,
ÏÏ/ 0
Y
ÏÏ1 2
)
ÏÏ2 3
;
ÏÏ3 4
Erase
ÌÌ 

(
ÌÌ
 
fighter
ÌÌ 
.
ÌÌ 
JumpKickAnimation
ÌÌ $
[
ÌÌ$ %
fighter
ÌÌ% ,
.
ÌÌ, -
Frame
ÌÌ- 2
]
ÌÌ2 3
)
ÌÌ3 4
;
ÌÌ4 5
fighter
ÓÓ 
.
ÓÓ 
Frame
ÓÓ 
++
ÓÓ 
;
ÓÓ 
Fighter
 
opponent
 
=
 
fighter
 
==
  "
player
# )
?
* +
enemy
, 1
:
2 3
player
4 :
;
: ;
if
ÒÒ 
(
ÒÒ 	
Math
ÒÒ	 
.
ÒÒ 
Abs
ÒÒ 
(
ÒÒ 
opponent
ÒÒ 
.
ÒÒ 
Position
ÒÒ #
-
ÒÒ$ %
fighter
ÒÒ& -
.
ÒÒ- .
Position
ÒÒ. 6
)
ÒÒ6 7
<=
ÒÒ8 :
$num
ÒÒ; <
&&
ÒÒ= ?
fighter
ÚÚ 
.
ÚÚ 
Frame
ÚÚ 
==
ÚÚ 
$num
ÚÚ 
&&
ÚÚ 
opponent
ÛÛ 
.
ÛÛ 
Action
ÛÛ 
!=
ÛÛ 
Action
ÛÛ 
.
ÛÛ  
GetUp
ÛÛ  %
&&
ÛÛ& (
opponent
ÙÙ 
.
ÙÙ 
Action
ÙÙ 
!=
ÙÙ 
Action
ÙÙ 
.
ÙÙ  
Ground
ÙÙ  &
&&
ÙÙ' )
opponent
ıı 
.
ıı 
Action
ıı 
!=
ıı 
Action
ıı 
.
ıı  
Owned
ıı  %
)
ıı% &
{
ˆˆ 
opponent
˜˜ 
.
˜˜ 
Health
˜˜ 
-=
˜˜ 
opponent
˜˜ !
.
˜˜! "
Action
˜˜" (
==
˜˜) +
Action
˜˜, 2
.
˜˜2 3
Block
˜˜3 8
?
˜˜9 :
$num
˜˜; <
:
˜˜= >
$num
˜˜? @
;
˜˜@ A
Console
¯¯ 
.
¯¯ 
SetCursorPosition
¯¯ 
(
¯¯  
opponent
¯¯  (
.
¯¯( )
Position
¯¯) 1
,
¯¯1 2
Y
¯¯3 4
)
¯¯4 5
;
¯¯5 6
Erase
˘˘ 
(
˘˘ 
opponent
˘˘ 
.
˘˘ 
Action
˘˘ 
switch
˘˘ "
{
˙˙ 
Action
˚˚ 
.
˚˚ 
Punch
˚˚ 
=>
˚˚ 
opponent
˚˚ 
.
˚˚  
PunchAnimation
˚˚  .
[
˚˚. /
opponent
˚˚/ 7
.
˚˚7 8
Frame
˚˚8 =
]
˚˚= >
,
˚˚> ?
Action
¸¸ 
.
¸¸ 
Idle
¸¸ 
=>
¸¸ 
opponent
¸¸ 
.
¸¸ 
IdleAnimation
¸¸ ,
[
¸¸, -
opponent
¸¸- 5
.
¸¸5 6
Frame
¸¸6 ;
]
¸¸; <
,
¸¸< =
Action
˝˝ 
.
˝˝ 
JumpKick
˝˝ 
=>
˝˝ 
opponent
˝˝ "
.
˝˝" #
JumpKickAnimation
˝˝# 4
[
˝˝4 5
opponent
˝˝5 =
.
˝˝= >
Frame
˝˝> C
]
˝˝C D
,
˝˝D E
Action
˛˛ 
.
˛˛ 
Block
˛˛ 
=>
˛˛ 
opponent
˛˛ 
.
˛˛  
BlockAnimation
˛˛  .
[
˛˛. /
opponent
˛˛/ 7
.
˛˛7 8
Frame
˛˛8 =
]
˛˛= >
,
˛˛> ?
_
ˇˇ 
=>
ˇˇ	 
throw
ˇˇ 
new
ˇˇ %
NotImplementedException
ˇˇ -
(
ˇˇ- .
)
ˇˇ. /
,
ˇˇ/ 0
}
ÄÄ 
)
ÄÄ 
;
ÄÄ 	
opponent
ÅÅ 
.
ÅÅ 
Action
ÅÅ 
=
ÅÅ 
Action
ÅÅ 
.
ÅÅ 
Owned
ÅÅ $
;
ÅÅ$ %
opponent
ÇÇ 
.
ÇÇ 
Frame
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
Console
ÉÉ 
.
ÉÉ 
SetCursorPosition
ÉÉ 
(
ÉÉ  
opponent
ÉÉ  (
.
ÉÉ( )
Position
ÉÉ) 1
,
ÉÉ1 2
Y
ÉÉ3 4
)
ÉÉ4 5
;
ÉÉ5 6
Render
ÑÑ 
(
ÑÑ 
opponent
ÑÑ 
.
ÑÑ 
OwnedAnimation
ÑÑ $
[
ÑÑ$ %
opponent
ÑÑ% -
.
ÑÑ- .
Frame
ÑÑ. 3
]
ÑÑ3 4
)
ÑÑ4 5
;
ÑÑ5 6
opponent
ÖÖ 
.
ÖÖ 
	Stopwatch
ÖÖ 
.
ÖÖ 
Restart
ÖÖ  
(
ÖÖ  !
)
ÖÖ! "
;
ÖÖ" #
}
ÜÜ 
if
àà 
(
àà 	
fighter
àà	 
.
àà 
Frame
àà 
>=
àà 
fighter
àà !
.
àà! "
JumpKickAnimation
àà" 3
.
àà3 4
Length
àà4 :
)
àà: ;
{
ââ 
fighter
ää 
.
ää 
Action
ää 
=
ää 
Action
ää 
.
ää 
Idle
ää "
;
ää" #
fighter
ãã 
.
ãã 
Frame
ãã 
=
ãã 
$num
ãã 
;
ãã 
Console
åå 
.
åå 
SetCursorPosition
åå 
(
åå  
fighter
åå  '
.
åå' (
Position
åå( 0
,
åå0 1
Y
åå2 3
)
åå3 4
;
åå4 5
Render
çç 
(
çç 
fighter
çç 
.
çç 
IdleAnimation
çç "
[
çç" #
fighter
çç# *
.
çç* +
Frame
çç+ 0
]
çç0 1
)
çç1 2
;
çç2 3
}
éé 
else
èè 	
{
êê 
Console
ëë 
.
ëë 
SetCursorPosition
ëë 
(
ëë  
fighter
ëë  '
.
ëë' (
Position
ëë( 0
,
ëë0 1
Y
ëë2 3
)
ëë3 4
;
ëë4 5
Render
íí 
(
íí 
fighter
íí 
.
íí 
JumpKickAnimation
íí &
[
íí& '
fighter
íí' .
.
íí. /
Frame
íí/ 4
]
íí4 5
)
íí5 6
;
íí6 7
}
ìì 
fighter
îî 
.
îî 
	Stopwatch
îî 
.
îî 
Restart
îî 
(
îî 
)
îî  
;
îî  !
}
ïï 
else
ññ 
if
ññ	 
(
ññ 
fighter
ññ 
.
ññ 
Action
ññ 
==
ññ 
Action
ññ %
.
ññ% &
Owned
ññ& +
&&
ññ, .
fighter
ññ/ 6
.
ññ6 7
	Stopwatch
ññ7 @
.
ññ@ A
Elapsed
ññA H
>
ññI J
timeSpanOwned
ññK X
)
ññX Y
{
óó 
Console
òò 
.
òò 
SetCursorPosition
òò 
(
òò 
fighter
òò &
.
òò& '
Position
òò' /
,
òò/ 0
Y
òò1 2
)
òò2 3
;
òò3 4
Erase
ôô 

(
ôô
 
fighter
ôô 
.
ôô 
OwnedAnimation
ôô !
[
ôô! "
fighter
ôô" )
.
ôô) *
Frame
ôô* /
]
ôô/ 0
)
ôô0 1
;
ôô1 2
fighter
öö 
.
öö 
Frame
öö 
++
öö 
;
öö 
if
õõ 
(
õõ 	
fighter
õõ	 
.
õõ 
Frame
õõ 
>=
õõ 
fighter
õõ !
.
õõ! "
OwnedAnimation
õõ" 0
.
õõ0 1
Length
õõ1 7
)
õõ7 8
{
úú 
fighter
ùù 
.
ùù 
Action
ùù 
=
ùù 
Action
ùù 
.
ùù 
Ground
ùù $
;
ùù$ %
fighter
ûû 
.
ûû 
Frame
ûû 
=
ûû 
$num
ûû 
;
ûû 
Console
üü 
.
üü 
SetCursorPosition
üü 
(
üü  
fighter
üü  '
.
üü' (
Position
üü( 0
,
üü0 1
Y
üü2 3
)
üü3 4
;
üü4 5
Render
†† 
(
†† 
fighter
†† 
.
†† 
GroundAnimation
†† $
[
††$ %
fighter
††% ,
.
††, -
Frame
††- 2
]
††2 3
)
††3 4
;
††4 5
}
°° 
else
¢¢ 	
{
££ 
Console
§§ 
.
§§ 
SetCursorPosition
§§ 
(
§§  
fighter
§§  '
.
§§' (
Position
§§( 0
,
§§0 1
Y
§§2 3
)
§§3 4
;
§§4 5
Render
•• 
(
•• 
fighter
•• 
.
•• 
OwnedAnimation
•• #
[
••# $
fighter
••$ +
.
••+ ,
Frame
••, 1
]
••1 2
)
••2 3
;
••3 4
}
¶¶ 
fighter
ßß 
.
ßß 
	Stopwatch
ßß 
.
ßß 
Restart
ßß 
(
ßß 
)
ßß  
;
ßß  !
}
®® 
else
©© 
if
©©	 
(
©© 
fighter
©© 
.
©© 
Action
©© 
==
©© 
Action
©© %
.
©©% &
Ground
©©& ,
&&
©©- /
fighter
©©0 7
.
©©7 8
	Stopwatch
©©8 A
.
©©A B
Elapsed
©©B I
>
©©J K
timeSpanGround
©©L Z
)
©©Z [
{
™™ 
Console
´´ 
.
´´ 
SetCursorPosition
´´ 
(
´´ 
fighter
´´ &
.
´´& '
Position
´´' /
,
´´/ 0
Y
´´1 2
)
´´2 3
;
´´3 4
Erase
¨¨ 

(
¨¨
 
fighter
¨¨ 
.
¨¨ 
GroundAnimation
¨¨ "
[
¨¨" #
fighter
¨¨# *
.
¨¨* +
Frame
¨¨+ 0
]
¨¨0 1
)
¨¨1 2
;
¨¨2 3
fighter
≠≠ 
.
≠≠ 
Frame
≠≠ 
++
≠≠ 
;
≠≠ 
if
ÆÆ 
(
ÆÆ 	
fighter
ÆÆ	 
.
ÆÆ 
Frame
ÆÆ 
>=
ÆÆ 
fighter
ÆÆ !
.
ÆÆ! "
GroundAnimation
ÆÆ" 1
.
ÆÆ1 2
Length
ÆÆ2 8
)
ÆÆ8 9
{
ØØ 
fighter
∞∞ 
.
∞∞ 
Action
∞∞ 
=
∞∞ 
Action
∞∞ 
.
∞∞ 
GetUp
∞∞ #
;
∞∞# $
fighter
±± 
.
±± 
Frame
±± 
=
±± 
$num
±± 
;
±± 
Console
≤≤ 
.
≤≤ 
SetCursorPosition
≤≤ 
(
≤≤  
fighter
≤≤  '
.
≤≤' (
Position
≤≤( 0
,
≤≤0 1
Y
≤≤2 3
)
≤≤3 4
;
≤≤4 5
Render
≥≥ 
(
≥≥ 
fighter
≥≥ 
.
≥≥ 
GetUpAnimation
≥≥ #
[
≥≥# $
fighter
≥≥$ +
.
≥≥+ ,
Frame
≥≥, 1
]
≥≥1 2
)
≥≥2 3
;
≥≥3 4
}
¥¥ 
else
µµ 	
{
∂∂ 
Console
∑∑ 
.
∑∑ 
SetCursorPosition
∑∑ 
(
∑∑  
fighter
∑∑  '
.
∑∑' (
Position
∑∑( 0
,
∑∑0 1
Y
∑∑2 3
)
∑∑3 4
;
∑∑4 5
Render
∏∏ 
(
∏∏ 
fighter
∏∏ 
.
∏∏ 
GroundAnimation
∏∏ $
[
∏∏$ %
fighter
∏∏% ,
.
∏∏, -
Frame
∏∏- 2
]
∏∏2 3
)
∏∏3 4
;
∏∏4 5
}
ππ 
fighter
∫∫ 
.
∫∫ 
	Stopwatch
∫∫ 
.
∫∫ 
Restart
∫∫ 
(
∫∫ 
)
∫∫  
;
∫∫  !
}
ªª 
else
ºº 
if
ºº	 
(
ºº 
fighter
ºº 
.
ºº 
Action
ºº 
==
ºº 
Action
ºº %
.
ºº% &
GetUp
ºº& +
&&
ºº, .
fighter
ºº/ 6
.
ºº6 7
	Stopwatch
ºº7 @
.
ºº@ A
Elapsed
ººA H
>
ººI J
timeSpanGetUp
ººK X
)
ººX Y
{
ΩΩ 
Console
ææ 
.
ææ 
SetCursorPosition
ææ 
(
ææ 
fighter
ææ &
.
ææ& '
Position
ææ' /
,
ææ/ 0
Y
ææ1 2
)
ææ2 3
;
ææ3 4
Erase
øø 

(
øø
 
fighter
øø 
.
øø 
GetUpAnimation
øø !
[
øø! "
fighter
øø" )
.
øø) *
Frame
øø* /
]
øø/ 0
)
øø0 1
;
øø1 2
fighter
¿¿ 
.
¿¿ 
Frame
¿¿ 
++
¿¿ 
;
¿¿ 
if
¡¡ 
(
¡¡ 	
fighter
¡¡	 
.
¡¡ 
Frame
¡¡ 
>=
¡¡ 
fighter
¡¡ !
.
¡¡! "
GetUpAnimation
¡¡" 0
.
¡¡0 1
Length
¡¡1 7
)
¡¡7 8
{
¬¬ 
fighter
√√ 
.
√√ 
Action
√√ 
=
√√ 
Action
√√ 
.
√√ 
Idle
√√ "
;
√√" #
fighter
ƒƒ 
.
ƒƒ 
Frame
ƒƒ 
=
ƒƒ 
$num
ƒƒ 
;
ƒƒ 
Console
≈≈ 
.
≈≈ 
SetCursorPosition
≈≈ 
(
≈≈  
fighter
≈≈  '
.
≈≈' (
Position
≈≈( 0
,
≈≈0 1
Y
≈≈2 3
)
≈≈3 4
;
≈≈4 5
Render
∆∆ 
(
∆∆ 
fighter
∆∆ 
.
∆∆ 
IdleAnimation
∆∆ "
[
∆∆" #
fighter
∆∆# *
.
∆∆* +
Frame
∆∆+ 0
]
∆∆0 1
)
∆∆1 2
;
∆∆2 3
}
«« 
else
»» 	
{
…… 
Console
   
.
   
SetCursorPosition
   
(
    
fighter
    '
.
  ' (
Position
  ( 0
,
  0 1
Y
  2 3
)
  3 4
;
  4 5
Render
ÀÀ 
(
ÀÀ 
fighter
ÀÀ 
.
ÀÀ 
GetUpAnimation
ÀÀ #
[
ÀÀ# $
fighter
ÀÀ$ +
.
ÀÀ+ ,
Frame
ÀÀ, 1
]
ÀÀ1 2
)
ÀÀ2 3
;
ÀÀ3 4
}
ÃÃ 
fighter
ÕÕ 
.
ÕÕ 
	Stopwatch
ÕÕ 
.
ÕÕ 
Restart
ÕÕ 
(
ÕÕ 
)
ÕÕ  
;
ÕÕ  !
}
ŒŒ 
}
œœ 
Console
’’ 

.
’’
 
SetCursorPosition
’’ 
(
’’ 
player
’’ #
.
’’# $
Position
’’$ ,
,
’’, -
Y
’’. /
)
’’/ 0
;
’’0 1
Render
÷÷ 	
(
÷÷	 

player
÷÷
 
.
÷÷ 
Action
÷÷ 
switch
÷÷ 
{
◊◊ 
Action
ÿÿ 

.
ÿÿ
 
Idle
ÿÿ 
=>
ÿÿ 
player
ÿÿ 
.
ÿÿ 
IdleAnimation
ÿÿ '
[
ÿÿ' (
player
ÿÿ( .
.
ÿÿ. /
Frame
ÿÿ/ 4
]
ÿÿ4 5
,
ÿÿ5 6
Action
ŸŸ 

.
ŸŸ
 
Punch
ŸŸ 
=>
ŸŸ 
player
ŸŸ 
.
ŸŸ 
PunchAnimation
ŸŸ )
[
ŸŸ) *
player
ŸŸ* 0
.
ŸŸ0 1
Frame
ŸŸ1 6
]
ŸŸ6 7
,
ŸŸ7 8
Action
⁄⁄ 

.
⁄⁄
 
Block
⁄⁄ 
=>
⁄⁄ 
player
⁄⁄ 
.
⁄⁄ 
BlockAnimation
⁄⁄ )
[
⁄⁄) *
player
⁄⁄* 0
.
⁄⁄0 1
Frame
⁄⁄1 6
]
⁄⁄6 7
,
⁄⁄7 8
Action
€€ 

.
€€
 
JumpKick
€€ 
=>
€€ 
player
€€ 
.
€€ 
JumpKickAnimation
€€ /
[
€€/ 0
player
€€0 6
.
€€6 7
Frame
€€7 <
]
€€< =
,
€€= >
Action
‹‹ 

.
‹‹
 
Owned
‹‹ 
=>
‹‹ 
player
‹‹ 
.
‹‹ 
OwnedAnimation
‹‹ )
[
‹‹) *
player
‹‹* 0
.
‹‹0 1
Frame
‹‹1 6
]
‹‹6 7
,
‹‹7 8
Action
›› 

.
››
 
Ground
›› 
=>
›› 
player
›› 
.
›› 
GroundAnimation
›› +
[
››+ ,
player
››, 2
.
››2 3
Frame
››3 8
]
››8 9
,
››9 :
Action
ﬁﬁ 

.
ﬁﬁ
 
GetUp
ﬁﬁ 
=>
ﬁﬁ 
player
ﬁﬁ 
.
ﬁﬁ 
GetUpAnimation
ﬁﬁ )
[
ﬁﬁ) *
player
ﬁﬁ* 0
.
ﬁﬁ0 1
Frame
ﬁﬁ1 6
]
ﬁﬁ6 7
,
ﬁﬁ7 8
_
ﬂﬂ 
=>
ﬂﬂ 
throw
ﬂﬂ	 
new
ﬂﬂ %
NotImplementedException
ﬂﬂ *
(
ﬂﬂ* +
)
ﬂﬂ+ ,
,
ﬂﬂ, -
}
‡‡ 
)
‡‡ 
;
‡‡ 
{
ÂÂ 
char
ÁÁ 
[
ÁÁ 	
]
ÁÁ	 

playerHealthBar
ÁÁ 
=
ÁÁ 
new
ÁÁ  
char
ÁÁ! %
[
ÁÁ% &
barWidth
ÁÁ& .
]
ÁÁ. /
;
ÁÁ/ 0
int
ËË "
playerHealthBarLevel
ËË 
=
ËË 
(
ËË  
int
ËË  #
)
ËË# $
(
ËË$ %
(
ËË% &
player
ËË& ,
.
ËË, -
Health
ËË- 3
/
ËË4 5
(
ËË6 7
float
ËË7 <
)
ËË< =
player
ËË= C
.
ËËC D
	MaxHealth
ËËD M
)
ËËM N
*
ËËO P
barWidth
ËËQ Y
)
ËËY Z
;
ËËZ [
for
ÈÈ 
(
ÈÈ 	
int
ÈÈ	 
i
ÈÈ 
=
ÈÈ 
$num
ÈÈ 
;
ÈÈ 
i
ÈÈ 
<
ÈÈ 
barWidth
ÈÈ  
;
ÈÈ  !
i
ÈÈ" #
++
ÈÈ# %
)
ÈÈ% &
{
ÍÍ 
playerHealthBar
ÎÎ 
[
ÎÎ 
i
ÎÎ 
]
ÎÎ 
=
ÎÎ 
i
ÎÎ 
<=
ÎÎ "
playerHealthBarLevel
ÎÎ 3
?
ÎÎ4 5
$char
ÎÎ6 9
:
ÎÎ: ;
$char
ÎÎ< ?
;
ÎÎ? @
}
ÏÏ 
char
ÓÓ 
[
ÓÓ 	
]
ÓÓ	 

enemyHealthBar
ÓÓ 
=
ÓÓ 
new
ÓÓ 
char
ÓÓ  $
[
ÓÓ$ %
barWidth
ÓÓ% -
]
ÓÓ- .
;
ÓÓ. /
int
ÔÔ !
enemyHealthBarLevel
ÔÔ 
=
ÔÔ 
(
ÔÔ 
int
ÔÔ "
)
ÔÔ" #
(
ÔÔ# $
(
ÔÔ$ %
enemy
ÔÔ% *
.
ÔÔ* +
Health
ÔÔ+ 1
/
ÔÔ2 3
(
ÔÔ4 5
float
ÔÔ5 :
)
ÔÔ: ;
enemy
ÔÔ; @
.
ÔÔ@ A
	MaxHealth
ÔÔA J
)
ÔÔJ K
*
ÔÔL M
barWidth
ÔÔN V
)
ÔÔV W
;
ÔÔW X
for
 
(
 	
int
	 
i
 
=
 
$num
 
;
 
i
 
<
 
barWidth
  
;
  !
i
" #
++
# %
)
% &
{
ÒÒ 
enemyHealthBar
ÚÚ 
[
ÚÚ 
barWidth
ÚÚ 
-
ÚÚ 
i
ÚÚ  
-
ÚÚ! "
$num
ÚÚ# $
]
ÚÚ$ %
=
ÚÚ& '
i
ÚÚ( )
<=
ÚÚ* ,!
enemyHealthBarLevel
ÚÚ- @
?
ÚÚA B
$char
ÚÚC F
:
ÚÚG H
$char
ÚÚI L
;
ÚÚL M
}
ÛÛ 
string
ıı 


healthBars
ıı 
=
ıı 
$str
ıı 
+
ıı  
new
ıı! $
string
ıı% +
(
ıı+ ,
playerHealthBar
ıı, ;
)
ıı; <
+
ıı= >
$str
ıı? B
+
ııC D
new
ııE H
string
ııI O
(
ııO P
enemyHealthBar
ııP ^
)
ıı^ _
+
ıı` a
$str
ııb h
;
ııh i
Console
ˆˆ 
.
ˆˆ 
SetCursorPosition
ˆˆ 
(
ˆˆ 
$num
ˆˆ 
,
ˆˆ  
$num
ˆˆ! "
)
ˆˆ" #
;
ˆˆ# $
Console
˜˜ 
.
˜˜ 
Write
˜˜ 
(
˜˜ 

healthBars
˜˜ 
)
˜˜ 
;
˜˜ 
}
¯¯ 
{
˘˘ 
char
˚˚ 
[
˚˚ 	
]
˚˚	 

playerEnergyBar
˚˚ 
=
˚˚ 
new
˚˚  
char
˚˚! %
[
˚˚% &
barWidth
˚˚& .
]
˚˚. /
;
˚˚/ 0
int
¸¸ "
playerEnergyBarLevel
¸¸ 
=
¸¸ 
(
¸¸  
int
¸¸  #
)
¸¸# $
(
¸¸$ %
(
¸¸% &
player
¸¸& ,
.
¸¸, -
Energy
¸¸- 3
/
¸¸4 5
(
¸¸6 7
float
¸¸7 <
)
¸¸< =
player
¸¸= C
.
¸¸C D
	MaxEnergy
¸¸D M
)
¸¸M N
*
¸¸O P
barWidth
¸¸Q Y
)
¸¸Y Z
;
¸¸Z [
for
˝˝ 
(
˝˝ 	
int
˝˝	 
i
˝˝ 
=
˝˝ 
$num
˝˝ 
;
˝˝ 
i
˝˝ 
<
˝˝ 
barWidth
˝˝  
;
˝˝  !
i
˝˝" #
++
˝˝# %
)
˝˝% &
{
˛˛ 
playerEnergyBar
ˇˇ 
[
ˇˇ 
i
ˇˇ 
]
ˇˇ 
=
ˇˇ 
i
ˇˇ 
<=
ˇˇ "
playerEnergyBarLevel
ˇˇ 3
?
ˇˇ4 5
$char
ˇˇ6 9
:
ˇˇ: ;
$char
ˇˇ< ?
;
ˇˇ? @
}
ÄÄ 
char
ÇÇ 
[
ÇÇ 	
]
ÇÇ	 

enemyEnergyBar
ÇÇ 
=
ÇÇ 
new
ÇÇ 
char
ÇÇ  $
[
ÇÇ$ %
barWidth
ÇÇ% -
]
ÇÇ- .
;
ÇÇ. /
int
ÉÉ !
enemyEnergyBarLevel
ÉÉ 
=
ÉÉ 
(
ÉÉ 
int
ÉÉ "
)
ÉÉ" #
(
ÉÉ# $
(
ÉÉ$ %
enemy
ÉÉ% *
.
ÉÉ* +
Energy
ÉÉ+ 1
/
ÉÉ2 3
(
ÉÉ4 5
float
ÉÉ5 :
)
ÉÉ: ;
enemy
ÉÉ; @
.
ÉÉ@ A
	MaxEnergy
ÉÉA J
)
ÉÉJ K
*
ÉÉL M
barWidth
ÉÉN V
)
ÉÉV W
;
ÉÉW X
for
ÑÑ 
(
ÑÑ 	
int
ÑÑ	 
i
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
i
ÑÑ 
<
ÑÑ 
barWidth
ÑÑ  
;
ÑÑ  !
i
ÑÑ" #
++
ÑÑ# %
)
ÑÑ% &
{
ÖÖ 
enemyEnergyBar
ÜÜ 
[
ÜÜ 
barWidth
ÜÜ 
-
ÜÜ 
i
ÜÜ  
-
ÜÜ! "
$num
ÜÜ# $
]
ÜÜ$ %
=
ÜÜ& '
i
ÜÜ( )
<=
ÜÜ* ,!
enemyEnergyBarLevel
ÜÜ- @
?
ÜÜA B
$char
ÜÜC F
:
ÜÜG H
$char
ÜÜI L
;
ÜÜL M
}
áá 
string
ââ 


energyBars
ââ 
=
ââ 
$str
ââ 
+
ââ  
new
ââ! $
string
ââ% +
(
ââ+ ,
playerEnergyBar
ââ, ;
)
ââ; <
+
ââ= >
$str
ââ? B
+
ââC D
new
ââE H
string
ââI O
(
ââO P
enemyEnergyBar
ââP ^
)
ââ^ _
+
ââ` a
$str
ââb h
;
ââh i
Console
ää 
.
ää 
SetCursorPosition
ää 
(
ää 
$num
ää 
,
ää  
$num
ää! "
)
ää" #
;
ää# $
Console
ãã 
.
ãã 
Write
ãã 
(
ãã 

energyBars
ãã 
)
ãã 
;
ãã 
}
åå 
if
èè 
(
èè 
player
èè 
.
èè 
Health
èè 
<=
èè 
$num
èè 
&&
èè 
player
èè #
.
èè# $
Action
èè$ *
==
èè+ -
Action
èè. 4
.
èè4 5
Ground
èè5 ;
)
èè; <
{
êê 
Console
ëë 
.
ëë 
SetCursorPosition
ëë 
(
ëë 
$num
ëë 
,
ëë  
Y
ëë! "
+
ëë# $
$num
ëë% &
)
ëë& '
;
ëë' (
Console
íí 
.
íí 
Write
íí 
(
íí 
$str
íí 
)
íí 
;
íí 
break
ìì 	
;
ìì	 

}
îî 
if
ïï 
(
ïï 
enemy
ïï 
.
ïï 
Health
ïï 
<=
ïï 
$num
ïï 
&&
ïï 
enemy
ïï !
.
ïï! "
Action
ïï" (
==
ïï) +
Action
ïï, 2
.
ïï2 3
Ground
ïï3 9
)
ïï9 :
{
ññ 
Console
óó 
.
óó 
SetCursorPosition
óó 
(
óó 
$num
óó 
,
óó  
Y
óó! "
+
óó# $
$num
óó% &
)
óó& '
;
óó' (
Console
òò 
.
òò 
Write
òò 
(
òò 
$str
òò 
)
òò 
;
òò 
break
ôô 	
;
ôô	 

}
öö 
Thread
úú 	
.
úú	 

Sleep
úú
 
(
úú 
sleep
úú 
)
úú 
;
úú 
}
ùù 
Console
ûû 	
.
ûû	 

ReadLine
ûû
 
(
ûû 
)
ûû 
;
ûû 
}
üü 
static
££ 
void
££ 
Render
££ 
(
££ 
string
££ 
@string
££ "
,
££" #
bool
££$ (
renderSpace
££) 4
=
££5 6
false
££7 <
)
££< =
{
§§ 
int
•• 
x
•• 
=
•• 	
Console
••
 
.
•• 

CursorLeft
•• 
;
•• 
int
¶¶ 
y
¶¶ 
=
¶¶ 	
Console
¶¶
 
.
¶¶ 
	CursorTop
¶¶ 
;
¶¶ 
foreach
ßß 	
(
ßß
 
char
ßß 
c
ßß 
in
ßß 
@string
ßß 
)
ßß 
if
®® 
(
®® 
c
®® 
is
®®	 
$char
®® 
)
®® 
Console
©© 
.
©© 
SetCursorPosition
©© 
(
©© 
x
©© 
,
©©  
++
©©! #
y
©©# $
)
©©$ %
;
©©% &
else
™™ 
if
™™ 

(
™™ 
Console
™™ 
.
™™ 

CursorLeft
™™ 
<
™™  
width
™™! &
-
™™' (
$num
™™) *
&&
™™+ -
(
™™. /
c
™™/ 0
is
™™1 3
not
™™4 7
$char
™™8 ;
||
™™< >
renderSpace
™™? J
)
™™J K
)
™™K L
Console
´´ 
.
´´ 
Write
´´ 
(
´´ 
c
´´ 
)
´´ 
;
´´ 
else
¨¨ 
if
¨¨ 

(
¨¨ 
Console
¨¨ 
.
¨¨ 

CursorLeft
¨¨ 
<
¨¨  
width
¨¨! &
-
¨¨' (
$num
¨¨) *
&&
¨¨+ -
Console
¨¨. 5
.
¨¨5 6
	CursorTop
¨¨6 ?
<
¨¨@ A
height
¨¨B H
-
¨¨I J
$num
¨¨K L
)
¨¨L M
Console
≠≠ 
.
≠≠ 
SetCursorPosition
≠≠ 
(
≠≠ 
Console
≠≠ %
.
≠≠% &

CursorLeft
≠≠& 0
+
≠≠1 2
$num
≠≠3 4
,
≠≠4 5
Console
≠≠6 =
.
≠≠= >
	CursorTop
≠≠> G
)
≠≠G H
;
≠≠H I
}
ÆÆ 
static
∞∞ 
void
∞∞ 
Erase
∞∞ 
(
∞∞ 
string
∞∞ 
@string
∞∞ !
)
∞∞! "
{
±± 
int
≤≤ 
x
≤≤ 
=
≤≤ 	
Console
≤≤
 
.
≤≤ 

CursorLeft
≤≤ 
;
≤≤ 
int
≥≥ 
y
≥≥ 
=
≥≥ 	
Console
≥≥
 
.
≥≥ 
	CursorTop
≥≥ 
;
≥≥ 
foreach
¥¥ 	
(
¥¥
 
char
¥¥ 
c
¥¥ 
in
¥¥ 
@string
¥¥ 
)
¥¥ 
if
µµ 
(
µµ 
c
µµ 
is
µµ	 
$char
µµ 
)
µµ 
Console
∂∂ 
.
∂∂ 
SetCursorPosition
∂∂ 
(
∂∂ 
x
∂∂ 
,
∂∂  
++
∂∂! #
y
∂∂# $
)
∂∂$ %
;
∂∂% &
else
∑∑ 
if
∑∑ 

(
∑∑ 
Console
∑∑ 
.
∑∑ 

CursorLeft
∑∑ 
<
∑∑  
width
∑∑! &
-
∑∑' (
$num
∑∑) *
&&
∑∑+ -
c
∑∑. /
is
∑∑0 2
not
∑∑3 6
$char
∑∑7 :
)
∑∑: ;
Console
∏∏ 
.
∏∏ 
Write
∏∏ 
(
∏∏ 
$char
∏∏ 
)
∏∏ 
;
∏∏ 
else
ππ 
if
ππ 

(
ππ 
Console
ππ 
.
ππ 

CursorLeft
ππ 
<
ππ  
width
ππ! &
-
ππ' (
$num
ππ) *
&&
ππ+ -
Console
ππ. 5
.
ππ5 6
	CursorTop
ππ6 ?
<
ππ@ A
height
ππB H
-
ππI J
$num
ππK L
)
ππL M
Console
∫∫ 
.
∫∫ 
SetCursorPosition
∫∫ 
(
∫∫ 
Console
∫∫ %
.
∫∫% &

CursorLeft
∫∫& 0
+
∫∫1 2
$num
∫∫3 4
,
∫∫4 5
Console
∫∫6 =
.
∫∫= >
	CursorTop
∫∫> G
)
∫∫G H
;
∫∫H I
}
ªª 
static
øø 
class
øø 
Ascii
øø 
{
¿¿ 
public
√√ 
static
√√	 
class
√√ 
Player
√√ 
{
ƒƒ 
public
≈≈ 	
static
≈≈
 
readonly
≈≈ 
string
≈≈  
[
≈≈  !
]
≈≈! "
IdleAnimation
≈≈# 0
=
≈≈1 2
new
≈≈3 6
string
≈≈7 =
[
≈≈= >
]
≈≈> ?
{
∆∆ 
$str
»» 
+
»» 
$char
»» 
+
»» 
$str
…… 
+
…… 
$char
…… 
+
…… 
$str
   
+
   
$char
   
+
   
$str
ÀÀ 
+
ÀÀ 
$char
ÀÀ 
+
ÀÀ 
$str
ÃÃ 
+
ÃÃ 
$char
ÃÃ 
+
ÃÃ 
$str
ÕÕ 
,
ÕÕ 
$str
œœ 
+
œœ 
$char
œœ 
+
œœ 
$str
–– 
+
–– 
$char
–– 
+
–– 
$str
—— 
+
—— 
$char
—— 
+
—— 
$str
““ 
+
““ 
$char
““ 
+
““ 
$str
”” 
+
”” 
$char
”” 
+
”” 
$str
‘‘ 
,
‘‘ 
}
’’ 
;
’’ 
public
◊◊ 	
static
◊◊
 
readonly
◊◊ 
string
◊◊  
[
◊◊  !
]
◊◊! "
BlockAnimation
◊◊# 1
=
◊◊2 3
new
◊◊4 7
string
◊◊8 >
[
◊◊> ?
]
◊◊? @
{
ÿÿ 
$str
⁄⁄ 
+
⁄⁄ 
$char
⁄⁄ 
+
⁄⁄ 
$str
€€ 
+
€€ 
$char
€€ 
+
€€ 
$str
‹‹ 
+
‹‹ 
$char
‹‹ 
+
‹‹ 
$str
›› 
+
›› 
$char
›› 
+
›› 
$str
ﬁﬁ 
+
ﬁﬁ 
$char
ﬁﬁ 
+
ﬁﬁ 
$str
ﬂﬂ 
,
ﬂﬂ 
}
‡‡ 
;
‡‡ 
public
‚‚ 	
static
‚‚
 
readonly
‚‚ 
string
‚‚  
[
‚‚  !
]
‚‚! "
PunchAnimation
‚‚# 1
=
‚‚2 3
new
‚‚4 7
string
‚‚8 >
[
‚‚> ?
]
‚‚? @
{
„„ 
$str
ÂÂ 
+
ÂÂ 
$char
ÂÂ 
+
ÂÂ 
$str
ÊÊ 
+
ÊÊ 
$char
ÊÊ 
+
ÊÊ 
$str
ÁÁ 
+
ÁÁ 
$char
ÁÁ 
+
ÁÁ 
$str
ËË 
+
ËË 
$char
ËË 
+
ËË 
$str
ÈÈ 
+
ÈÈ 
$char
ÈÈ 
+
ÈÈ 
$str
ÍÍ 
,
ÍÍ 
$str
ÏÏ 
+
ÏÏ 
$char
ÏÏ 
+
ÏÏ 
$str
ÌÌ 
+
ÌÌ 
$char
ÌÌ 
+
ÌÌ 
$str
ÓÓ 
+
ÓÓ 
$char
ÓÓ 
+
ÓÓ 
$str
ÔÔ 
+
ÔÔ 
$char
ÔÔ 
+
ÔÔ 
$str
 
+
 
$char
 
+
 
$str
ÒÒ 
,
ÒÒ 
$str
ÛÛ 
+
ÛÛ 
$char
ÛÛ 
+
ÛÛ 
$str
ÙÙ 
+
ÙÙ 
$char
ÙÙ 
+
ÙÙ 
$str
ıı 
+
ıı 
$char
ıı 
+
ıı 
$str
ˆˆ 
+
ˆˆ 
$char
ˆˆ 
+
ˆˆ 
$str
˜˜ 
+
˜˜ 
$char
˜˜ 
+
˜˜ 
$str
¯¯ 
,
¯¯ 
$str
˙˙ 
+
˙˙ 
$char
˙˙ 
+
˙˙ 
$str
˚˚ 
+
˚˚ 
$char
˚˚ 
+
˚˚ 
$str
¸¸ 
+
¸¸ 
$char
¸¸ 
+
¸¸ 
$str
˝˝ 
+
˝˝ 
$char
˝˝ 
+
˝˝ 
$str
˛˛ 
+
˛˛ 
$char
˛˛ 
+
˛˛ 
$str
ˇˇ 
,
ˇˇ 
$str
ÅÅ 
+
ÅÅ 
$char
ÅÅ 
+
ÅÅ 
$str
ÇÇ 
+
ÇÇ 
$char
ÇÇ 
+
ÇÇ 
$str
ÉÉ 
+
ÉÉ 
$char
ÉÉ 
+
ÉÉ 
$str
ÑÑ 
+
ÑÑ 
$char
ÑÑ 
+
ÑÑ 
$str
ÖÖ 
+
ÖÖ 
$char
ÖÖ 
+
ÖÖ 
$str
ÜÜ 
,
ÜÜ 
$str
àà 
+
àà 
$char
àà 
+
àà 
$str
ââ 
+
ââ 
$char
ââ 
+
ââ 
$str
ää 
+
ää 
$char
ää 
+
ää 
$str
ãã 
+
ãã 
$char
ãã 
+
ãã 
$str
åå 
+
åå 
$char
åå 
+
åå 
$str
çç 
,
çç 
}
éé 
;
éé 
public
êê 	
static
êê
 
readonly
êê 
string
êê  
[
êê  !
]
êê! "
JumpKickAnimation
êê# 4
=
êê5 6
new
êê7 :
string
êê; A
[
êêA B
]
êêB C
{
ëë 
$str
ìì 
+
ìì 
$char
ìì 
+
ìì 
$str
îî 
+
îî 
$char
îî 
+
îî 
$str
ïï 
+
ïï 
$char
ïï 
+
ïï 
$str
ññ 
+
ññ 
$char
ññ 
+
ññ 
$str
óó 
+
óó 
$char
óó 
+
óó 
$str
òò 
,
òò 
$str
öö 
+
öö 
$char
öö 
+
öö 
$str
õõ 
+
õõ 
$char
õõ 
+
õõ 
$str
úú 
+
úú 
$char
úú 
+
úú 
$str
ùù 
+
ùù 
$char
ùù 
+
ùù 
$str
ûû 
+
ûû 
$char
ûû 
+
ûû 
$str
üü 
,
üü 
$str
°° 
+
°° 
$char
°° 
+
°° 
$str
¢¢ 
+
¢¢ 
$char
¢¢ 
+
¢¢ 
$str
££ 
+
££ 
$char
££ 
+
££ 
$str
§§ 
+
§§ 
$char
§§ 
+
§§ 
$str
•• 
+
•• 
$char
•• 
+
•• 
$str
¶¶ 
,
¶¶ 
$str
®® 
+
®® 
$char
®® 
+
®® 
$str
©© 
+
©© 
$char
©© 
+
©© 
$str
™™ 
+
™™ 
$char
™™ 
+
™™ 
$str
´´ 
+
´´ 
$char
´´ 
+
´´ 
$str
¨¨ 
+
¨¨ 
$char
¨¨ 
+
¨¨ 
$str
≠≠ 
,
≠≠ 
$str
ØØ 
+
ØØ 
$char
ØØ 
+
ØØ 
$str
∞∞ 
+
∞∞ 
$char
∞∞ 
+
∞∞ 
$str
±± 
+
±± 
$char
±± 
+
±± 
$str
≤≤ 
+
≤≤ 
$char
≤≤ 
+
≤≤ 
$str
≥≥ 
+
≥≥ 
$char
≥≥ 
+
≥≥ 
$str
¥¥ 
,
¥¥ 
$str
∂∂ 
+
∂∂ 
$char
∂∂ 
+
∂∂ 
$str
∑∑ 
+
∑∑ 
$char
∑∑ 
+
∑∑ 
$str
∏∏ 
+
∏∏ 
$char
∏∏ 
+
∏∏ 
$str
ππ 
+
ππ 
$char
ππ 
+
ππ 
$str
∫∫ 
+
∫∫ 
$char
∫∫ 
+
∫∫ 
$str
ªª 
,
ªª 
$str
ΩΩ 
+
ΩΩ 
$char
ΩΩ 
+
ΩΩ 
$str
ææ 
+
ææ 
$char
ææ 
+
ææ 
$str
øø 
+
øø 
$char
øø 
+
øø 
$str
¿¿ 
+
¿¿ 
$char
¿¿ 
+
¿¿ 
$str
¡¡ 
+
¡¡ 
$char
¡¡ 
+
¡¡ 
$str
¬¬ 
,
¬¬ 
$str
ƒƒ 
+
ƒƒ 
$char
ƒƒ 
+
ƒƒ 
$str
≈≈ 
+
≈≈ 
$char
≈≈ 
+
≈≈ 
$str
∆∆ 
+
∆∆ 
$char
∆∆ 
+
∆∆ 
$str
«« 
+
«« 
$char
«« 
+
«« 
$str
»» 
+
»» 
$char
»» 
+
»» 
$str
…… 
,
…… 
}
   
;
   
public
ÃÃ 	
static
ÃÃ
 
readonly
ÃÃ 
string
ÃÃ  
[
ÃÃ  !
]
ÃÃ! "
OwnedAnimation
ÃÃ# 1
=
ÃÃ2 3
new
ÃÃ4 7
string
ÃÃ8 >
[
ÃÃ> ?
]
ÃÃ? @
{
ÕÕ 
$str
œœ 
+
œœ 
$char
œœ 
+
œœ 
$str
–– 
+
–– 
$char
–– 
+
–– 
$str
—— 
+
—— 
$char
—— 
+
—— 
$str
““ 
+
““ 
$char
““ 
+
““ 
$str
”” 
+
”” 
$char
”” 
+
”” 
$str
‘‘ 
,
‘‘ 
$str
÷÷ 
+
÷÷ 
$char
÷÷ 
+
÷÷ 
$str
◊◊ 
+
◊◊ 
$char
◊◊ 
+
◊◊ 
$str
ÿÿ 
+
ÿÿ 
$char
ÿÿ 
+
ÿÿ 
$str
ŸŸ 
+
ŸŸ 
$char
ŸŸ 
+
ŸŸ 
$str
⁄⁄ 
+
⁄⁄ 
$char
⁄⁄ 
+
⁄⁄ 
$str
€€ 
,
€€ 
$str
›› 
+
›› 
$char
›› 
+
›› 
$str
ﬁﬁ 
+
ﬁﬁ 
$char
ﬁﬁ 
+
ﬁﬁ 
$str
ﬂﬂ 
+
ﬂﬂ 
$char
ﬂﬂ 
+
ﬂﬂ 
$str
‡‡ 
+
‡‡ 
$char
‡‡ 
+
‡‡ 
$str
·· 
+
·· 
$char
·· 
+
·· 
$str
‚‚ 
,
‚‚ 
$str
‰‰ 
+
‰‰ 
$char
‰‰ 
+
‰‰ 
$str
ÂÂ 
+
ÂÂ 
$char
ÂÂ 
+
ÂÂ 
$str
ÊÊ 
+
ÊÊ 
$char
ÊÊ 
+
ÊÊ 
$str
ÁÁ 
+
ÁÁ 
$char
ÁÁ 
+
ÁÁ 
$str
ËË 
+
ËË 
$char
ËË 
+
ËË 
$str
ÈÈ 
,
ÈÈ 
}
ÍÍ 
;
ÍÍ 
public
ÏÏ 	
static
ÏÏ
 
readonly
ÏÏ 
string
ÏÏ  
[
ÏÏ  !
]
ÏÏ! "
GroundAnimation
ÏÏ# 2
=
ÏÏ3 4
new
ÏÏ5 8
string
ÏÏ9 ?
[
ÏÏ? @
]
ÏÏ@ A
{
ÌÌ 
$str
ÔÔ 
+
ÔÔ 
$char
ÔÔ 
+
ÔÔ 
$str
 
+
 
$char
 
+
 
$str
ÒÒ 
+
ÒÒ 
$char
ÒÒ 
+
ÒÒ 
$str
ÚÚ 
+
ÚÚ 
$char
ÚÚ 
+
ÚÚ 
$str
ÛÛ 
+
ÛÛ 
$char
ÛÛ 
+
ÛÛ 
$str
ÙÙ 
,
ÙÙ 
}
ıı 
;
ıı 
public
˜˜ 	
static
˜˜
 
readonly
˜˜ 
string
˜˜  
[
˜˜  !
]
˜˜! "
GetUpAnimation
˜˜# 1
=
˜˜2 3
new
˜˜4 7
string
˜˜8 >
[
˜˜> ?
]
˜˜? @
{
¯¯ 
$str
˙˙ 
+
˙˙ 
$char
˙˙ 
+
˙˙ 
$str
˚˚ 
+
˚˚ 
$char
˚˚ 
+
˚˚ 
$str
¸¸ 
+
¸¸ 
$char
¸¸ 
+
¸¸ 
$str
˝˝ 
+
˝˝ 
$char
˝˝ 
+
˝˝ 
$str
˛˛ 
+
˛˛ 
$char
˛˛ 
+
˛˛ 
$str
ˇˇ 
,
ˇˇ 
$str
ÅÅ 
+
ÅÅ 
$char
ÅÅ 
+
ÅÅ 
$str
ÇÇ 
+
ÇÇ 
$char
ÇÇ 
+
ÇÇ 
$str
ÉÉ 
+
ÉÉ 
$char
ÉÉ 
+
ÉÉ 
$str
ÑÑ 
+
ÑÑ 
$char
ÑÑ 
+
ÑÑ 
$str
ÖÖ 
+
ÖÖ 
$char
ÖÖ 
+
ÖÖ 
$str
ÜÜ 
,
ÜÜ 
$str
àà 
+
àà 
$char
àà 
+
àà 
$str
ââ 
+
ââ 
$char
ââ 
+
ââ 
$str
ää 
+
ää 
$char
ää 
+
ää 
$str
ãã 
+
ãã 
$char
ãã 
+
ãã 
$str
åå 
+
åå 
$char
åå 
+
åå 
$str
çç 
,
çç 
$str
èè 
+
èè 
$char
èè 
+
èè 
$str
êê 
+
êê 
$char
êê 
+
êê 
$str
ëë 
+
ëë 
$char
ëë 
+
ëë 
$str
íí 
+
íí 
$char
íí 
+
íí 
$str
ìì 
+
ìì 
$char
ìì 
+
ìì 
$str
îî 
,
îî 
$str
ññ 
+
ññ 
$char
ññ 
+
ññ 
$str
óó 
+
óó 
$char
óó 
+
óó 
$str
òò 
+
òò 
$char
òò 
+
òò 
$str
ôô 
+
ôô 
$char
ôô 
+
ôô 
$str
öö 
+
öö 
$char
öö 
+
öö 
$str
õõ 
,
õõ 
$str
ùù 
+
ùù 
$char
ùù 
+
ùù 
$str
ûû 
+
ûû 
$char
ûû 
+
ûû 
$str
üü 
+
üü 
$char
üü 
+
üü 
$str
†† 
+
†† 
$char
†† 
+
†† 
$str
°° 
+
°° 
$char
°° 
+
°° 
$str
¢¢ 
,
¢¢ 
$str
§§ 
+
§§ 
$char
§§ 
+
§§ 
$str
•• 
+
•• 
$char
•• 
+
•• 
$str
¶¶ 
+
¶¶ 
$char
¶¶ 
+
¶¶ 
$str
ßß 
+
ßß 
$char
ßß 
+
ßß 
$str
®® 
+
®® 
$char
®® 
+
®® 
$str
©© 
,
©© 
$str
´´ 
+
´´ 
$char
´´ 
+
´´ 
$str
¨¨ 
+
¨¨ 
$char
¨¨ 
+
¨¨ 
$str
≠≠ 
+
≠≠ 
$char
≠≠ 
+
≠≠ 
$str
ÆÆ 
+
ÆÆ 
$char
ÆÆ 
+
ÆÆ 
$str
ØØ 
+
ØØ 
$char
ØØ 
+
ØØ 
$str
∞∞ 
,
∞∞ 
}
±± 
;
±± 
}
≤≤ 
public
¥¥ 
static
¥¥	 
class
¥¥ 
Enemy
¥¥ 
{
µµ 
public
∂∂ 	
static
∂∂
 
readonly
∂∂ 
string
∂∂  
[
∂∂  !
]
∂∂! "
IdleAnimation
∂∂# 0
=
∂∂1 2
new
∂∂3 6
string
∂∂7 =
[
∂∂= >
]
∂∂> ?
{
∑∑ 
$str
ππ 
+
ππ 
$char
ππ 
+
ππ 
$str
∫∫ 
+
∫∫ 
$char
∫∫ 
+
∫∫ 
$str
ªª 
+
ªª 
$char
ªª 
+
ªª 
$str
ºº 
+
ºº 
$char
ºº 
+
ºº 
$str
ΩΩ 
+
ΩΩ 
$char
ΩΩ 
+
ΩΩ 
$str
ææ 
,
ææ 
$str
¿¿ 
+
¿¿ 
$char
¿¿ 
+
¿¿ 
$str
¡¡ 
+
¡¡ 
$char
¡¡ 
+
¡¡ 
$str
¬¬ 
+
¬¬ 
$char
¬¬ 
+
¬¬ 
$str
√√ 
+
√√ 
$char
√√ 
+
√√ 
$str
ƒƒ 
+
ƒƒ 
$char
ƒƒ 
+
ƒƒ 
$str
≈≈ 
,
≈≈ 
}
∆∆ 
;
∆∆ 
public
»» 	
static
»»
 
readonly
»» 
string
»»  
[
»»  !
]
»»! "
BlockAnimation
»»# 1
=
»»2 3
new
»»4 7
string
»»8 >
[
»»> ?
]
»»? @
{
…… 
$str
ÀÀ 
+
ÀÀ 
$char
ÀÀ 
+
ÀÀ 
$str
ÃÃ 
+
ÃÃ 
$char
ÃÃ 
+
ÃÃ 
$str
ÕÕ 
+
ÕÕ 
$char
ÕÕ 
+
ÕÕ 
$str
ŒŒ 
+
ŒŒ 
$char
ŒŒ 
+
ŒŒ 
$str
œœ 
+
œœ 
$char
œœ 
+
œœ 
$str
–– 
,
–– 
}
—— 
;
—— 
public
”” 	
static
””
 
readonly
”” 
string
””  
[
””  !
]
””! "
PunchAnimation
””# 1
=
””2 3
new
””4 7
string
””8 >
[
””> ?
]
””? @
{
‘‘ 
$str
÷÷ 
+
÷÷ 
$char
÷÷ 
+
÷÷ 
$str
◊◊ 
+
◊◊ 
$char
◊◊ 
+
◊◊ 
$str
ÿÿ 
+
ÿÿ 
$char
ÿÿ 
+
ÿÿ 
$str
ŸŸ 
+
ŸŸ 
$char
ŸŸ 
+
ŸŸ 
$str
⁄⁄ 
+
⁄⁄ 
$char
⁄⁄ 
+
⁄⁄ 
$str
€€ 
,
€€ 
$str
›› 
+
›› 
$char
›› 
+
›› 
$str
ﬁﬁ 
+
ﬁﬁ 
$char
ﬁﬁ 
+
ﬁﬁ 
$str
ﬂﬂ 
+
ﬂﬂ 
$char
ﬂﬂ 
+
ﬂﬂ 
$str
‡‡ 
+
‡‡ 
$char
‡‡ 
+
‡‡ 
$str
·· 
+
·· 
$char
·· 
+
·· 
$str
‚‚ 
,
‚‚ 
$str
‰‰ 
+
‰‰ 
$char
‰‰ 
+
‰‰ 
$str
ÂÂ 
+
ÂÂ 
$char
ÂÂ 
+
ÂÂ 
$str
ÊÊ 
+
ÊÊ 
$char
ÊÊ 
+
ÊÊ 
$str
ÁÁ 
+
ÁÁ 
$char
ÁÁ 
+
ÁÁ 
$str
ËË 
+
ËË 
$char
ËË 
+
ËË 
$str
ÈÈ 
,
ÈÈ 
$str
ÎÎ 
+
ÎÎ 
$char
ÎÎ 
+
ÎÎ 
$str
ÏÏ 
+
ÏÏ 
$char
ÏÏ 
+
ÏÏ 
$str
ÌÌ 
+
ÌÌ 
$char
ÌÌ 
+
ÌÌ 
$str
ÓÓ 
+
ÓÓ 
$char
ÓÓ 
+
ÓÓ 
$str
ÔÔ 
+
ÔÔ 
$char
ÔÔ 
+
ÔÔ 
$str
 
,
 
$str
ÚÚ 
+
ÚÚ 
$char
ÚÚ 
+
ÚÚ 
$str
ÛÛ 
+
ÛÛ 
$char
ÛÛ 
+
ÛÛ 
$str
ÙÙ 
+
ÙÙ 
$char
ÙÙ 
+
ÙÙ 
$str
ıı 
+
ıı 
$char
ıı 
+
ıı 
$str
ˆˆ 
+
ˆˆ 
$char
ˆˆ 
+
ˆˆ 
$str
˜˜ 
,
˜˜ 
$str
˘˘ 
+
˘˘ 
$char
˘˘ 
+
˘˘ 
$str
˙˙ 
+
˙˙ 
$char
˙˙ 
+
˙˙ 
$str
˚˚ 
+
˚˚ 
$char
˚˚ 
+
˚˚ 
$str
¸¸ 
+
¸¸ 
$char
¸¸ 
+
¸¸ 
$str
˝˝ 
+
˝˝ 
$char
˝˝ 
+
˝˝ 
$str
˛˛ 
,
˛˛ 
}
ˇˇ 
;
ˇˇ 
public
ÅÅ 	
static
ÅÅ
 
readonly
ÅÅ 
string
ÅÅ  
[
ÅÅ  !
]
ÅÅ! "
JumpKickAnimation
ÅÅ# 4
=
ÅÅ5 6
new
ÅÅ7 :
string
ÅÅ; A
[
ÅÅA B
]
ÅÅB C
{
ÇÇ 
$str
ÑÑ 
+
ÑÑ 
$char
ÑÑ 
+
ÑÑ 
$str
ÖÖ 
+
ÖÖ 
$char
ÖÖ 
+
ÖÖ 
$str
ÜÜ 
+
ÜÜ 
$char
ÜÜ 
+
ÜÜ 
$str
áá 
+
áá 
$char
áá 
+
áá 
$str
àà 
+
àà 
$char
àà 
+
àà 
$str
ââ 
,
ââ 
$str
ãã 
+
ãã 
$char
ãã 
+
ãã 
$str
åå 
+
åå 
$char
åå 
+
åå 
$str
çç 
+
çç 
$char
çç 
+
çç 
$str
éé 
+
éé 
$char
éé 
+
éé 
$str
èè 
+
èè 
$char
èè 
+
èè 
$str
êê 
,
êê 
$str
íí 
+
íí 
$char
íí 
+
íí 
$str
ìì 
+
ìì 
$char
ìì 
+
ìì 
$str
îî 
+
îî 
$char
îî 
+
îî 
$str
ïï 
+
ïï 
$char
ïï 
+
ïï 
$str
ññ 
+
ññ 
$char
ññ 
+
ññ 
$str
óó 
,
óó 
$str
ôô 
+
ôô 
$char
ôô 
+
ôô 
$str
öö 
+
öö 
$char
öö 
+
öö 
$str
õõ 
+
õõ 
$char
õõ 
+
õõ 
$str
úú 
+
úú 
$char
úú 
+
úú 
$str
ùù 
+
ùù 
$char
ùù 
+
ùù 
$str
ûû 
,
ûû 
$str
†† 
+
†† 
$char
†† 
+
†† 
$str
°° 
+
°° 
$char
°° 
+
°° 
$str
¢¢ 
+
¢¢ 
$char
¢¢ 
+
¢¢ 
$str
££ 
+
££ 
$char
££ 
+
££ 
$str
§§ 
+
§§ 
$char
§§ 
+
§§ 
$str
•• 
,
•• 
$str
ßß 
+
ßß 
$char
ßß 
+
ßß 
$str
®® 
+
®® 
$char
®® 
+
®® 
$str
©© 
+
©© 
$char
©© 
+
©© 
$str
™™ 
+
™™ 
$char
™™ 
+
™™ 
$str
´´ 
+
´´ 
$char
´´ 
+
´´ 
$str
¨¨ 
,
¨¨ 
$str
ÆÆ 
+
ÆÆ 
$char
ÆÆ 
+
ÆÆ 
$str
ØØ 
+
ØØ 
$char
ØØ 
+
ØØ 
$str
∞∞ 
+
∞∞ 
$char
∞∞ 
+
∞∞ 
$str
±± 
+
±± 
$char
±± 
+
±± 
$str
≤≤ 
+
≤≤ 
$char
≤≤ 
+
≤≤ 
$str
≥≥ 
,
≥≥ 
$str
µµ 
+
µµ 
$char
µµ 
+
µµ 
$str
∂∂ 
+
∂∂ 
$char
∂∂ 
+
∂∂ 
$str
∑∑ 
+
∑∑ 
$char
∑∑ 
+
∑∑ 
$str
∏∏ 
+
∏∏ 
$char
∏∏ 
+
∏∏ 
$str
ππ 
+
ππ 
$char
ππ 
+
ππ 
$str
∫∫ 
,
∫∫ 
}
ªª 
;
ªª 
public
ΩΩ 	
static
ΩΩ
 
readonly
ΩΩ 
string
ΩΩ  
[
ΩΩ  !
]
ΩΩ! "
OwnedAnimation
ΩΩ# 1
=
ΩΩ2 3
new
ΩΩ4 7
string
ΩΩ8 >
[
ΩΩ> ?
]
ΩΩ? @
{
ææ 
$str
¿¿ 
+
¿¿ 
$char
¿¿ 
+
¿¿ 
$str
¡¡ 
+
¡¡ 
$char
¡¡ 
+
¡¡ 
$str
¬¬ 
+
¬¬ 
$char
¬¬ 
+
¬¬ 
$str
√√ 
+
√√ 
$char
√√ 
+
√√ 
$str
ƒƒ 
+
ƒƒ 
$char
ƒƒ 
+
ƒƒ 
$str
≈≈ 
,
≈≈ 
$str
«« 
+
«« 
$char
«« 
+
«« 
$str
»» 
+
»» 
$char
»» 
+
»» 
$str
…… 
+
…… 
$char
…… 
+
…… 
$str
   
+
   
$char
   
+
   
$str
ÀÀ 
+
ÀÀ 
$char
ÀÀ 
+
ÀÀ 
$str
ÃÃ 
,
ÃÃ 
$str
ŒŒ 
+
ŒŒ 
$char
ŒŒ 
+
ŒŒ 
$str
œœ 
+
œœ 
$char
œœ 
+
œœ 
$str
–– 
+
–– 
$char
–– 
+
–– 
$str
—— 
+
—— 
$char
—— 
+
—— 
$str
““ 
+
““ 
$char
““ 
+
““ 
$str
”” 
,
”” 
$str
’’ 
+
’’ 
$char
’’ 
+
’’ 
$str
÷÷ 
+
÷÷ 
$char
÷÷ 
+
÷÷ 
$str
◊◊ 
+
◊◊ 
$char
◊◊ 
+
◊◊ 
$str
ÿÿ 
+
ÿÿ 
$char
ÿÿ 
+
ÿÿ 
$str
ŸŸ 
+
ŸŸ 
$char
ŸŸ 
+
ŸŸ 
$str
⁄⁄ 
,
⁄⁄ 
}
€€ 
;
€€ 
public
›› 	
static
››
 
readonly
›› 
string
››  
[
››  !
]
››! "
GroundAnimation
››# 2
=
››3 4
new
››5 8
string
››9 ?
[
››? @
]
››@ A
{
ﬁﬁ 
$str
‡‡ 
+
‡‡ 
$char
‡‡ 
+
‡‡ 
$str
·· 
+
·· 
$char
·· 
+
·· 
$str
‚‚ 
+
‚‚ 
$char
‚‚ 
+
‚‚ 
$str
„„ 
+
„„ 
$char
„„ 
+
„„ 
$str
‰‰ 
+
‰‰ 
$char
‰‰ 
+
‰‰ 
$str
ÂÂ 
,
ÂÂ 
}
ÊÊ 
;
ÊÊ 
public
ËË 	
static
ËË
 
readonly
ËË 
string
ËË  
[
ËË  !
]
ËË! "
GetUpAnimation
ËË# 1
=
ËË2 3
new
ËË4 7
string
ËË8 >
[
ËË> ?
]
ËË? @
{
ÈÈ 
$str
ÎÎ 
+
ÎÎ 
$char
ÎÎ 
+
ÎÎ 
$str
ÏÏ 
+
ÏÏ 
$char
ÏÏ 
+
ÏÏ 
$str
ÌÌ 
+
ÌÌ 
$char
ÌÌ 
+
ÌÌ 
$str
ÓÓ 
+
ÓÓ 
$char
ÓÓ 
+
ÓÓ 
$str
ÔÔ 
+
ÔÔ 
$char
ÔÔ 
+
ÔÔ 
$str
 
,
 
$str
ÚÚ 
+
ÚÚ 
$char
ÚÚ 
+
ÚÚ 
$str
ÛÛ 
+
ÛÛ 
$char
ÛÛ 
+
ÛÛ 
$str
ÙÙ 
+
ÙÙ 
$char
ÙÙ 
+
ÙÙ 
$str
ıı 
+
ıı 
$char
ıı 
+
ıı 
$str
ˆˆ 
+
ˆˆ 
$char
ˆˆ 
+
ˆˆ 
$str
˜˜ 
,
˜˜ 
$str
˘˘ 
+
˘˘ 
$char
˘˘ 
+
˘˘ 
$str
˙˙ 
+
˙˙ 
$char
˙˙ 
+
˙˙ 
$str
˚˚ 
+
˚˚ 
$char
˚˚ 
+
˚˚ 
$str
¸¸ 
+
¸¸ 
$char
¸¸ 
+
¸¸ 
$str
˝˝ 
+
˝˝ 
$char
˝˝ 
+
˝˝ 
$str
˛˛ 
,
˛˛ 
$str
ÄÄ 
+
ÄÄ 
$char
ÄÄ 
+
ÄÄ 
$str
ÅÅ 
+
ÅÅ 
$char
ÅÅ 
+
ÅÅ 
$str
ÇÇ 
+
ÇÇ 
$char
ÇÇ 
+
ÇÇ 
$str
ÉÉ 
+
ÉÉ 
$char
ÉÉ 
+
ÉÉ 
$str
ÑÑ 
+
ÑÑ 
$char
ÑÑ 
+
ÑÑ 
$str
ÖÖ 
,
ÖÖ 
$str
áá 
+
áá 
$char
áá 
+
áá 
$str
àà 
+
àà 
$char
àà 
+
àà 
$str
ââ 
+
ââ 
$char
ââ 
+
ââ 
$str
ää 
+
ää 
$char
ää 
+
ää 
$str
ãã 
+
ãã 
$char
ãã 
+
ãã 
$str
åå 
,
åå 
$str
éé 
+
éé 
$char
éé 
+
éé 
$str
èè 
+
èè 
$char
èè 
+
èè 
$str
êê 
+
êê 
$char
êê 
+
êê 
$str
ëë 
+
ëë 
$char
ëë 
+
ëë 
$str
íí 
+
íí 
$char
íí 
+
íí 
$str
ìì 
,
ìì 
$str
ïï 
+
ïï 
$char
ïï 
+
ïï 
$str
ññ 
+
ññ 
$char
ññ 
+
ññ 
$str
óó 
+
óó 
$char
óó 
+
óó 
$str
òò 
+
òò 
$char
òò 
+
òò 
$str
ôô 
+
ôô 
$char
ôô 
+
ôô 
$str
öö 
,
öö 
$str
úú 
+
úú 
$char
úú 
+
úú 
$str
ùù 
+
ùù 
$char
ùù 
+
ùù 
$str
ûû 
+
ûû 
$char
ûû 
+
ûû 
$str
üü 
+
üü 
$char
üü 
+
üü 
$str
†† 
+
†† 
$char
†† 
+
†† 
$str
°° 
,
°° 
}
¢¢ 
;
¢¢ 
}
££ 
}
¶¶ 
}ßß 