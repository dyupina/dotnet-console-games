óØ
QC:\ProgramData\Jenkins\.jenkins\workspace\GamePipeline\Projects\Memory\Program.cs
	Exception 	
?	 

	exception 
= 
null 
; 
Tile 
[ 
, 
] 
board 
; 
( 
int 
Row 
, 	
int
 
Column 
) 
? 
firstSelection %
=& '
null( ,
;, -
(		 
int		 
Row		 
,		 	
int		
 
Column		 
)		 
?		 
secondSelection		 &
=		' (
null		) -
;		- .
(

 
int

 
Row

 
,

 	
int


 
Column

 
)

 
	selection

 
=

  !
(

" #
$num

# $
,

$ %
$num

& '
)

' (
;

( )
bool 
closeRequested 
= 
false 
; 
bool 
pendingConfirmation 
= 
false  
;  !
try 
{ 
Console 
. 	
BackgroundColor	 
= 
ConsoleColor '
.' (
Black( -
;- .
Console 
. 	
ForegroundColor	 
= 
ConsoleColor '
.' (
White( -
;- .
Console 
. 	
CursorVisible	 
= 
false 
; 
Console 
. 	
Clear	 
( 
) 
; 
while 
( 
! 	
closeRequested	 
) 
{ 
	selection 
= 
( 
$num 
, 
$num 
) 
; 
Console 	
.	 

Clear
 
( 
) 
; 
RandomizeBoard 
( 
) 
; 
EnsureConsoleSize 
( 
) 
; 
while 
( 	
(	 

!
 
closeRequested 
&& 
! 
AllTilesVisible -
(- .
). /
)/ 0
||1 3
pendingConfirmation4 G
)G H
{ 
EnsureConsoleSize 
( 
) 
; 
if 
( 
! 
closeRequested 
) 
{ 
Render 

(
 
) 
; 
GetInput   
(   
)   
;   
}!! 
}"" 
if## 
(## 
!## 
closeRequested## 
)## 
{$$ 
	selection%% 
=%% 
(%% 
-%% 
$num%% 
,%% 
-%% 
$num%% 
)%% 
;%% 
Render&& 	
(&&	 

)&&
 
;&& 
Console'' 

.''
 
	WriteLine'' 
('' 
)'' 
;'' 
Console(( 

.((
 
	WriteLine(( 
((( 
$str((  
)((  !
;((! "
Console)) 

.))
 
	WriteLine)) 
()) 
$str)) <
)))< =
;))= >
bool** 
enter** 
=** 
false** 
;** 
while++ 
(++	 

!++
 
closeRequested++ 
&&++ 
!++ 
enter++ #
)++# $
{,, 
switch-- 

(-- 
Console-- 
.-- 
ReadKey-- 
(-- 
true--  
)--  !
.--! "
Key--" %
)--% &
{.. 
case// 	

ConsoleKey//
 
.// 
Enter// 
:// 
enter00 
=00 
true00 
;00 
break11 
;11 
case22 	

ConsoleKey22
 
.22 
Escape22 
:22 
closeRequested33 
=33 
true33 
;33 
break44 
;44 
}55 
}66 
}77 
}88 
}99 
catch:: 
(:: 
	Exception:: 
e:: 
):: 
{;; 
	exception<< 

=<< 
e<< 
;<< 
throw== 
;== 
}>> 
finally?? 
{@@ 
ConsoleAA 
.AA 	

ResetColorAA	 
(AA 
)AA 
;AA 
ConsoleBB 
.BB 	
CursorVisibleBB	 
=BB 
trueBB 
;BB 
ConsoleCC 
.CC 	
ClearCC	 
(CC 
)CC 
;CC 
ConsoleDD 
.DD 	
	WriteLineDD	 
(DD 
	exceptionDD 
?DD 
.DD 
ToStringDD &
(DD& '
)DD' (
??DD) +
$strDD, @
)DD@ A
;DDA B
}EE 
voidGG 
RandomizeBoardGG 
(GG 
)GG 
{HH 
boardII 
=II 
newII	 
TileII 
[II 
$numII 
,II 
$numII 
]II 
;II 
forJJ 
(JJ 
intJJ 	
iJJ
 
=JJ 
$numJJ 
,JJ 
kJJ 
=JJ 
$numJJ 
;JJ 
iJJ 
<JJ 
boardJJ !
.JJ! "
	GetLengthJJ" +
(JJ+ ,
$numJJ, -
)JJ- .
;JJ. /
iJJ0 1
++JJ1 3
)JJ3 4
{KK 
forLL 
(LL 
intLL 

jLL 
=LL 
$numLL 
;LL 
jLL 
<LL 
boardLL 
.LL 
	GetLengthLL %
(LL% &
$numLL& '
)LL' (
;LL( )
jLL* +
++LL+ -
,LL- .
kLL/ 0
++LL0 2
)LL2 3
{MM 
boardNN 
[NN 	
iNN	 

,NN
 
jNN 
]NN 
=NN 
newNN 
TileNN 
{NN 
ValueNN !
=NN" #
kNN$ %
/NN& '
$numNN( )
}NN* +
;NN+ ,
}OO 
}PP 
ShuffleQQ 
<QQ 	
TileQQ	 
>QQ 
(QQ 
startRR 
:RR 
$numRR	 

,RR
 
endSS 
:SS 
boardSS 
.SS 
	GetLengthSS 
(SS 
$numSS 
)SS 
*SS 
boardSS !
.SS! "
	GetLengthSS" +
(SS+ ,
$numSS, -
)SS- .
-SS/ 0
$numSS1 2
,SS2 3
getTT 
:TT 
iTT 
=>TT	 
{UU 
intVV 
rowVV 

=VV 
iVV 
/VV 
boardVV 
.VV 
	GetLengthVV  
(VV  !
$numVV! "
)VV" #
;VV# $
intWW 
columnWW 
=WW 
iWW 
%WW 
boardWW 
.WW 
	GetLengthWW #
(WW# $
$numWW$ %
)WW% &
;WW& '
returnXX 	
boardXX
 
[XX 
rowXX 
,XX 
columnXX 
]XX 
;XX 
}YY 
,YY 
setZZ 
:ZZ 
(ZZ 
iZZ 	
,ZZ	 

vZZ 
)ZZ 
=>ZZ 
boardZZ 
[ZZ 
iZZ 
/ZZ 
boardZZ  
.ZZ  !
	GetLengthZZ! *
(ZZ* +
$numZZ+ ,
)ZZ, -
,ZZ- .
iZZ/ 0
%ZZ1 2
boardZZ3 8
.ZZ8 9
	GetLengthZZ9 B
(ZZB C
$numZZC D
)ZZD E
]ZZE F
=ZZG H
vZZI J
)ZZJ K
;ZZK L
}[[ 
void]] 
EnsureConsoleSize]] 
(]] 
)]] 
{^^ 
int__ 
width__ 

=__ 
Console__ 
.__ 
WindowWidth__  
;__  !
int`` 
height`` 
=`` 
Console`` 
.`` 
WindowHeight`` "
;``" #
intaa 
minWidthaa 
=aa 
boardaa 
.aa 
	GetLengthaa 
(aa  
$numaa  !
)aa! "
*aa# $
$numaa% &
+aa' (
$numaa) *
;aa* +
intbb 
	minHeightbb 
=bb 
boardbb 
.bb 
	GetLengthbb  
(bb  !
$numbb! "
)bb" #
*bb$ %
$numbb& '
+bb( )
$numbb* ,
;bb, -
whilecc 
(cc 
!cc 	
closeRequestedcc	 
&&cc 
(cc 
widthcc !
<cc" #
minWidthcc$ ,
||cc- /
heightcc0 6
<cc7 8
	minHeightcc9 B
)ccB C
)ccC D
{dd 
Consoleee 	
.ee	 

Clearee
 
(ee 
)ee 
;ee 
Consoleff 	
.ff	 

	WriteLineff
 
(ff 
$strff @
)ff@ A
;ffA B
boolgg 
entergg 
=gg 
falsegg 
;gg 
whilehh 
(hh 	
!hh	 

closeRequestedhh
 
&&hh 
!hh 
enterhh "
)hh" #
{ii 
switchjj 	
(jj
 
Consolejj 
.jj 
ReadKeyjj 
(jj 
truejj 
)jj  
.jj  !
Keyjj! $
)jj$ %
{kk 
casell 

ConsoleKeyll	 
.ll 
Enterll 
:ll 
entermm 

=mm 
truemm 
;mm 
breaknn 

;nn
 
caseoo 

ConsoleKeyoo	 
.oo 
Escapeoo 
:oo 
closeRequestedpp 
=pp 
truepp 
;pp 
breakqq 

;qq
 
}rr 
}ss 
widthtt 
=tt 	
Consolett
 
.tt 
WindowWidthtt 
;tt 
heightuu 
=uu	 

Consoleuu 
.uu 
WindowHeightuu 
;uu  
Consolevv 	
.vv	 

Clearvv
 
(vv 
)vv 
;vv 
}ww 
}xx 
voidzz 
Renderzz 
(zz 
)zz 
{{{ 
Console|| 
.|| 	
CursorVisible||	 
=|| 
false|| 
;|| 
Console}} 
.}} 	
BackgroundColor}}	 
=}} 
ConsoleColor}} '
.}}' (
Black}}( -
;}}- .
Console~~ 
.~~ 	
ForegroundColor~~	 
=~~ 
ConsoleColor~~ '
.~~' (
White~~( -
;~~- .
Console 
. 	
SetCursorPosition	 
( 
$num 
, 
$num 
)  
;  !
Console
 
.
 	
	WriteLine
	 
(
 
)
 
;
 
Console
 
.
 	
	WriteLine
	 
(
 
$str
 
)
 
;
 
Console
 
.
 	
	WriteLine
	 
(
 
)
 
;
 
Console
 
.
 	
	WriteLine
	 
(
 
)
 
;
 
for
 
(
 
int
 	
i

 
=
 
$num
 
;
 
i
 
<
 
board
 
.
 
	GetLength
 $
(
$ %
$num
% &
)
& '
;
' (
i
) *
++
* ,
)
, -
{
 
Console
 	
.
	 

Write

 
(
 
$str
 
)
 
;
 
for
 
(
 
int
 

j
 
=
 
$num
 
;
 
j
 
<
 
board
 
.
 
	GetLength
 %
(
% &
$num
& '
)
' (
;
( )
j
* +
++
+ -
)
- .
{
 
Console
 

.

 
Write
 
(
 
$char
 
)
 
;
 
if
 
(
 
firstSelection
 
is
 
not
 
null
 !
&&
" $
secondSelection
% 4
is
5 7
not
8 ;
null
< @
&&
A C
(
 
firstSelection
 
==
 
(
 
i
 
,
 
j
 
)
 
||
  
secondSelection
! 0
==
1 3
(
4 5
i
5 6
,
6 7
j
8 9
)
9 :
)
: ;
)
; <
{
 
var
 
(
 	
a
	 

,

 
b
 
)
 
=
 
(
 
firstSelection
  
.
  !
Value
! &
,
& '
secondSelection
( 7
.
7 8
Value
8 =
)
= >
;
> ?
if
 
(
 
board
 
[
 
a
 
.
 
Row
 
,
 
a
 
.
 
Column
 
]
 
.
 
Value
 $
==
% '
board
( -
[
- .
b
. /
.
/ 0
Row
0 3
,
3 4
b
5 6
.
6 7
Column
7 =
]
= >
.
> ?
Value
? D
)
D E
{
 
Console
 
.
 
BackgroundColor
 
=
 
ConsoleColor
 +
.
+ ,
	DarkGreen
, 5
;
5 6
}
 
else
 
{
 
Console
 
.
 
BackgroundColor
 
=
 
ConsoleColor
 +
.
+ ,
DarkRed
, 3
;
3 4
}
 
}
 
else
 
if
 

(
 
firstSelection
 
==
 
(
 
i
  
,
  !
j
" #
)
# $
||
% '
secondSelection
( 7
==
8 :
(
; <
i
< =
,
= >
j
? @
)
@ A
)
A B
{
 
Console
 
.
 
BackgroundColor
 
=
 
ConsoleColor
 *
.
* +

DarkYellow
+ 5
;
5 6
}
 
else
 
if
 

(
 
	selection
 
==
 
(
 
i
 
,
 
j
 
)
 
)
  
{
 
Console
 
.
 
BackgroundColor
 
=
 
ConsoleColor
 *
.
* +
DarkCyan
+ 3
;
3 4
}
 
else
 
if
 

(
 
board
 
[
 
i
 
,
 
j
 
]
 
.
 
Visible
 
)
  
{
   
Console
¡¡ 
.
¡¡ 
BackgroundColor
¡¡ 
=
¡¡ 
ConsoleColor
¡¡ )
.
¡¡) *
DarkGray
¡¡* 2
;
¡¡2 3
}
¢¢ 
else
££ 
{
¤¤ 
Console
¥¥ 
.
¥¥ 
BackgroundColor
¥¥ 
=
¥¥ 
ConsoleColor
¥¥ *
.
¥¥* +
White
¥¥+ 0
;
¥¥0 1
}
¦¦ 
if
§§ 
(
§§ 
board
§§ 
[
§§ 
i
§§ 
,
§§ 
j
§§ 
]
§§ 
.
§§ 
Visible
§§ 
)
§§ 
{
¨¨ 
if
©© 
(
©© 
board
©© 
[
©© 
i
©© 
,
©© 
j
©© 
]
©© 
.
©© 
Value
©© 
<
©© 
$num
©© 
)
©© 
{
ªª 
Console
«« 
.
«« 
Write
«« 
(
«« 
$char
«« 
)
«« 
;
«« 
}
¬¬ 
Console
­­ 
.
­­ 
Write
­­ 
(
­­ 
board
­­ 
[
­­ 
i
­­ 
,
­­ 
j
­­ 
]
­­ 
.
­­ 
Value
­­ #
.
­­# $
ToString
­­$ ,
(
­­, -
CultureInfo
­­- 8
.
­­8 9
InvariantCulture
­­9 I
)
­­I J
)
­­J K
;
­­K L
Console
®® 
.
®® 
BackgroundColor
®® 
=
®® 
ConsoleColor
®® *
.
®®* +
Black
®®+ 0
;
®®0 1
}
¯¯ 
else
°° 
{
±± 
Console
²² 
.
²² 
Write
²² 
(
²² 
$str
²² 
)
²² 
;
²² 
}
³³ 
Console
´´ 

.
´´
 
BackgroundColor
´´ 
=
´´ 
ConsoleColor
´´ )
.
´´) *
Black
´´* /
;
´´/ 0
}
µµ 
Console
¶¶ 	
.
¶¶	 

	WriteLine
¶¶
 
(
¶¶ 
)
¶¶ 
;
¶¶ 
Console
·· 	
.
··	 

	WriteLine
··
 
(
·· 
)
·· 
;
·· 
}
¸¸ 
Console
¹¹ 
.
¹¹ 	
	WriteLine
¹¹	 
(
¹¹ 
)
¹¹ 
;
¹¹ 
Console
ºº 
.
ºº 	
	WriteLine
ºº	 
(
ºº 
$str
ºº !
)
ºº! "
;
ºº" #
Console
»» 
.
»» 	
	WriteLine
»»	 
(
»» 
$str
»» 3
)
»»3 4
;
»»4 5
Console
¼¼ 
.
¼¼ 	
	WriteLine
¼¼	 
(
¼¼ 
$str
¼¼ 4
)
¼¼4 5
;
¼¼5 6
Console
½½ 
.
½½ 	
	WriteLine
½½	 
(
½½ 
$str
½½ $
)
½½$ %
;
½½% &
}¾¾ 
voidÀÀ 
GetInput
ÀÀ 
(
ÀÀ 
)
ÀÀ 
{ÁÁ 
if
ÂÂ 
(
ÂÂ !
pendingConfirmation
ÂÂ 
)
ÂÂ 
{
ÃÃ 
switch
ÄÄ 
(
ÄÄ	 

Console
ÄÄ
 
.
ÄÄ 
ReadKey
ÄÄ 
(
ÄÄ 
true
ÄÄ 
)
ÄÄ 
.
ÄÄ  
Key
ÄÄ  #
)
ÄÄ# $
{
ÅÅ 
case
ÆÆ 

ConsoleKey
ÆÆ 
.
ÆÆ 
Enter
ÆÆ 
:
ÆÆ 
if
ÇÇ 
(
ÇÇ !
pendingConfirmation
ÇÇ 
)
ÇÇ 
{
ÈÈ !
pendingConfirmation
ÉÉ 
=
ÉÉ 
false
ÉÉ  
;
ÉÉ  !
Tile
ÊÊ 	
a
ÊÊ
 
=
ÊÊ 
board
ÊÊ 
[
ÊÊ 
firstSelection
ÊÊ "
!
ÊÊ" #
.
ÊÊ# $
Value
ÊÊ$ )
.
ÊÊ) *
Row
ÊÊ* -
,
ÊÊ- .
firstSelection
ÊÊ/ =
.
ÊÊ= >
Value
ÊÊ> C
.
ÊÊC D
Column
ÊÊD J
]
ÊÊJ K
;
ÊÊK L
Tile
ËË 	
b
ËË
 
=
ËË 
board
ËË 
[
ËË 
secondSelection
ËË #
!
ËË# $
.
ËË$ %
Value
ËË% *
.
ËË* +
Row
ËË+ .
,
ËË. /
secondSelection
ËË0 ?
.
ËË? @
Value
ËË@ E
.
ËËE F
Column
ËËF L
]
ËËL M
;
ËËM N
if
ÌÌ 
(
ÌÌ 	
a
ÌÌ	 

.
ÌÌ
 
Value
ÌÌ 
!=
ÌÌ 
b
ÌÌ 
.
ÌÌ 
Value
ÌÌ 
)
ÌÌ 
{
ÍÍ 
a
ÎÎ 
.
ÎÎ 
Visible
ÎÎ 
=
ÎÎ 
false
ÎÎ 
;
ÎÎ 
b
ÏÏ 
.
ÏÏ 
Visible
ÏÏ 
=
ÏÏ 
false
ÏÏ 
;
ÏÏ 
}
ÐÐ 
firstSelection
ÑÑ 
=
ÑÑ 
null
ÑÑ 
;
ÑÑ 
secondSelection
ÒÒ 
=
ÒÒ 
null
ÒÒ 
;
ÒÒ 
return
ÓÓ 
;
ÓÓ 
}
ÔÔ 
break
ÕÕ 	
;
ÕÕ	 

case
ÖÖ 

ConsoleKey
ÖÖ 
.
ÖÖ 
Escape
ÖÖ 
:
ÖÖ 
closeRequested
×× 
=
×× 
true
×× 
;
×× 
break
ØØ 	
;
ØØ	 

}
ÙÙ 
}
ÚÚ 
else
ÛÛ 
{
ÜÜ 
switch
ÝÝ 
(
ÝÝ	 

Console
ÝÝ
 
.
ÝÝ 
ReadKey
ÝÝ 
(
ÝÝ 
true
ÝÝ 
)
ÝÝ 
.
ÝÝ  
Key
ÝÝ  #
)
ÝÝ# $
{
ÞÞ 
case
ßß 

ConsoleKey
ßß 
.
ßß 

RightArrow
ßß 
:
ßß 
	selection
àà 
=
àà 
(
àà 
	selection
àà 
.
àà 
Row
àà 
,
àà 
	selection
àà  )
.
àà) *
Column
àà* 0
==
àà1 3
board
àà4 9
.
àà9 :
	GetLength
àà: C
(
ààC D
$num
ààD E
)
ààE F
-
ààG H
$num
ààI J
?
ààK L
$num
ààM N
:
ààO P
	selection
ààQ Z
.
ààZ [
Column
àà[ a
+
ààb c
$num
ààd e
)
ààe f
;
ààf g
break
áá 	
;
áá	 

case
ââ 

ConsoleKey
ââ 
.
ââ 
	LeftArrow
ââ 
:
ââ 
	selection
ãã 
=
ãã 
(
ãã 
	selection
ãã 
.
ãã 
Row
ãã 
,
ãã 
	selection
ãã  )
.
ãã) *
Column
ãã* 0
==
ãã1 3
$num
ãã4 5
?
ãã6 7
board
ãã8 =
.
ãã= >
	GetLength
ãã> G
(
ããG H
$num
ããH I
)
ããI J
-
ããK L
$num
ããM N
:
ããO P
	selection
ããQ Z
.
ããZ [
Column
ãã[ a
-
ããb c
$num
ããd e
)
ããe f
;
ããf g
break
ää 	
;
ää	 

case
åå 

ConsoleKey
åå 
.
åå 
UpArrow
åå 
:
åå 
	selection
ææ 
=
ææ 
(
ææ 
	selection
ææ 
.
ææ 
Row
ææ 
==
ææ !
$num
ææ" #
?
ææ$ %
board
ææ& +
.
ææ+ ,
	GetLength
ææ, 5
(
ææ5 6
$num
ææ6 7
)
ææ7 8
-
ææ9 :
$num
ææ; <
:
ææ= >
	selection
ææ? H
.
ææH I
Row
ææI L
-
ææM N
$num
ææO P
,
ææP Q
	selection
ææR [
.
ææ[ \
Column
ææ\ b
)
ææb c
;
ææc d
break
çç 	
;
çç	 

case
èè 

ConsoleKey
èè 
.
èè 
	DownArrow
èè 
:
èè 
	selection
éé 
=
éé 
(
éé 
	selection
éé 
.
éé 
Row
éé 
==
éé !
board
éé" '
.
éé' (
	GetLength
éé( 1
(
éé1 2
$num
éé2 3
)
éé3 4
-
éé5 6
$num
éé7 8
?
éé9 :
$num
éé; <
:
éé= >
	selection
éé? H
.
ééH I
Row
ééI L
+
ééM N
$num
ééO P
,
ééP Q
	selection
ééR [
.
éé[ \
Column
éé\ b
)
ééb c
;
ééc d
break
êê 	
;
êê	 

case
ëë 

ConsoleKey
ëë 
.
ëë 
Enter
ëë 
:
ëë 
if
ìì 
(
ìì 
!
ìì 	
board
ìì	 
[
ìì 
	selection
ìì 
.
ìì 
Row
ìì 
,
ìì 
	selection
ìì '
.
ìì' (
Column
ìì( .
]
ìì. /
.
ìì/ 0
Visible
ìì0 7
)
ìì7 8
{
íí 
board
îî 

[
îî
 
	selection
îî 
.
îî 
Row
îî 
,
îî 
	selection
îî #
.
îî# $
Column
îî$ *
]
îî* +
.
îî+ ,
Visible
îî, 3
=
îî4 5
true
îî6 :
;
îî: ;
if
ïï 
(
ïï 	
firstSelection
ïï	 
is
ïï 
null
ïï 
)
ïï  
{
ðð 
firstSelection
ññ 
=
ññ 
	selection
ññ  
;
ññ  !
}
òò 
else
óó 	
if
óó
 
(
óó 
firstSelection
óó 
!=
óó 
	selection
óó  )
)
óó) *
{
ôô 
secondSelection
õõ 
=
õõ 
	selection
õõ !
;
õõ! "!
pendingConfirmation
öö 
=
öö 
true
öö  
;
öö  !
}
÷÷ 
}
øø 
break
ùù 	
;
ùù	 

case
úú 

ConsoleKey
úú 
.
úú 
Escape
úú 
:
úú 
closeRequested
ûû 
=
ûû 
true
ûû 
;
ûû 
break
üü 	
;
üü	 

}
ýý 
}
þþ 
}ÿÿ 
bool 
AllTilesVisible
 
(
 
)
 
{ 
for
 
(
 
int
 	
i

 
=
 
$num
 
,
 
k
 
=
 
$num
 
;
 
i
 
<
 
board
 !
.
! "
	GetLength
" +
(
+ ,
$num
, -
)
- .
;
. /
i
0 1
++
1 3
)
3 4
{
 
for
 
(
 
int
 

j
 
=
 
$num
 
;
 
j
 
<
 
board
 
.
 
	GetLength
 %
(
% &
$num
& '
)
' (
;
( )
j
* +
++
+ -
,
- .
k
/ 0
++
0 2
)
2 3
{
 
if
 
(
 
!
 
board
 
[
 
i
 
,
 
j
 
]
 
.
 
Visible
 
)
 
{
 
return
 

false
 
;
 
}
 
}
 
}
 
return
 
true
 
;
 
} 
class 
Tile
 

{ 
public
 
int
 
Value
 
{
 
get
 
;
 
set
 
;
 
}
 
public
 
bool
 
Visible
 
{
 
get
 
;
 
set
 
;
  
}
! "
} 