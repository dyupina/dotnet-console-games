·3
^C:\ProgramData\Jenkins\.jenkins\workspace\GamePipeline\Projects\Role Playing Game\Character.cs
	namespace 	
Role_Playing_Game
 
; 
public 
class 
	Character 
{ 
public 
int 
Level 
{ 
get 
; 
set 
; 
} 
=  !
$num" #
;# $
public 
int 

Experience 
{ 
get 
; 
set !
;! "
}# $
public 
int !
ExperienceToNextLevel !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
$num2 4
;4 5
public 
int 
Health 
{ 
get 
; 
set 
; 
}  
=! "
$num# $
;$ %
public		 
int		 
	MaxHealth		 
=>		 
Level		 
*		  
$num		! "
;		" #
public

 
int

 
Gold

 
{

 
get

 
;

 
set

 
;

 
}

 
public 
int 
Damage 
{ 
get 
; 
set 
; 
}  
=! "
$num# $
;$ %
public 
int 
I 
{ 
get 
; 
set 
; 
} 
public 
int 
J 
{ 
get 
; 
set 
; 
} 
public 
int 
TileI 
=> 
I 
< 
$num 
? 
( 
I 
-  !
$num" #
)# $
/% &
$num' (
:) *
I+ ,
/- .
$num/ 0
;0 1
public 
int 
TileJ 
=> 
J 
< 
$num 
? 
( 
J 
-  !
$num" #
)# $
/% &
$num' (
:) *
J+ ,
/- .
$num/ 0
;0 1
private 
string	 
[ 
] 
? 
_mapAnaimation !
;! "
public 
string 
[ 
] 
? 
MapAnimation 
{ 
get 
=> 
_mapAnaimation	 
; 
set 
{ 
_mapAnaimation 
= 
value 
; 
_mapAnimationFrame 
= 
$num 
; 
} 
} 
private 
int	 
_mapAnimationFrame 
;  
public 
int 
MapAnimationFrame 
{   
get!! 
=>!! 
_mapAnimationFrame!!	 
;!! 
set"" 
{## 
_mapAnimationFrame$$ 
=$$ 
value$$ 
;$$ 
Moved%% 
=%%	 

false%% 
;%% 
if&& 
(&& 
_mapAnimationFrame&& 
>=&& 
MapAnimation&& )
!&&) *
.&&* +
Length&&+ 1
)&&1 2
{'' 
if(( 
((( 
MapAnimation(( 
==(( 
Sprites(( 
.((  
RunUp((  %
)((% &
{((* +
Moved((, 1
=((2 3
true((4 8
;((8 9
MapAnimation((: F
=((G H
Sprites((I P
.((P Q
IdleUp((Q W
;((W X
}((\ ]
if)) 
()) 
MapAnimation)) 
==)) 
Sprites)) 
.))  
RunDown))  '
)))' (
{))* +
Moved)), 1
=))2 3
true))4 8
;))8 9
MapAnimation)): F
=))G H
Sprites))I P
.))P Q
IdleDown))Q Y
;))Y Z
}))\ ]
if** 
(** 
MapAnimation** 
==** 
Sprites** 
.**  
RunLeft**  '
)**' (
{*** +
Moved**, 1
=**2 3
true**4 8
;**8 9
MapAnimation**: F
=**G H
Sprites**I P
.**P Q
IdleLeft**Q Y
;**Y Z
}**\ ]
if++ 
(++ 
MapAnimation++ 
==++ 
Sprites++ 
.++  
RunRight++  (
)++( )
{++* +
Moved++, 1
=++2 3
true++4 8
;++8 9
MapAnimation++: F
=++G H
Sprites++I P
.++P Q
	IdleRight++Q Z
;++Z [
}++\ ]
_mapAnimationFrame,, 
=,, 
$num,, 
;,, 
}-- 
}.. 
}// 
public00 
bool00 
IsIdle00 
{11 
get22 
=>22 
_mapAnaimation33 
==33 
Sprites33 
.33 
IdleDown33 %
||33& (
_mapAnaimation44 
==44 
Sprites44 
.44 
IdleUp44 #
||44$ &
_mapAnaimation55 
==55 
Sprites55 
.55 
IdleLeft55 %
||55& (
_mapAnaimation66 
==66 
Sprites66 
.66 
	IdleRight66 &
;66& '
}77 
public88 
string88 
Render88 
=>88 
_mapAnaimation99 
is99 
not99 
null99 
&&99 
_mapAnimationFrame99  2
<993 4
_mapAnaimation995 C
.99C D
Length99D J
?:: 
_mapAnaimation:: 
[:: 
_mapAnimationFrame:: %
]::% &
:;; 
$str<< 
+<< 
$char<< 
+<< 
$str== 
+== 
$char== 
+== 
$str>> 
+>> 
$char>> 
+>> 
$str?? 
;?? 
public@@ 
bool@@ 
Moved@@ 
{@@ 
get@@ 
;@@ 
set@@ 
;@@ 
}@@  
=@@! "
false@@# (
;@@( )
}AA ÊW
YC:\ProgramData\Jenkins\.jenkins\workspace\GamePipeline\Projects\Role Playing Game\Maps.cs
	namespace 	
Role_Playing_Game
 
; 
public 
static 
class 
Maps 
{ 
public 
static 
string 
GetMapTileRender &
(& '
char' +
[+ ,
], -
[- .
]. /
map0 3
,3 4
int5 8
tileI9 >
,> ?
int@ C
tileJD I
)I J
{ 
if 
( 
tileJ 
< 
$num 
|| 
tileJ 
>= 
map 
.  
Length  &
||' )
tileI* /
<0 1
$num2 3
||4 6
tileI7 <
>== ?
map@ C
[C D
tileJD I
]I J
.J K
LengthK Q
)Q R
{ 
if		 
(		 
map		 

==		 
Field		 
)		 
return		 
Sprites		 #
.		# $
Mountain		$ ,
;		, -
return

 	
Sprites


 
.

 
Open

 
;

 
} 
return 
map	 
[ 
tileJ 
] 
[ 
tileI 
] 
switch !
{ 
$char 
=> 	
Sprites
 
. 
Water 
, 
$char 
=> 	
Sprites
 
. 
	Wall_0000 
, 
$char 
=> 	
Sprites
 
. 
Building 
, 
$char 
=> 	
Sprites
 
. 
Tree 
, 
$char 
or 	
$char
 
=> 
Sprites 
. 
Open 
, 
$char 
=> 	
Sprites
 
. 
Inn 
, 
$char 
=> 	
Sprites
 
. 
Store 
, 
$char 
=> 	
Sprites
 
. 
Fence 
, 
$char 
=> 	
Sprites
 
. 
Chest 
, 
$char 
=> 	
Sprites
 
. 

EmptyChest 
, 
$char 
=> 	
Sprites
 
. 
Barrels1 
, 
$char 
=> 	
tileJ
 
< 
map 
. 
Length 
/ 
$num  
?! "
Sprites# *
.* +
ArrowUp+ 2
:3 4
Sprites5 <
.< =
	ArrowDown= F
,F G
$char 
=> 	
Sprites
 
. 
Mountain 
, 
$char 
=> 	
Sprites
 
. 
Town 
, 
$char 
=> 	
Sprites
 
. 
Guard 
, 
$char 
=> 	
Sprites
 
. 
Castle 
, 
$char 
=> 	
Sprites
 
. 
	Mountain2 
, 
$char 
=> 	
Sprites
 
. 
Tree2 
, 
$char   
=>   	
Sprites  
 
.   
King   
,   
$char!! 
=>!! 	
Sprites!!
 
.!! 
	Wall_0000!! 
,!! 
_"" 
=>"" 
Sprites"" 
."" 
Error"" 
,"" 
}## 
;## 
}$$ 
public&& 
static&& 
bool&& #
IsValidCharacterMapTile&& +
(&&+ ,
char&&, 0
[&&0 1
]&&1 2
[&&2 3
]&&3 4
map&&5 8
,&&8 9
int&&: =
tileI&&> C
,&&C D
int&&E H
tileJ&&I N
)&&N O
{'' 
if(( 
((( 
tileJ(( 
<(( 
$num(( 
||(( 
tileJ(( 
>=(( 
map(( 
.((  
Length((  &
||((' )
tileI((* /
<((0 1
$num((2 3
||((4 6
tileI((7 <
>=((= ?
map((@ C
[((C D
tileJ((D I
]((I J
.((J K
Length((K Q
)((Q R
{)) 
return** 	
false**
 
;** 
}++ 
return,, 
map,,	 
[,, 
tileJ,, 
],, 
[,, 
tileI,, 
],, 
switch,, !
{-- 
$char.. 
=>.. 	
true..
 
,.. 
$char// 
=>// 	
true//
 
,// 
$char00 
=>00 	
true00
 
,00 
$char11 
=>11 	
true11
 
,11 
$char22 
=>22 	
true22
 
,22 
$char33 
=>33 	
true33
 
,33 
$char44 
=>44 	
true44
 
,44 
$char55 
=>55 	
true55
 
,55 
$char66 
=>66 	
true66
 
,66 
$char77 
=>77 	
true77
 
,77 
$char88 
=>88 	
true88
 
,88 
$char99 
=>99 	
true99
 
,99 
_:: 
=>:: 
false:: 
,:: 
};; 
;;; 
}<< 
public>> 
static>> 
readonly>> 
char>> 
[>> 
]>> 
[>> 
]>>  
Town>>! %
=>>& '
new>>( +
char>>, 0
[>>0 1
]>>1 2
[>>2 3
]>>3 4
{?? 
$str@@ /
.@@/ 0
ToCharArray@@0 ;
(@@; <
)@@< =
,@@= >
$strAA /
.AA/ 0
ToCharArrayAA0 ;
(AA; <
)AA< =
,AA= >
$strBB /
.BB/ 0
ToCharArrayBB0 ;
(BB; <
)BB< =
,BB= >
$strCC /
.CC/ 0
ToCharArrayCC0 ;
(CC; <
)CC< =
,CC= >
$strDD /
.DD/ 0
ToCharArrayDD0 ;
(DD; <
)DD< =
,DD= >
$strEE /
.EE/ 0
ToCharArrayEE0 ;
(EE; <
)EE< =
,EE= >
$strFF /
.FF/ 0
ToCharArrayFF0 ;
(FF; <
)FF< =
,FF= >
$strGG /
.GG/ 0
ToCharArrayGG0 ;
(GG; <
)GG< =
,GG= >
$strHH /
.HH/ 0
ToCharArrayHH0 ;
(HH; <
)HH< =
,HH= >
$strII /
.II/ 0
ToCharArrayII0 ;
(II; <
)II< =
,II= >
$strJJ /
.JJ/ 0
ToCharArrayJJ0 ;
(JJ; <
)JJ< =
,JJ= >
}KK 
;KK 
publicMM 
staticMM 
readonlyMM 
charMM 
[MM 
]MM 
[MM 
]MM  
FieldMM! &
=MM' (
newMM) ,
charMM- 1
[MM1 2
]MM2 3
[MM3 4
]MM4 5
{NN 
$strOO -
.OO- .
ToCharArrayOO. 9
(OO9 :
)OO: ;
,OO; <
$strPP -
.PP- .
ToCharArrayPP. 9
(PP9 :
)PP: ;
,PP; <
$strQQ -
.QQ- .
ToCharArrayQQ. 9
(QQ9 :
)QQ: ;
,QQ; <
$strRR -
.RR- .
ToCharArrayRR. 9
(RR9 :
)RR: ;
,RR; <
$strSS -
.SS- .
ToCharArraySS. 9
(SS9 :
)SS: ;
,SS; <
$strTT -
.TT- .
ToCharArrayTT. 9
(TT9 :
)TT: ;
,TT; <
$strUU -
.UU- .
ToCharArrayUU. 9
(UU9 :
)UU: ;
,UU; <
$strVV -
.VV- .
ToCharArrayVV. 9
(VV9 :
)VV: ;
,VV; <
$strWW -
.WW- .
ToCharArrayWW. 9
(WW9 :
)WW: ;
,WW; <
$strXX -
.XX- .
ToCharArrayXX. 9
(XX9 :
)XX: ;
,XX; <
$strYY -
.YY- .
ToCharArrayYY. 9
(YY9 :
)YY: ;
,YY; <
$strZZ -
.ZZ- .
ToCharArrayZZ. 9
(ZZ9 :
)ZZ: ;
,ZZ; <
$str[[ -
.[[- .
ToCharArray[[. 9
([[9 :
)[[: ;
,[[; <
$str\\ -
.\\- .
ToCharArray\\. 9
(\\9 :
)\\: ;
,\\; <
$str]] -
.]]- .
ToCharArray]]. 9
(]]9 :
)]]: ;
,]]; <
}^^ 
;^^ 
public`` 
static`` 
readonly`` 
char`` 
[`` 
]`` 
[`` 
]``  
Castle``! '
=``( )
new``* -
char``. 2
[``2 3
]``3 4
[``4 5
]``5 6
{aa 
$strbb -
.bb- .
ToCharArraybb. 9
(bb9 :
)bb: ;
,bb; <
$strcc -
.cc- .
ToCharArraycc. 9
(cc9 :
)cc: ;
,cc; <
$strdd -
.dd- .
ToCharArraydd. 9
(dd9 :
)dd: ;
,dd; <
$stree -
.ee- .
ToCharArrayee. 9
(ee9 :
)ee: ;
,ee; <
$strff -
.ff- .
ToCharArrayff. 9
(ff9 :
)ff: ;
,ff; <
$strgg -
.gg- .
ToCharArraygg. 9
(gg9 :
)gg: ;
,gg; <
$strhh -
.hh- .
ToCharArrayhh. 9
(hh9 :
)hh: ;
,hh; <
$strii -
.ii- .
ToCharArrayii. 9
(ii9 :
)ii: ;
,ii; <
$strjj -
.jj- .
ToCharArrayjj. 9
(jj9 :
)jj: ;
,jj; <
$strkk -
.kk- .
ToCharArraykk. 9
(kk9 :
)kk: ;
,kk; <
$strll -
.ll- .
ToCharArrayll. 9
(ll9 :
)ll: ;
,ll; <
$strmm -
.mm- .
ToCharArraymm. 9
(mm9 :
)mm: ;
,mm; <
$strnn -
.nn- .
ToCharArraynn. 9
(nn9 :
)nn: ;
,nn; <
$stroo -
.oo- .
ToCharArrayoo. 9
(oo9 :
)oo: ;
,oo; <
$strpp -
.pp- .
ToCharArraypp. 9
(pp9 :
)pp: ;
,pp; <
$strqq -
.qq- .
ToCharArrayqq. 9
(qq9 :
)qq: ;
,qq; <
}rr 
;rr 
}ss ö
\C:\ProgramData\Jenkins\.jenkins\workspace\GamePipeline\Projects\Role Playing Game\Program.cs
	namespace		 	
Role_Playing_Game		
 
;		 
public 
partial 
class 
Program 
{ 
static 
readonly 
Random 
random 
=  
new! $
($ %
)% &
;& '
static 
	Character 
? 

_character 
; 
static 
char 
[ 
] 
[ 
] 
? 
_map 
; 
static 
DateTime 
previoiusRender  
=! "
DateTime# +
.+ ,
Now, /
;/ 0
static 
int  
movesSinceLastBattle  
;  !
static 
bool 
gameRunning 
= 
true 
;  
const 
double 
randomBattleChance  
=! "
$num# %
/& '
$num( +
;+ ,
const 
int 
#
movesBeforeRandomBattle "
=# $
$num% &
;& '
static 
	Character 
	Character 
{ 
get 
=> 

_character	 
! 
; 
set 
=> 

_character	 
= 
value 
; 
} 
static 
char 
[ 
] 
[ 
] 
Map 
{ 
get 
=> 
_map	 
! 
; 
set 
=> 
_map	 
= 
value 
; 
}   
private"" 
static""	 
readonly"" 
string"" 
[""  
]""  !
maptext""" )
=""* +
new"", /
[""/ 0
]""0 1
{## 
$str$$ $
,$$$ %
$str%% 
,%% 
$str&& 
,&& 
}'' 
;'' 
private)) 
static))	 
readonly)) 
string)) 
[))  
]))  !
defaultCombatText))" 3
=))4 5
new))6 9
string)): @
[))@ A
]))A B
{** 
$str++ 
,++ 
$str,, 

,,,
 
$str-- 
,-- 
}.. 
;.. 
private00 
static00	 
string00 
[00 
]00 
?00 
_combatText00 %
;00% &
static22 
string22 
[22 
]22 

CombatText22 
{33 
get44 
=>44 
_combatText44	 
!44 
;44 
set55 
=>55 
_combatText55	 
=55 
value55 
;55 
}66 
public88 
static88 
void88 
Main88 
(88 
)88 
{99 
	Exception:: 
?:: 
	exception:: 
=:: 
null:: 
;:: 
try;; 
{<< 
Console== 

.==
 
CursorVisible== 
=== 
false==  
;==  !

Initialize>> 
(>> 
)>> 
;>> 
OpeningScreen?? 
(?? 
)?? 
;?? 
while@@ 
(@@	 

gameRunning@@
 
)@@ 
{AA 
UpdateCharacterBB 
(BB 
)BB 
;BB 
HandleMapUserInputCC 
(CC 
)CC 
;CC 
ifDD 
(DD 
gameRunningDD 
)DD 
{EE 
RenderWorldMapViewFF 
(FF 
)FF 
;FF 
SleepAfterRenderGG 
(GG 
)GG 
;GG 
}HH 
}II 
}JJ 
catchKK 
(KK 	
	ExceptionKK	 
eKK 
)KK 
{LL 
	exceptionMM 
=MM 
eMM 
;MM 
throwNN 
;NN 	
}OO 
finallyPP 	
{QQ 
ConsoleRR 

.RR
 
ClearRR 
(RR 
)RR 
;RR 
ConsoleSS 

.SS
 
	WriteLineSS 
(SS 
	exceptionSS 
?SS 
.SS  
ToStringSS  (
(SS( )
)SS) *
??SS+ -
$strSS. M
)SSM N
;SSN O
ConsoleTT 

.TT
 
CursorVisibleTT 
=TT 
trueTT 
;TT  
}UU 
}VV 
staticXX 
voidXX 

InitializeXX 
(XX 
)XX 
{YY 
MapZZ 
=ZZ 
MapsZZ 
.ZZ 
TownZZ 
;ZZ 
	Character[[ 
=[[ 
new[[ 
([[ 
)[[ 
;[[ 
{\\ 
var]] 
(]] 
i]] 	
,]]	 

j]] 
)]] 
=]] 
FindTileInMap]] 
(]] 
Map]] !
,]]! "
$char]]# &
)]]& '
!]]' (
.]]( )
Value]]) .
;]]. /
	Character^^ 
.^^ 
I^^ 
=^^ 
i^^ 
*^^ 
$num^^ 
;^^ 
	Character__ 
.__ 
J__ 
=__ 
j__ 
*__ 
$num__ 
;__ 
}`` 
	Characteraa 
.aa 
MapAnimationaa 
=aa 
Spritesaa "
.aa" #
	IdleRightaa# ,
;aa, -
}bb 
staticdd 
voiddd 
OpeningScreendd 
(dd 
)dd 
{ee 
Consoleff 	
.ff	 

SetCursorPositionff
 
(ff 
$numff 
,ff 
$numff  
)ff  !
;ff! "
Consolegg 	
.gg	 

Cleargg
 
(gg 
)gg 
;gg 
Consolehh 	
.hh	 

	WriteLinehh
 
(hh 
)hh 
;hh 
Consoleii 	
.ii	 

	WriteLineii
 
(ii 
$strii (
)ii( )
;ii) *
Consolejj 	
.jj	 

	WriteLinejj
 
(jj 
)jj 
;jj 
Consolekk 	
.kk	 

	WriteLinekk
 
(kk 
$strkk D
)kkD E
;kkE F
Consolell 	
.ll	 

	WriteLinell
 
(ll 
)ll 
;ll 
Consolemm 	
.mm	 

	WriteLinemm
 
(mm 
$strmm R
)mmR S
;mmS T
Consolenn 	
.nn	 

	WriteLinenn
 
(nn 
)nn 
;nn 
Consoleoo 	
.oo	 

	WriteLineoo
 
(oo 
$stroo =
)oo= >
;oo> ?
Consolepp 	
.pp	 

	WriteLinepp
 
(pp 
)pp 
;pp 
Consoleqq 	
.qq	 

Writeqq
 
(qq 
$strqq ,
)qq, -
;qq- .
PressEnterToContiuerr 
(rr 
)rr 
;rr 
}ss 
staticuu 
voiduu 
UpdateCharacteruu 
(uu 
)uu 
{vv 
ifww 
(ww 
	Characterww 
.ww 
MapAnimationww 
==ww 
Spritesww  '
.ww' (
RunUpww( -
&&ww0 2
	Characterww3 <
.ww< =
MapAnimationFrameww= N
iswwO Q
$numwwR S
orwwT V
$numwwW X
orwwY [
$numww\ ]
)ww] ^
	Characterww_ h
.wwh i
Jwwi j
--wwj l
;wwl m
ifxx 
(xx 
	Characterxx 
.xx 
MapAnimationxx 
==xx 
Spritesxx  '
.xx' (
RunDownxx( /
&&xx0 2
	Characterxx3 <
.xx< =
MapAnimationFramexx= N
isxxO Q
$numxxR S
orxxT V
$numxxW X
orxxY [
$numxx\ ]
)xx] ^
	Characterxx_ h
.xxh i
Jxxi j
++xxj l
;xxl m
ifyy 
(yy 
	Characteryy 
.yy 
MapAnimationyy 
==yy 
Spritesyy  '
.yy' (
RunLeftyy( /
)yy/ 0
	Characteryy2 ;
.yy; <
Iyy< =
--yy= ?
;yy? @
ifzz 
(zz 
	Characterzz 
.zz 
MapAnimationzz 
==zz 
Spriteszz  '
.zz' (
RunRightzz( 0
)zz0 1
	Characterzz2 ;
.zz; <
Izz< =
++zz= ?
;zz? @
	Character{{ 
.{{ 
MapAnimationFrame{{ 
++{{ 
;{{  
if}} 
(}} 
	Character}} 
.}} 
Moved}} 
)}} 
{~~  
HandleCharacterMoved 
( 
) 
; 
	Character
 
.
 
Moved
 
=
 
false
 
;
 
}
 
}
 
static
 
void
 "
HandleCharacterMoved
 !
(
! "
)
" #
{
 "
movesSinceLastBattle
 
++
 
;
 
switch
 
(
	 

Map

 
[
 
	Character
 
.
 
TileJ
 
]
 
[
 
	Character
 (
.
( )
TileI
) .
]
. /
)
/ 0
{
 
case
 
$char
 
:
 

SleepAtInn
 
(
 
)
 
;
 
break
& +
;
+ ,
case
 
$char
 
:
 
ShopAtStore
 
(
 
)
 
;
 
break
& +
;
+ ,
case
 
$char
 
:
 
	OpenChest
 
(
 
)
 
;
 
break
& +
;
+ ,
case
 
$char
 
:
 !
TransitionMapToTown
  
(
  !
)
! "
;
" #
break
& +
;
+ ,
case
 
$char
 
:
 "
TransitionMapToField
 !
(
! "
)
" #
;
# $
break
& +
;
+ ,
case
 
$char
 
:
 #
TransitionMapToCastle
 "
(
" #
)
# $
;
$ %
break
& +
;
+ ,
case
 
$char
 
:
 
FightGuardBoss
 
(
 
)
 
;
 
break
& +
;
+ ,
case
 
$char
 
:
 #
ChanceForRandomBattle
 "
(
" #
)
# $
;
$ %
break
& +
;
+ ,
case
 
$char
 
:
 
	FightKing
 
(
 
)
 
;
 
break
& +
;
+ ,
case
 
$char
 
:
 !
HiddenWaterFountain
  
(
  !
)
! "
;
" #
break
& +
;
+ ,
}
 
}
 
static
 
void
  
RenderStatusString
 
(
  
)
  !
{
 
Console
 	
.
	 

Clear

 
(
 
)
 
;
 
Console
 	
.
	 

	WriteLine

 
(
 
)
 
;
 
Console
 	
.
	 

	WriteLine

 
(
 
$str
 
)
 
;
 
Console
 	
.
	 

	WriteLine

 
(
 
)
 
;
 
Console
 	
.
	 

	WriteLine

 
(
 
$"
 
$str
 #
{
# $
	Character
$ -
.
- .
Level
. 3
}
3 4
"
4 5
)
5 6
;
6 7
Console
 	
.
	 

	WriteLine

 
(
 
$"
 
$str
 #
{
# $
	Character
$ -
.
- .

Experience
. 8
}
8 9
$str
9 :
{
: ;
	Character
; D
.
D E#
ExperienceToNextLevel
E Z
}
Z [
"
[ \
)
\ ]
;
] ^
Console
 	
.
	 

	WriteLine

 
(
 
$"
 
$str
 #
{
# $
	Character
$ -
.
- .
Health
. 4
}
4 5
$str
5 6
{
6 7
	Character
7 @
.
@ A
	MaxHealth
A J
}
J K
"
K L
)
L M
;
M N
Console
 	
.
	 

	WriteLine

 
(
 
$"
 
$str
 #
{
# $
	Character
$ -
.
- .
Gold
. 2
}
2 3
"
3 4
)
4 5
;
5 6
Console
   	
.
  	 

	WriteLine
  
 
(
   
$"
   
$str
   #
{
  # $
	Character
  $ -
.
  - .
Damage
  . 4
}
  4 5
"
  5 6
)
  6 7
;
  7 8
Console
¡¡ 	
.
¡¡	 

	WriteLine
¡¡
 
(
¡¡ 
)
¡¡ 
;
¡¡ 
Console
¢¢ 	
.
¢¢	 

Write
¢¢
 
(
¢¢ 
$str
¢¢ /
)
¢¢/ 0
;
¢¢0 1!
PressEnterToContiue
££ 
(
££ 
)
££ 
;
££ 
}
¤¤ 
static
¦¦ 
void
¦¦ 
RenderDeathScreen
¦¦ 
(
¦¦ 
)
¦¦  
{
§§ 
Console
¨¨ 	
.
¨¨	 

Clear
¨¨
 
(
¨¨ 
)
¨¨ 
;
¨¨ 
Console
©© 	
.
©©	 

	WriteLine
©©
 
(
©© 
)
©© 
;
©© 
Console
ªª 	
.
ªª	 

	WriteLine
ªª
 
(
ªª 
$str
ªª "
)
ªª" #
;
ªª# $
Console
«« 	
.
««	 

	WriteLine
««
 
(
«« 
)
«« 
;
«« 
Console
¬¬ 	
.
¬¬	 

	WriteLine
¬¬
 
(
¬¬ 
$str
¬¬ !
)
¬¬! "
;
¬¬" #
Console
­­ 	
.
­­	 

	WriteLine
­­
 
(
­­ 
)
­­ 
;
­­ 
Console
®® 	
.
®®	 

Write
®®
 
(
®® 
$str
®® /
)
®®/ 0
;
®®0 1!
PressEnterToContiue
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 
}
°° 
static
²² 
void
²² !
PressEnterToContiue
²²  
(
²²  !
)
²²! "
{
³³ 
GetInput
´´ 	
:
´´	 


ConsoleKey
µµ 
key
µµ 
=
µµ 
Console
µµ 
.
µµ 
ReadKey
µµ "
(
µµ" #
true
µµ# '
)
µµ' (
.
µµ( )
Key
µµ) ,
;
µµ, -
switch
¶¶ 
(
¶¶	 

key
¶¶
 
)
¶¶ 
{
·· 
case
¸¸ 

ConsoleKey
¸¸ 
.
¸¸ 
Enter
¸¸ 
:
¸¸ 
return
¹¹ 

;
¹¹
 
case
ºº 

ConsoleKey
ºº 
.
ºº 
Escape
ºº 
:
ºº 
gameRunning
»» 
=
»» 
false
»» 
;
»» 
return
¼¼ 

;
¼¼
 
default
½½ 

:
½½
 
goto
¾¾ 
GetInput
¾¾	 
;
¾¾ 
}
¿¿ 
}
ÀÀ 
static
ÂÂ 
void
ÂÂ 
	OpenChest
ÂÂ 
(
ÂÂ 
)
ÂÂ 
{
ÃÃ 
	Character
ÄÄ 
.
ÄÄ 
Gold
ÄÄ 
++
ÄÄ 
;
ÄÄ 
Map
ÅÅ 
[
ÅÅ 
	Character
ÅÅ 
.
ÅÅ 
TileJ
ÅÅ 
]
ÅÅ 
[
ÅÅ 
	Character
ÅÅ  
.
ÅÅ  !
TileI
ÅÅ! &
]
ÅÅ& '
=
ÅÅ( )
$char
ÅÅ* -
;
ÅÅ- .
Console
ÆÆ 	
.
ÆÆ	 

Clear
ÆÆ
 
(
ÆÆ 
)
ÆÆ 
;
ÆÆ 
Console
ÇÇ 	
.
ÇÇ	 

	WriteLine
ÇÇ
 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
Console
ÈÈ 	
.
ÈÈ	 

	WriteLine
ÈÈ
 
(
ÈÈ 
$str
ÈÈ L
)
ÈÈL M
;
ÈÈM N
Console
ÉÉ 	
.
ÉÉ	 

	WriteLine
ÉÉ
 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
Console
ÊÊ 	
.
ÊÊ	 

	WriteLine
ÊÊ
 
(
ÊÊ 
$"
ÊÊ 
$str
ÊÊ 
{
ÊÊ 
	Character
ÊÊ '
.
ÊÊ' (
Gold
ÊÊ( ,
}
ÊÊ, -
"
ÊÊ- .
)
ÊÊ. /
;
ÊÊ/ 0
Console
ËË 	
.
ËË	 

	WriteLine
ËË
 
(
ËË 
)
ËË 
;
ËË 
Console
ÌÌ 	
.
ÌÌ	 

Write
ÌÌ
 
(
ÌÌ 
$str
ÌÌ /
)
ÌÌ/ 0
;
ÌÌ0 1!
PressEnterToContiue
ÍÍ 
(
ÍÍ 
)
ÍÍ 
;
ÍÍ 
}
ÎÎ 
static
ÐÐ 
void
ÐÐ 

SleepAtInn
ÐÐ 
(
ÐÐ 
)
ÐÐ 
{
ÑÑ 
Console
ÒÒ 	
.
ÒÒ	 

Clear
ÒÒ
 
(
ÒÒ 
)
ÒÒ 
;
ÒÒ 
Console
ÓÓ 	
.
ÓÓ	 

	WriteLine
ÓÓ
 
(
ÓÓ 
)
ÓÓ 
;
ÓÓ 
Console
ÔÔ 	
.
ÔÔ	 

	WriteLine
ÔÔ
 
(
ÔÔ 
$str
ÔÔ >
)
ÔÔ> ?
;
ÔÔ? @
Console
ÕÕ 	
.
ÕÕ	 

	WriteLine
ÕÕ
 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
Console
ÖÖ 	
.
ÖÖ	 

	WriteLine
ÖÖ
 
(
ÖÖ 
$str
ÖÖ #
)
ÖÖ# $
;
ÖÖ$ %
Console
×× 	
.
××	 

	WriteLine
××
 
(
×× 
)
×× 
;
×× 
Console
ØØ 	
.
ØØ	 

	WriteLine
ØØ
 
(
ØØ 
$str
ØØ /
)
ØØ/ 0
;
ØØ0 1
Console
ÙÙ 	
.
ÙÙ	 

	WriteLine
ÙÙ
 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
Console
ÚÚ 	
.
ÚÚ	 

Write
ÚÚ
 
(
ÚÚ 
$str
ÚÚ /
)
ÚÚ/ 0
;
ÚÚ0 1
	Character
ÛÛ 
.
ÛÛ 
Health
ÛÛ 
=
ÛÛ 
	Character
ÛÛ 
.
ÛÛ 
	MaxHealth
ÛÛ (
;
ÛÛ( )!
PressEnterToContiue
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
ÝÝ 
static
ßß 
void
ßß !
HiddenWaterFountain
ßß  
(
ßß  !
)
ßß! "
{
àà 
Console
áá 	
.
áá	 

Clear
áá
 
(
áá 
)
áá 
;
áá 
Console
ââ 	
.
ââ	 

	WriteLine
ââ
 
(
ââ 
)
ââ 
;
ââ 
Console
ãã 	
.
ãã	 

	WriteLine
ãã
 
(
ãã 
$str
ãã 9
)
ãã9 :
;
ãã: ;
Console
ää 	
.
ää	 

	WriteLine
ää
 
(
ää 
$str
ää :
)
ää: ;
;
ää; <
Console
åå 	
.
åå	 

	WriteLine
åå
 
(
åå 
$str
åå &
)
åå& '
;
åå' (
Console
ææ 	
.
ææ	 

	WriteLine
ææ
 
(
ææ 
)
ææ 
;
ææ 
Console
çç 	
.
çç	 

	WriteLine
çç
 
(
çç 
$str
çç /
)
çç/ 0
;
çç0 1
Console
èè 	
.
èè	 

	WriteLine
èè
 
(
èè 
)
èè 
;
èè 
Console
éé 	
.
éé	 

Write
éé
 
(
éé 
$str
éé /
)
éé/ 0
;
éé0 1
	Character
êê 
.
êê 
Health
êê 
=
êê 
	Character
êê 
.
êê 
	MaxHealth
êê (
;
êê( )!
PressEnterToContiue
ëë 
(
ëë 
)
ëë 
;
ëë 
}
ìì 
static
îî 
void
îî !
TransitionMapToTown
îî  
(
îî  !
)
îî! "
{
ïï 
Map
ðð 
=
ðð 
Maps
ðð 
.
ðð 
Town
ðð 
;
ðð 
var
ññ 
(
ññ 
i
ññ 
,
ññ 	
j
ññ
 
)
ññ 
=
ññ 
FindTileInMap
ññ 
(
ññ 
Map
ññ  
,
ññ  !
$char
ññ" %
)
ññ% &
!
ññ& '
.
ññ' (
Value
ññ( -
;
ññ- .
	Character
òò 
.
òò 
I
òò 
=
òò 
i
òò 
*
òò 
$num
òò 
;
òò 
	Character
óó 
.
óó 
J
óó 
=
óó 
j
óó 
*
óó 
$num
óó 
;
óó 
}
ôô 
static
öö 
void
öö "
TransitionMapToField
öö !
(
öö! "
)
öö" #
{
÷÷ 
char
øø 
c
øø 
=
øø	 

Map
øø 
==
øø 
Maps
øø 
.
øø 
Town
øø 
?
øø 
$char
øø !
:
øø" #
$char
øø$ '
;
øø' (
Map
ùù 
=
ùù 
Maps
ùù 
.
ùù 
Field
ùù 
;
ùù 
var
úú 
(
úú 
i
úú 
,
úú 	
j
úú
 
)
úú 
=
úú 
FindTileInMap
úú 
(
úú 
Map
úú  
,
úú  !
c
úú" #
)
úú# $
!
úú$ %
.
úú% &
Value
úú& +
;
úú+ ,
	Character
ûû 
.
ûû 
I
ûû 
=
ûû 
i
ûû 
*
ûû 
$num
ûû 
;
ûû 
	Character
üü 
.
üü 
J
üü 
=
üü 
j
üü 
*
üü 
$num
üü 
;
üü 
}
ýý 
static
ÿÿ 
void
ÿÿ #
TransitionMapToCastle
ÿÿ "
(
ÿÿ" #
)
ÿÿ# $
{
 
Map
 
=
 
Maps
 
.
 
Castle
 
;
 
var
 
(
 
i
 
,
 	
j

 
)
 
=
 
FindTileInMap
 
(
 
Map
  
,
  !
$char
" %
)
% &
!
& '
.
' (
Value
( -
;
- .
	Character
 
.
 
I
 
=
 
i
 
*
 
$num
 
;
 
	Character
 
.
 
J
 
=
 
j
 
*
 
$num
 
;
 
}
 
static
 
void
 
ShopAtStore
 
(
 
)
 
{
 
Console
 	
.
	 

Clear

 
(
 
)
 
;
 
Console
 	
.
	 

	WriteLine

 
(
 
)
 
;
 
Console
 	
.
	 

	WriteLine

 
(
 
$str
 -
)
- .
;
. /
Console
 	
.
	 

	WriteLine

 
(
 
)
 
;
 
if
 
(
 
	Character
 
.
 
Gold
 
>=
 
$num
 
)
 
{
 
int
 
damage
 
=
 
	Character
 
.
 
Gold
 
/
  
$num
! "
;
" #
	Character
 
.
 
Gold
 
-=
 
damage
 
*
 
$num
 
;
  
	Character
 
.
 
Damage
 
+=
 
damage
 
;
 
Console
 

.

 
	WriteLine
 
(
 
$"
 
$str
  
{
  !
damage
! '
*
( )
$num
* +
}
+ ,
$str
, H
"
H I
)
I J
;
J K
Console
 

.

 
	WriteLine
 
(
 
)
 
;
 
Console
 

.

 
	WriteLine
 
(
 
$"
 
$str
 $
{
$ %
damage
% +
}
+ ,
$str
, D
"
D E
)
E F
;
F G
}
 
else
 
if
 	
(

 
	Character
 
.
 
Damage
 
>=
 
$num
  
)
  !
{
 
Console
 

.

 
	WriteLine
 
(
 
$"
 
$str
 F
"
F G
)
G H
;
H I
}
 
else
 
{
 
Console
 

.

 
	WriteLine
 
(
 
$"
 
$str
 I
"
I J
)
J K
;
K L
}
 
Console
 	
.
	 

	WriteLine

 
(
 
)
 
;
 
Console
 	
.
	 

Write

 
(
 
$str
 /
)
/ 0
;
0 1!
PressEnterToContiue
   
(
   
)
   
;
   
}
¡¡ 
static
££ 
void
££ #
ChanceForRandomBattle
££ "
(
££" #
)
££# $
{
¤¤ 
if
¥¥ 
(
¥¥ 
Map
¥¥ 	
==
¥¥
 
Maps
¥¥ 
.
¥¥ 
Town
¥¥ 
)
¥¥ 
{
¦¦ 
return
§§ 	
;
§§	 

}
¨¨ 
if
©© 
(
©© "
movesSinceLastBattle
©© 
>
©© %
movesBeforeRandomBattle
©© 4
&&
©©5 7
random
©©8 >
.
©©> ?

NextDouble
©©? I
(
©©I J
)
©©J K
<
©©L M 
randomBattleChance
©©N `
)
©©` a
{
ªª 
Battle
«« 	
(
««	 

Map
««
 
==
«« 
Maps
«« 
.
«« 
Castle
«« 
?
«« 
	EnemyType
«« (
.
««( )
Guard
««) .
:
««/ 0
	EnemyType
««1 :
.
««: ;
Boar
««; ?
,
««? @
out
««A D
_
««E F
)
««F G
;
««G H
if
¬¬ 
(
¬¬ 
!
¬¬ 
gameRunning
¬¬ 
)
¬¬ 
{
­­ 
return
®® 

;
®®
 
}
¯¯ 
}
°° 
}
±± 
static
³³ 
void
³³ 
FightGuardBoss
³³ 
(
³³ 
)
³³ 
{
´´ 
Battle
µµ 
(
µµ 	
	EnemyType
µµ	 
.
µµ 
	GuardBoss
µµ 
,
µµ 
out
µµ !
bool
µµ" &
ranAway
µµ' .
)
µµ. /
;
µµ/ 0
if
¶¶ 
(
¶¶ 
!
¶¶ 
gameRunning
¶¶ 
)
¶¶ 
{
·· 
return
¸¸ 	
;
¸¸	 

}
¹¹ 
else
ºº 
if
ºº 	
(
ºº
 
ranAway
ºº 
)
ºº 
{
»» 
	Character
¼¼ 
.
¼¼ 
J
¼¼ 
++
¼¼ 
;
¼¼ 
	Character
½½ 
.
½½ 
MapAnimation
½½ 
=
½½ 
Sprites
½½ #
.
½½# $
RunDown
½½$ +
;
½½+ ,
}
¾¾ 
else
¿¿ 
{
ÀÀ 
Map
ÁÁ 
[
ÁÁ 
	Character
ÁÁ 
.
ÁÁ 
TileJ
ÁÁ 
]
ÁÁ 
[
ÁÁ 
	Character
ÁÁ !
.
ÁÁ! "
TileI
ÁÁ" '
]
ÁÁ' (
=
ÁÁ) *
$char
ÁÁ+ .
;
ÁÁ. /
}
ÂÂ 
}
ÃÃ 
static
ÅÅ 
void
ÅÅ 
	FightKing
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÆÆ 
Battle
ÇÇ 
(
ÇÇ 	
	EnemyType
ÇÇ	 
.
ÇÇ 
	FinalBoss
ÇÇ 
,
ÇÇ 
out
ÇÇ !
bool
ÇÇ" &
ranAway
ÇÇ' .
)
ÇÇ. /
;
ÇÇ/ 0
if
ÈÈ 
(
ÈÈ 
!
ÈÈ 
gameRunning
ÈÈ 
)
ÈÈ 
{
ÉÉ 
return
ÊÊ 	
;
ÊÊ	 

}
ËË 
else
ÌÌ 
if
ÌÌ 	
(
ÌÌ
 
ranAway
ÌÌ 
)
ÌÌ 
{
ÍÍ 
	Character
ÎÎ 
.
ÎÎ 
J
ÎÎ 
++
ÎÎ 
;
ÎÎ 
	Character
ÏÏ 
.
ÏÏ 
MapAnimation
ÏÏ 
=
ÏÏ 
Sprites
ÏÏ #
.
ÏÏ# $
RunDown
ÏÏ$ +
;
ÏÏ+ ,
}
ÐÐ 
else
ÑÑ 
{
ÒÒ 
Console
ÓÓ 

.
ÓÓ
 
Clear
ÓÓ 
(
ÓÓ 
)
ÓÓ 
;
ÓÓ 
Console
ÔÔ 

.
ÔÔ
 
	WriteLine
ÔÔ 
(
ÔÔ 
)
ÔÔ 
;
ÔÔ 
Console
ÕÕ 

.
ÕÕ
 
	WriteLine
ÕÕ 
(
ÕÕ 
$str
ÕÕ *
)
ÕÕ* +
;
ÕÕ+ ,
Console
ÖÖ 

.
ÖÖ
 
	WriteLine
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
Console
×× 

.
××
 
	WriteLine
×× 
(
×× 
$str
×× 5
)
××5 6
;
××6 7
Console
ØØ 

.
ØØ
 
	WriteLine
ØØ 
(
ØØ 
)
ØØ 
;
ØØ 
Console
ÙÙ 

.
ÙÙ
 
	WriteLine
ÙÙ 
(
ÙÙ 
$str
ÙÙ "
)
ÙÙ" #
;
ÙÙ# $
Console
ÚÚ 

.
ÚÚ
 
	WriteLine
ÚÚ 
(
ÚÚ 
)
ÚÚ 
;
ÚÚ 
Console
ÛÛ 

.
ÛÛ
 
Write
ÛÛ 
(
ÛÛ 
$str
ÛÛ 0
)
ÛÛ0 1
;
ÛÛ1 2!
PressEnterToContiue
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
gameRunning
ÝÝ 
=
ÝÝ 
false
ÝÝ 
;
ÝÝ 
return
ÞÞ 	
;
ÞÞ	 

}
ßß 
}
àà 
static
ââ 
void
ââ  
HandleMapUserInput
ââ 
(
ââ  
)
ââ  !
{
ãã 
while
ää 
(
ää 	
Console
ää	 
.
ää 
KeyAvailable
ää 
)
ää 
{
åå 

ConsoleKey
ææ 
key
ææ 
=
ææ 
Console
ææ 
.
ææ 
ReadKey
ææ #
(
ææ# $
true
ææ$ (
)
ææ( )
.
ææ) *
Key
ææ* -
;
ææ- .
switch
çç 	
(
çç
 
key
çç 
)
çç 
{
èè 
case
éé 

ConsoleKey
êê 
.
êê 
UpArrow
êê 
or
êê 

ConsoleKey
êê (
.
êê( )
W
êê) *
or
êê+ -

ConsoleKey
ëë 
.
ëë 
	DownArrow
ëë 
or
ëë 

ConsoleKey
ëë (
.
ëë( )
S
ëë) *
or
ëë+ -

ConsoleKey
ìì 
.
ìì 
	LeftArrow
ìì 
or
ìì 

ConsoleKey
ìì (
.
ìì( )
A
ìì) *
or
ìì+ -

ConsoleKey
íí 
.
íí 

RightArrow
íí 
or
íí 

ConsoleKey
íí (
.
íí( )
D
íí) *
:
íí* +
if
îî 
(
îî 	
	Character
îî	 
.
îî 
IsIdle
îî 
)
îî 
{
ïï 
var
ðð 	
(
ðð
 
tileI
ðð 
,
ðð 
tileJ
ðð 
)
ðð 
=
ðð 
key
ðð 
switch
ðð %
{
ññ 

ConsoleKey
òò 
.
òò 
UpArrow
òò 
or
òò 

ConsoleKey
òò  *
.
òò* +
W
òò+ ,
=>
òò- /
(
òò0 1
	Character
òò1 :
.
òò: ;
TileI
òò; @
,
òò@ A
	Character
òòB K
.
òòK L
TileJ
òòL Q
-
òòR S
$num
òòT U
)
òòU V
,
òòV W

ConsoleKey
óó 
.
óó 
	DownArrow
óó 
or
óó 

ConsoleKey
óó  *
.
óó* +
S
óó+ ,
=>
óó- /
(
óó0 1
	Character
óó1 :
.
óó: ;
TileI
óó; @
,
óó@ A
	Character
óóB K
.
óóK L
TileJ
óóL Q
+
óóR S
$num
óóT U
)
óóU V
,
óóV W

ConsoleKey
ôô 
.
ôô 
	LeftArrow
ôô 
or
ôô 

ConsoleKey
ôô  *
.
ôô* +
A
ôô+ ,
=>
ôô- /
(
ôô0 1
	Character
ôô1 :
.
ôô: ;
TileI
ôô; @
-
ôôA B
$num
ôôC D
,
ôôD E
	Character
ôôF O
.
ôôO P
TileJ
ôôP U
)
ôôU V
,
ôôV W

ConsoleKey
õõ 
.
õõ 

RightArrow
õõ 
or
õõ 

ConsoleKey
õõ  *
.
õõ* +
D
õõ+ ,
=>
õõ- /
(
õõ0 1
	Character
õõ1 :
.
õõ: ;
TileI
õõ; @
+
õõA B
$num
õõC D
,
õõD E
	Character
õõF O
.
õõO P
TileJ
õõP U
)
õõU V
,
õõV W
_
öö 
=>
öö	 
throw
öö 
new
öö 
	Exception
öö 
(
öö  
$str
öö  %
)
öö% &
,
öö& '
}
÷÷ 
;
÷÷ 
if
øø 
(
øø	 

Maps
øø
 
.
øø %
IsValidCharacterMapTile
øø &
(
øø& '
Map
øø' *
,
øø* +
tileI
øø, 1
,
øø1 2
tileJ
øø3 8
)
øø8 9
)
øø9 :
{
ùù 
switch
úú 
(
úú 
key
úú 
)
úú 
{
ûû 
case
üü 

ConsoleKey
üü 
.
üü 
UpArrow
üü 
or
üü  "

ConsoleKey
üü# -
.
üü- .
W
üü. /
:
üü/ 0
	Character
ýý	 
.
ýý 
J
ýý 
--
ýý 
;
ýý 
	Character
þþ	 
.
þþ 
MapAnimation
þþ 
=
þþ  !
Sprites
þþ" )
.
þþ) *
RunUp
þþ* /
;
þþ/ 0
break
ÿÿ	 
;
ÿÿ 
case
 

ConsoleKey
 
.
 
	DownArrow
 !
or
" $

ConsoleKey
% /
.
/ 0
S
0 1
:
1 2
	Character
	 
.
 
J
 
++
 
;
 
	Character
	 
.
 
MapAnimation
 
=
  !
Sprites
" )
.
) *
RunDown
* 1
;
1 2
break
	 
;
 
case
 

ConsoleKey
 
.
 
	LeftArrow
 !
or
" $

ConsoleKey
% /
.
/ 0
A
0 1
:
1 2
	Character
	 
.
 
MapAnimation
 
=
  !
Sprites
" )
.
) *
RunLeft
* 1
;
1 2
break
	 
;
 
case
 

ConsoleKey
 
.
 

RightArrow
 "
or
# %

ConsoleKey
& 0
.
0 1
D
1 2
:
2 3
	Character
	 
.
 
MapAnimation
 
=
  !
Sprites
" )
.
) *
RunRight
* 2
;
2 3
break
	 
;
 
}
 
}
 
}
 
break
 

;

 
case
 

ConsoleKey
	 
.
 
Enter
 
:
  
RenderStatusString
 
(
 
)
 
;
 
break
 

;

 
case
 

ConsoleKey
	 
.
 
Escape
 
:
 
gameRunning
 
=
 
false
 
;
 
return
 
;
 
}
 
}
 
}
 
static
 
void
 
Battle
 
(
 
	EnemyType
 
	enemyType
 '
,
' (
out
) ,
bool
- 1
ranAway
2 9
)
9 :
{
 "
movesSinceLastBattle
 
=
 
$num
 
;
 
ranAway
 	
=

 
false
 
;
 
int
 
enemyHealth
 
=
 
	enemyType
 
switch
 $
{
 
	EnemyType
 
.
 
Boar
 
=>
 
$num
 
,
 
	EnemyType
   
.
   
	GuardBoss
   
=>
   
$num
   
,
   
	EnemyType
¡¡ 
.
¡¡ 
Guard
¡¡ 
=>
¡¡ 
$num
¡¡ 
,
¡¡ 
	EnemyType
¢¢ 
.
¢¢ 
	FinalBoss
¢¢ 
=>
¢¢ 
$num
¢¢ 
,
¢¢ 
_
££ 
=>
££ 
$num
££ 	
,
££	 

}
¤¤ 
;
¤¤ 
switch
¦¦ 
(
¦¦	 

	enemyType
¦¦
 
)
¦¦ 
{
§§ 
case
¨¨ 
	EnemyType
¨¨ 
.
¨¨ 
Boar
¨¨ 
:
¨¨ 

CombatText
©© 
=
©© 
new
©© 
string
©© 
[
©© 
]
©© 
{
ªª 
$str
«« (
,
««( )
$str
¬¬ 
,
¬¬ 
$str
­­ 
,
­­ 
$str
®® 
,
®® 
}
¯¯ 
;
¯¯ 
break
°° 	
;
°°	 

case
±± 
	EnemyType
±± 
.
±± 
	GuardBoss
±± 
:
±± 
if
²² 
(
²² 
	Character
²² 
.
²² 
Level
²² 
<
²² 
$num
²² 
)
²² 
{
³³ 

CombatText
´´ 
=
´´ 
new
´´ 
string
´´ 
[
´´ 
]
´´ 
{
µµ 
$str
¶¶ (
,
¶¶( )
$str
·· +
,
··+ ,
$str
¸¸ +
,
¸¸+ ,
$str
¹¹ 
,
¹¹ 
$str
ºº 
,
ºº 
$str
»» 
,
»» 
$str
¼¼ 
,
¼¼ 
}
½½ 
;
½½ 
}
¾¾ 
else
¿¿ 
{
ÀÀ 

CombatText
ÁÁ 
=
ÁÁ 
new
ÁÁ 
string
ÁÁ 
[
ÁÁ 
]
ÁÁ 
{
ÂÂ 
$str
ÃÃ (
,
ÃÃ( )
$str
ÄÄ 
,
ÄÄ 
$str
ÅÅ 
,
ÅÅ 
$str
ÆÆ 
,
ÆÆ 
}
ÇÇ 
;
ÇÇ 
}
ÈÈ 
break
ÉÉ 	
;
ÉÉ	 

case
ÊÊ 
	EnemyType
ÊÊ 
.
ÊÊ 
Guard
ÊÊ 
:
ÊÊ 

CombatText
ËË 
=
ËË 
new
ËË 
string
ËË 
[
ËË 
]
ËË 
{
ÌÌ 
$str
ÍÍ +
,
ÍÍ+ ,
$str
ÎÎ 
,
ÎÎ 
$str
ÏÏ 
,
ÏÏ 
$str
ÐÐ 
,
ÐÐ 
}
ÑÑ 
;
ÑÑ 
break
ÒÒ 	
;
ÒÒ	 

case
ÓÓ 
	EnemyType
ÓÓ 
.
ÓÓ 
	FinalBoss
ÓÓ 
:
ÓÓ 
if
ÔÔ 
(
ÔÔ 
	Character
ÔÔ 
.
ÔÔ 
Level
ÔÔ 
<
ÔÔ 
$num
ÔÔ 
)
ÔÔ 
{
ÕÕ 

CombatText
ÖÖ 
=
ÖÖ 
new
ÖÖ 
string
ÖÖ 
[
ÖÖ 
]
ÖÖ 
{
×× 
$str
ØØ %
,
ØØ% &
$str
ÙÙ +
,
ÙÙ+ ,
$str
ÚÚ +
,
ÚÚ+ ,
$str
ÛÛ 
,
ÛÛ 
$str
ÜÜ 
,
ÜÜ 
$str
ÝÝ 
,
ÝÝ 
$str
ÞÞ 
,
ÞÞ 
}
ßß 
;
ßß 
}
àà 
else
áá 
{
ââ 

CombatText
ãã 
=
ãã 
new
ãã 
string
ãã 
[
ãã 
]
ãã 
{
ää 
$str
åå %
,
åå% &
$str
ææ 
,
ææ 
$str
çç 
,
çç 
$str
èè 
,
èè 
}
éé 
;
éé 
}
êê 
break
ëë 	
;
ëë	 

}
ìì 
int
îî 
	frameLeft
îî 
=
îî 
$num
îî 
;
îî 
int
ïï 

frameRight
ïï 
=
ïï 
$num
ïï 
;
ïï 
string
ññ 
[
ññ 	
]
ññ	 

animationLeft
ññ 
=
ññ 
Sprites
ññ "
.
ññ" #
	IdleRight
ññ# ,
;
ññ, -
string
òò 
[
òò 	
]
òò	 

animationRight
òò 
=
òò 
	enemyType
òò %
switch
òò& ,
{
óó 
	EnemyType
ôô 
.
ôô 
Boar
ôô 
=>
ôô 
Sprites
ôô 
.
ôô 
IdleBoar
ôô &
,
ôô& '
	EnemyType
õõ 
.
õõ 
Guard
õõ 
=>
õõ 
Sprites
õõ 
.
õõ 
IdleLeft
õõ '
,
õõ' (
	EnemyType
öö 
.
öö 
	GuardBoss
öö 
=>
öö 
Sprites
öö "
.
öö" #
IdleLeft
öö# +
,
öö+ ,
	EnemyType
÷÷ 
.
÷÷ 
	FinalBoss
÷÷ 
=>
÷÷ 
Sprites
÷÷ "
.
÷÷" #
IdleLeft
÷÷# +
,
÷÷+ ,
_
øø 
=>
øø 
new
øø	 
[
øø 
]
øø 
{
øø 
Sprites
øø 
.
øø 
Error
øø 
}
øø  
,
øø  !
}
ùù 
;
ùù 
bool
ûû !
pendingConfirmation
ûû 
=
ûû 
false
ûû "
;
ûû" #
while
ýý 
(
ýý 	
true
ýý	 
)
ýý 
{
þþ 
if
ÿÿ 
(
ÿÿ 
animationLeft
ÿÿ 
==
ÿÿ 
Sprites
ÿÿ 
.
ÿÿ  !
GetUpAnimationRight
ÿÿ  3
&&
ÿÿ4 6
	frameLeft
ÿÿ7 @
==
ÿÿA C
animationLeft
ÿÿD Q
.
ÿÿQ R
Length
ÿÿR X
-
ÿÿY Z
$num
ÿÿ[ \
)
ÿÿ\ ]
{
 
	frameLeft
 
=
 
$num
 
;
 
animationLeft
 
=
 
Sprites
 
.
 
	IdleRight
 %
;
% &
}
 
else
 
if
 

(
 
animationLeft
 
==
 
Sprites
 $
.
$ %
	IdleRight
% .
||
/ 1
	frameLeft
2 ;
<
< =
animationLeft
> K
.
K L
Length
L R
-
S T
$num
U V
)
V W
{
 
	frameLeft
 
++
 
;
 
}
 
if
 
(
 
	frameLeft
 
>=
 
animationLeft
 !
.
! "
Length
" (
)
( )
	frameLeft
* 3
=
4 5
$num
6 7
;
7 8

frameRight
 
++
 
;
 
if
 
(
 

frameRight
 
>=
 
animationRight
 #
.
# $
Length
$ *
)
* +

frameRight
, 6
=
7 8
$num
9 :
;
: ;
while
 
(
	 

Console

 
.
 
KeyAvailable
 
)
 
{
 

ConsoleKey
 
key
 
=
 
Console
 
.
 
ReadKey
 $
(
$ %
true
% )
)
) *
.
* +
Key
+ .
;
. /
switch
 

(
 
key
 
)
 
{
 
case
 	

ConsoleKey

 
.
 
D1
 
or
 

ConsoleKey
 %
.
% &
NumPad1
& -
:
- .
if
 
(
	 

!

 !
pendingConfirmation
 
)
 
{
 
switch
 
(
 
random
 
.
 
Next
 
(
 
$num
 
)
 
)
 
{
 
case
 
$num
 
:
 
	frameLeft
	 
=
 
$num
 
;
 
animationLeft
	 
=
 
Sprites
  
.
  !

PunchRight
! +
;
+ ,

CombatText
	 
=
 
new
 
string
  
[
  !
]
! "
{
	 

$str

 (
,
( )
$str

 
,
 
$str

 (
,
( )
}
	 

;

 
enemyHealth
	 
-=
 
	Character
 !
.
! "
Damage
" (
;
( )
break
	 
;
 
case
   
$num
   
:
   
	frameLeft
¡¡	 
=
¡¡ 
$num
¡¡ 
;
¡¡ 
animationLeft
¢¢	 
=
¢¢ 
Sprites
¢¢  
.
¢¢  !
FallLeft
¢¢! )
;
¢¢) *

CombatText
££	 
=
££ 
new
££ 
string
££  
[
££  !
]
££! "
{
¤¤	 

$str
¥¥
 +
,
¥¥+ ,
$str
¦¦
 '
,
¦¦' (
$str
§§
 
,
§§ 
$str
¨¨
 (
,
¨¨( )
}
©©	 

;
©©
 
	Character
ªª	 
.
ªª 
Health
ªª 
--
ªª 
;
ªª 
break
««	 
;
«« 
}
¬¬ !
pendingConfirmation
­­ 
=
­­ 
true
­­ !
;
­­! "
}
®® 
break
¯¯ 
;
¯¯ 
case
°° 	

ConsoleKey
°°
 
.
°° 
D2
°° 
or
°° 

ConsoleKey
°° %
.
°°% &
NumPad2
°°& -
:
°°- .
if
±± 
(
±±	 

!
±±
 !
pendingConfirmation
±± 
)
±± 
{
²² 
bool
³³ 
success
³³ 
=
³³ 
	enemyType
³³ 
switch
³³  &
{
´´ 
	EnemyType
µµ 
.
µµ 
Boar
µµ 
=>
µµ 
random
µµ  
.
µµ  !
Next
µµ! %
(
µµ% &
$num
µµ& (
)
µµ( )
<
µµ* +
$num
µµ, -
,
µµ- .
	EnemyType
¶¶ 
.
¶¶ 
Guard
¶¶ 
=>
¶¶ 
random
¶¶ !
.
¶¶! "
Next
¶¶" &
(
¶¶& '
$num
¶¶' )
)
¶¶) *
<
¶¶+ ,
$num
¶¶- .
,
¶¶. /
_
·· 	
=>
··
 
true
·· 
,
·· 
}
¸¸ 
;
¸¸ 	
if
¹¹ 	
(
¹¹
 
success
¹¹ 
)
¹¹ 
{
ºº 
Console
»» 
.
»» 
Clear
»» 
(
»» 
)
»» 
;
»» 
Console
¼¼ 
.
¼¼ 
	WriteLine
¼¼ 
(
¼¼ 
)
¼¼ 
;
¼¼ 
Console
½½ 
.
½½ 
	WriteLine
½½ 
(
½½ 
$str
½½ *
)
½½* +
;
½½+ ,
Console
¾¾ 
.
¾¾ 
	WriteLine
¾¾ 
(
¾¾ 
)
¾¾ 
;
¾¾ 
Console
¿¿ 
.
¿¿ 
Write
¿¿ 
(
¿¿ 
$str
¿¿ 5
)
¿¿5 6
;
¿¿6 7!
PressEnterToContiue
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
ranAway
ÁÁ 
=
ÁÁ 
true
ÁÁ 
;
ÁÁ 
return
ÂÂ 
;
ÂÂ 
}
ÃÃ 
else
ÄÄ 
{
ÅÅ 
	frameLeft
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ 
animationLeft
ÇÇ 
=
ÇÇ 
Sprites
ÇÇ 
.
ÇÇ  
FallLeft
ÇÇ  (
;
ÇÇ( )

CombatText
ÈÈ 
=
ÈÈ 
new
ÈÈ 
string
ÈÈ 
[
ÈÈ  
]
ÈÈ  !
{
ÉÉ 	
$str
ÊÊ	 .
,
ÊÊ. /
$str
ËË	 0
,
ËË0 1
$str
ÌÌ	 
,
ÌÌ 
$str
ÍÍ	 
,
ÍÍ 
$str
ÎÎ	 '
,
ÎÎ' (
}
ÏÏ 	
;
ÏÏ	 

	Character
ÐÐ 
.
ÐÐ 
Health
ÐÐ 
--
ÐÐ 
;
ÐÐ !
pendingConfirmation
ÑÑ 
=
ÑÑ 
true
ÑÑ "
;
ÑÑ" #
}
ÒÒ 
}
ÓÓ 
break
ÔÔ 
;
ÔÔ 
case
ÕÕ 	

ConsoleKey
ÕÕ
 
.
ÕÕ 
D3
ÕÕ 
or
ÕÕ 

ConsoleKey
ÕÕ %
.
ÕÕ% &
NumPad3
ÕÕ& -
:
ÕÕ- .
if
ÖÖ 
(
ÖÖ	 

!
ÖÖ
 !
pendingConfirmation
ÖÖ 
)
ÖÖ 
{
××  
RenderStatusString
ØØ 
(
ØØ 
)
ØØ 
;
ØØ 
if
ÙÙ 	
(
ÙÙ
 
!
ÙÙ 
gameRunning
ÙÙ 
)
ÙÙ 
{
ÚÚ 
return
ÛÛ 
;
ÛÛ 
}
ÜÜ 
}
ÝÝ 
break
ÞÞ 
;
ÞÞ 
case
ßß 	

ConsoleKey
ßß
 
.
ßß 
Enter
ßß 
:
ßß 
if
àà 
(
àà	 
!
pendingConfirmation
àà
 
)
àà 
{
áá !
pendingConfirmation
ââ 
=
ââ 
false
ââ "
;
ââ" #
if
ãã 	
(
ãã
 
animationLeft
ãã 
==
ãã 
Sprites
ãã #
.
ãã# $
FallLeft
ãã$ ,
&&
ãã- /
	frameLeft
ãã0 9
==
ãã: <
animationLeft
ãã= J
.
ããJ K
Length
ããK Q
-
ããR S
$num
ããT U
)
ããU V
{
ää 
	frameLeft
åå 
=
åå 
$num
åå 
;
åå 
animationLeft
ææ 
=
ææ 
Sprites
ææ 
.
ææ  !
GetUpAnimationRight
ææ  3
;
ææ3 4
}
çç 
else
èè 
{
éé 
	frameLeft
êê 
=
êê 
$num
êê 
;
êê 
animationLeft
ëë 
=
ëë 
Sprites
ëë 
.
ëë  
	IdleRight
ëë  )
;
ëë) *
}
ìì 

CombatText
íí 
=
íí 
defaultCombatText
íí %
;
íí% &
if
îî 	
(
îî
 
	Character
îî 
.
îî 
Health
îî 
<=
îî 
$num
îî  
)
îî  !
{
ïï 
RenderDeathScreen
ðð 
(
ðð 
)
ðð 
;
ðð 
gameRunning
ññ 
=
ññ 
false
ññ 
;
ññ 
return
òò 
;
òò 
}
óó 
if
ôô 	
(
ôô
 
enemyHealth
ôô 
<=
ôô 
$num
ôô 
)
ôô 
{
õõ 
if
öö 

(
öö 
	enemyType
öö 
is
öö 
	EnemyType
öö "
.
öö" #
	FinalBoss
öö# ,
)
öö, -
{
÷÷ 	
return
øø	 
;
øø 
}
ùù 	
int
úú 
experienceGain
úú 
=
úú 
	enemyType
úú &
switch
úú' -
{
ûû 	
	EnemyType
üü	 
.
üü 
Boar
üü 
=>
üü 
$num
üü 
,
üü 
	EnemyType
ýý	 
.
ýý 
	GuardBoss
ýý 
=>
ýý 
$num
ýý  "
,
ýý" #
	EnemyType
þþ	 
.
þþ 
Guard
þþ 
=>
þþ 
$num
þþ 
,
þþ 
	EnemyType
ÿÿ	 
.
ÿÿ 
	FinalBoss
ÿÿ 
=>
ÿÿ 
$num
ÿÿ  $
,
ÿÿ$ %
_
	 

=>
 
$num
 
,
 
}
 	
;
	 

Console
 
.
 
Clear
 
(
 
)
 
;
 
Console
 
.
 
	WriteLine
 
(
 
)
 
;
 
Console
 
.
 
	WriteLine
 
(
 
$str
 4
)
4 5
;
5 6
Console
 
.
 
	WriteLine
 
(
 
)
 
;
 
Console
 
.
 
	WriteLine
 
(
 
$"
 
$str
 (
{
( )
experienceGain
) 7
}
7 8
$str
8 D
"
D E
)
E F
;
F G
Console
 
.
 
	WriteLine
 
(
 
)
 
;
 
	Character
 
.
 

Experience
 
+=
 
experienceGain
  .
;
. /
if
 

(
 
	Character
 
.
 

Experience
  
>=
! #
	Character
$ -
.
- .#
ExperienceToNextLevel
. C
)
C D
{
 	
	Character
	 
.
 
Level
 
++
 
;
 
	Character
	 
.
 

Experience
 
=
 
$num
  !
;
! "
	Character
	 
.
 #
ExperienceToNextLevel
 (
*=
) +
$num
, -
;
- .
Console
	 
.
 
	WriteLine
 
(
 
$"
 
$str
 0
{
0 1
	Character
1 :
.
: ;
Level
; @
}
@ A
$str
A B
"
B C
)
C D
;
D E
Console
	 
.
 
	WriteLine
 
(
 
)
 
;
 
}
 	
Console
 
.
 
	WriteLine
 
(
 
)
 
;
 
Console
 
.
 
Write
 
(
 
$str
 5
)
5 6
;
6 7!
PressEnterToContiue
 
(
 
)
 
;
 
return
 
;
 
}
 
}
 
break
 
;
 
case
 	

ConsoleKey

 
.
 
Escape
 
:
 
gameRunning
 
=
 
false
 
;
 
return
 
;
 
}
 
}
 
RenderBattleView
 
(
 
animationLeft
 !
[
! "
	frameLeft
" +
]
+ ,
,
, -
animationRight
. <
[
< =

frameRight
= G
]
G H
)
H I
;
I J
SleepAfterRender
 
(
 
)
 
;
 
}
 
}
   
static
¢¢ 
void
¢¢ 
SleepAfterRender
¢¢ 
(
¢¢ 
)
¢¢ 
{
££ 
DateTime
¦¦ 

now
¦¦ 
=
¦¦ 
DateTime
¦¦ 
.
¦¦ 
Now
¦¦ 
;
¦¦ 
TimeSpan
§§ 

sleep
§§ 
=
§§ 
TimeSpan
§§ 
.
§§ 
FromMilliseconds
§§ ,
(
§§, -
$num
§§- /
)
§§/ 0
-
§§1 2
(
§§3 4
now
§§4 7
-
§§8 9
previoiusRender
§§: I
)
§§I J
;
§§J K
if
¨¨ 
(
¨¨ 
sleep
¨¨ 
>
¨¨ 
TimeSpan
¨¨ 
.
¨¨ 
Zero
¨¨ 
)
¨¨ 
{
©© 
Thread
ªª 	
.
ªª	 

Sleep
ªª
 
(
ªª 
sleep
ªª 
)
ªª 
;
ªª 
}
«« 
previoiusRender
¬¬ 
=
¬¬ 
DateTime
¬¬ 
.
¬¬ 
Now
¬¬  
;
¬¬  !
}
­­ 
static
¯¯ 
(
¯¯ 	
int
¯¯	 
I
¯¯ 
,
¯¯ 
int
¯¯ 
J
¯¯ 
)
¯¯ 
?
¯¯ 
FindTileInMap
¯¯ %
(
¯¯% &
char
¯¯& *
[
¯¯* +
]
¯¯+ ,
[
¯¯, -
]
¯¯- .
map
¯¯/ 2
,
¯¯2 3
char
¯¯4 8
c
¯¯9 :
)
¯¯: ;
{
°° 
for
±± 
(
±± 
int
±± 

j
±± 
=
±± 
$num
±± 
;
±± 
j
±± 
<
±± 
map
±± 
.
±± 
Length
±±  
;
±±  !
j
±±" #
++
±±# %
)
±±% &
{
²² 
for
³³ 
(
³³ 
int
³³ 
i
³³ 
=
³³ 
$num
³³ 
;
³³ 
i
³³ 
<
³³ 
map
³³ 
[
³³ 
j
³³ 
]
³³ 
.
³³ 
Length
³³ $
;
³³$ %
i
³³& '
++
³³' )
)
³³) *
{
´´ 
if
µµ 
(
µµ 
map
µµ 
[
µµ 
j
µµ 
]
µµ 
[
µµ 
i
µµ 
]
µµ 
==
µµ 
c
µµ 
)
µµ 
{
¶¶ 
return
·· 
(
·· 
i
·· 
,
·· 
j
·· 
)
·· 
;
·· 
}
¸¸ 
}
¹¹ 
}
ºº 
return
»» 
null
»»	 
;
»» 
}
¼¼ 
static
¾¾ 
void
¾¾  
RenderWorldMapView
¾¾ 
(
¾¾  
)
¾¾  !
{
¿¿ 
Console
ÀÀ 	
.
ÀÀ	 

CursorVisible
ÀÀ
 
=
ÀÀ 
false
ÀÀ 
;
ÀÀ  
var
ÂÂ 
(
ÂÂ 
width
ÂÂ 
,
ÂÂ 
height
ÂÂ 
)
ÂÂ 
=
ÂÂ 
GetWidthAndHeight
ÂÂ )
(
ÂÂ) *
)
ÂÂ* +
;
ÂÂ+ ,
int
ÃÃ 
heightCutOff
ÃÃ 
=
ÃÃ 
(
ÃÃ 
int
ÃÃ 
)
ÃÃ 
(
ÃÃ 
height
ÃÃ !
*
ÃÃ" #
$num
ÃÃ$ '
)
ÃÃ' (
;
ÃÃ( )
int
ÄÄ 
midWidth
ÄÄ 
=
ÄÄ 
width
ÄÄ 
/
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
int
ÅÅ 
	midHeight
ÅÅ 
=
ÅÅ 
heightCutOff
ÅÅ 
/
ÅÅ  
$num
ÅÅ! "
;
ÅÅ" #
StringBuilder
ÇÇ 
sb
ÇÇ 
=
ÇÇ 
new
ÇÇ 
(
ÇÇ 
width
ÇÇ 
*
ÇÇ  
height
ÇÇ! '
)
ÇÇ' (
;
ÇÇ( )
for
ÈÈ 
(
ÈÈ 
int
ÈÈ 

j
ÈÈ 
=
ÈÈ 
$num
ÈÈ 
;
ÈÈ 
j
ÈÈ 
<
ÈÈ 
height
ÈÈ 
;
ÈÈ 
j
ÈÈ 
++
ÈÈ !
)
ÈÈ! "
{
ÉÉ 
if
ÊÊ 
(
ÊÊ 
OperatingSystem
ÊÊ 
.
ÊÊ 
	IsWindows
ÊÊ  
(
ÊÊ  !
)
ÊÊ! "
&&
ÊÊ# %
j
ÊÊ& '
==
ÊÊ( *
height
ÊÊ+ 1
-
ÊÊ2 3
$num
ÊÊ4 5
)
ÊÊ5 6
{
ËË 
break
ÌÌ 	
;
ÌÌ	 

}
ÍÍ 
for
ÏÏ 
(
ÏÏ 
int
ÏÏ 
i
ÏÏ 
=
ÏÏ 
$num
ÏÏ 
;
ÏÏ 
i
ÏÏ 
<
ÏÏ 
width
ÏÏ 
;
ÏÏ 
i
ÏÏ 
++
ÏÏ !
)
ÏÏ! "
{
ÐÐ 
if
ÒÒ 
(
ÒÒ 
j
ÒÒ 	
>=
ÒÒ
 
heightCutOff
ÒÒ 
)
ÒÒ 
{
ÓÓ 
int
ÔÔ 
line
ÔÔ	 
=
ÔÔ 
j
ÔÔ 
-
ÔÔ 
heightCutOff
ÔÔ  
-
ÔÔ! "
$num
ÔÔ# $
;
ÔÔ$ %
int
ÕÕ 
	character
ÕÕ	 
=
ÕÕ 
i
ÕÕ 
-
ÕÕ 
$num
ÕÕ 
;
ÕÕ 
if
ÖÖ 
(
ÖÖ 	
i
ÖÖ	 

<
ÖÖ 
width
ÖÖ 
-
ÖÖ 
$num
ÖÖ 
&&
ÖÖ 
	character
ÖÖ #
>=
ÖÖ$ &
$num
ÖÖ' (
&&
ÖÖ) +
line
ÖÖ, 0
>=
ÖÖ1 3
$num
ÖÖ4 5
&&
ÖÖ6 8
line
ÖÖ9 =
<
ÖÖ> ?
maptext
ÖÖ@ G
.
ÖÖG H
Length
ÖÖH N
&&
ÖÖO Q
	character
ÖÖR [
<
ÖÖ\ ]
maptext
ÖÖ^ e
[
ÖÖe f
line
ÖÖf j
]
ÖÖj k
.
ÖÖk l
Length
ÖÖl r
)
ÖÖr s
{
×× 
char
ØØ 

ch
ØØ 
=
ØØ 
maptext
ØØ 
[
ØØ 
line
ØØ 
]
ØØ 
[
ØØ 
	character
ØØ '
]
ØØ' (
;
ØØ( )
sb
ÙÙ 
.
ÙÙ 	
Append
ÙÙ	 
(
ÙÙ 
char
ÙÙ 
.
ÙÙ 
IsWhiteSpace
ÙÙ !
(
ÙÙ! "
ch
ÙÙ" $
)
ÙÙ$ %
?
ÙÙ& '
$char
ÙÙ( +
:
ÙÙ, -
ch
ÙÙ. 0
)
ÙÙ0 1
;
ÙÙ1 2
}
ÚÚ 
else
ÛÛ 	
{
ÜÜ 
sb
ÝÝ 
.
ÝÝ 	
Append
ÝÝ	 
(
ÝÝ 
$char
ÝÝ 
)
ÝÝ 
;
ÝÝ 
}
ÞÞ 
continue
ßß 
;
ßß 
}
àà 
if
ãã 
(
ãã 
i
ãã 	
is
ãã
 
$num
ãã 
&&
ãã 
j
ãã 
is
ãã 
$num
ãã 
)
ãã 
{
ää 
sb
åå 
.
åå 
Append
åå 
(
åå 
$char
åå 
)
åå 
;
åå 
continue
ææ 
;
ææ 
}
çç 
if
èè 
(
èè 
i
èè 	
is
èè
 
$num
èè 
&&
èè 
j
èè 
==
èè 
heightCutOff
èè #
-
èè$ %
$num
èè& '
)
èè' (
{
éé 
sb
êê 
.
êê 
Append
êê 
(
êê 
$char
êê 
)
êê 
;
êê 
continue
ëë 
;
ëë 
}
ìì 
if
íí 
(
íí 
i
íí 	
==
íí
 
width
íí 
-
íí 
$num
íí 
&&
íí 
j
íí 
is
íí 
$num
íí  
)
íí  !
{
îî 
sb
ïï 
.
ïï 
Append
ïï 
(
ïï 
$char
ïï 
)
ïï 
;
ïï 
continue
ðð 
;
ðð 
}
ññ 
if
òò 
(
òò 
i
òò 	
==
òò
 
width
òò 
-
òò 
$num
òò 
&&
òò 
j
òò 
==
òò 
heightCutOff
òò +
-
òò, -
$num
òò. /
)
òò/ 0
{
óó 
sb
ôô 
.
ôô 
Append
ôô 
(
ôô 
$char
ôô 
)
ôô 
;
ôô 
continue
õõ 
;
õõ 
}
öö 
if
÷÷ 
(
÷÷ 
i
÷÷ 	
is
÷÷
 
$num
÷÷ 
||
÷÷ 
i
÷÷ 
==
÷÷ 
width
÷÷ 
-
÷÷ 
$num
÷÷  
)
÷÷  !
{
øø 
sb
ùù 
.
ùù 
Append
ùù 
(
ùù 
$char
ùù 
)
ùù 
;
ùù 
continue
úú 
;
úú 
}
ûû 
if
üü 
(
üü 
j
üü 	
is
üü
 
$num
üü 
||
üü 
j
üü 
==
üü 
heightCutOff
üü #
-
üü$ %
$num
üü& '
)
üü' (
{
ýý 
sb
þþ 
.
þþ 
Append
þþ 
(
þþ 
$char
þþ 
)
þþ 
;
þþ 
continue
ÿÿ 
;
ÿÿ 
}
 
if
 
(
 
i
 	
>

 
midWidth
 
-
 
$num
 
&&
 
i
 
<
 
midWidth
  (
+
) *
$num
+ ,
&&
- /
j
0 1
>
2 3
	midHeight
4 =
-
> ?
$num
@ A
&&
B D
j
E F
<
G H
	midHeight
I R
+
S T
$num
U V
)
V W
{
 
int
 
ci
	 
=
 
i
 
-
 
(
 
midWidth
 
-
 
$num
 
)
  
;
  !
int
 
cj
	 
=
 
j
 
-
 
(
 
	midHeight
 
-
 
$num
  
)
  !
;
! "
string
  
characterMapRender
 
=
  
	Character
! *
.
* +
Render
+ 1
;
1 2
sb
 
.
 
Append
 
(
  
characterMapRender
 !
[
! "
cj
" $
*
% &
$num
' (
+
) *
ci
+ -
]
- .
)
. /
;
/ 0
continue
 
;
 
}
 
int
 
mapI
 
=
 
i
 
-
 
midWidth
 
+
 
	Character
 (
.
( )
I
) *
+
+ ,
$num
- .
;
. /
int
 
mapJ
 
=
 
j
 
-
 
	midHeight
 
+
 
	Character
 (
.
( )
J
) *
+
+ ,
$num
- .
;
. /
int
 
tileI
 
=
 
mapI
 
<
 
$num
 
?
 
(
 
mapI
  
-
! "
$num
# $
)
$ %
/
& '
$num
( )
:
* +
mapI
, 0
/
1 2
$num
3 4
;
4 5
int
 
tileJ
 
=
 
mapJ
 
<
 
$num
 
?
 
(
 
mapJ
  
-
! "
$num
# $
)
$ %
/
& '
$num
( )
:
* +
mapJ
, 0
/
1 2
$num
3 4
;
4 5
int
 
pixelI
 
=
 
mapI
 
<
 
$num
 
?
 
$num
 
+
 
(
  !
(
! "
mapI
" &
+
' (
$num
) *
)
* +
%
, -
$num
. /
)
/ 0
:
1 2
(
3 4
mapI
4 8
%
9 :
$num
; <
)
< =
;
= >
int
 
pixelJ
 
=
 
mapJ
 
<
 
$num
 
?
 
$num
 
+
 
(
  !
(
! "
mapJ
" &
+
' (
$num
) *
)
* +
%
, -
$num
. /
)
/ 0
:
1 2
(
3 4
mapJ
4 8
%
9 :
$num
; <
)
< =
;
= >
string
 


tileRender
 
=
 
Maps
 
.
 
GetMapTileRender
 -
(
- .
Map
. 1
,
1 2
tileI
3 8
,
8 9
tileJ
: ?
)
? @
;
@ A
char
 
c
	 

=
 

tileRender
 
[
 
pixelJ
 
*
  
$num
! "
+
# $
pixelI
% +
]
+ ,
;
, -
sb
 
.
 
Append
 
(
 
char
 
.
 
IsWhiteSpace
 
(
  
c
  !
)
! "
?
# $
$char
% (
:
) *
c
+ ,
)
, -
;
- .
}
 
if
 
(
 
!
 
OperatingSystem
 
.
 
	IsWindows
 !
(
! "
)
" #
&&
$ &
j
' (
<
) *
height
+ 1
-
2 3
$num
4 5
)
5 6
{
   
sb
¡¡ 
.
¡¡ 

AppendLine
¡¡ 
(
¡¡ 
)
¡¡ 
;
¡¡ 
}
¢¢ 
}
££ 
Console
¤¤ 	
.
¤¤	 

SetCursorPosition
¤¤
 
(
¤¤ 
$num
¤¤ 
,
¤¤ 
$num
¤¤  
)
¤¤  !
;
¤¤! "
Console
¥¥ 	
.
¥¥	 

Write
¥¥
 
(
¥¥ 
sb
¥¥ 
)
¥¥ 
;
¥¥ 
}
¦¦ 
static
¨¨ 
void
¨¨ 
RenderBattleView
¨¨ 
(
¨¨ 
string
¨¨ $

spriteLeft
¨¨% /
,
¨¨/ 0
string
¨¨1 7
spriteRight
¨¨8 C
)
¨¨C D
{
©© 
Console
ªª 	
.
ªª	 

CursorVisible
ªª
 
=
ªª 
false
ªª 
;
ªª  
var
¬¬ 
(
¬¬ 
width
¬¬ 
,
¬¬ 
height
¬¬ 
)
¬¬ 
=
¬¬ 
GetWidthAndHeight
¬¬ )
(
¬¬) *
)
¬¬* +
;
¬¬+ ,
int
­­ 
midWidth
­­ 
=
­­ 
width
­­ 
/
­­ 
$num
­­ 
;
­­ 
int
®® 
thirdHeight
®® 
=
®® 
height
®® 
/
®® 
$num
®® 
;
®® 
int
¯¯ 

textStartJ
¯¯ 
=
¯¯ 
thirdHeight
¯¯ 
+
¯¯  
$num
¯¯! "
;
¯¯" #
StringBuilder
±± 
sb
±± 
=
±± 
new
±± 
(
±± 
width
±± 
*
±±  
height
±±! '
)
±±' (
;
±±( )
for
²² 
(
²² 
int
²² 

j
²² 
=
²² 
$num
²² 
;
²² 
j
²² 
<
²² 
height
²² 
;
²² 
j
²² 
++
²² !
)
²²! "
{
³³ 
if
´´ 
(
´´ 
OperatingSystem
´´ 
.
´´ 
	IsWindows
´´  
(
´´  !
)
´´! "
&&
´´# %
j
´´& '
==
´´( *
height
´´+ 1
-
´´2 3
$num
´´4 5
)
´´5 6
{
µµ 
break
¶¶ 	
;
¶¶	 

}
·· 
for
¹¹ 
(
¹¹ 
int
¹¹ 
i
¹¹ 
=
¹¹ 
$num
¹¹ 
;
¹¹ 
i
¹¹ 
<
¹¹ 
width
¹¹ 
;
¹¹ 
i
¹¹ 
++
¹¹ !
)
¹¹! "
{
ºº 
if
¼¼ 
(
¼¼ 
j
¼¼ 	
>=
¼¼
 

textStartJ
¼¼ 
)
¼¼ 
{
½½ 
int
¾¾ 
line
¾¾	 
=
¾¾ 
j
¾¾ 
-
¾¾ 

textStartJ
¾¾ 
-
¾¾  
$num
¾¾! "
;
¾¾" #
int
¿¿ 
	character
¿¿	 
=
¿¿ 
i
¿¿ 
-
¿¿ 
$num
¿¿ 
;
¿¿ 
if
ÀÀ 
(
ÀÀ 	
i
ÀÀ	 

<
ÀÀ 
width
ÀÀ 
-
ÀÀ 
$num
ÀÀ 
&&
ÀÀ 
	character
ÀÀ #
>=
ÀÀ$ &
$num
ÀÀ' (
&&
ÀÀ) +
line
ÀÀ, 0
>=
ÀÀ1 3
$num
ÀÀ4 5
&&
ÀÀ6 8
line
ÀÀ9 =
<
ÀÀ> ?

CombatText
ÀÀ@ J
.
ÀÀJ K
Length
ÀÀK Q
&&
ÀÀR T
	character
ÀÀU ^
<
ÀÀ_ `

CombatText
ÀÀa k
[
ÀÀk l
line
ÀÀl p
]
ÀÀp q
.
ÀÀq r
Length
ÀÀr x
)
ÀÀx y
{
ÁÁ 
char
ÂÂ 

ch
ÂÂ 
=
ÂÂ 

CombatText
ÂÂ 
[
ÂÂ 
line
ÂÂ 
]
ÂÂ  
[
ÂÂ  !
	character
ÂÂ! *
]
ÂÂ* +
;
ÂÂ+ ,
sb
ÃÃ 
.
ÃÃ 	
Append
ÃÃ	 
(
ÃÃ 
char
ÃÃ 
.
ÃÃ 
IsWhiteSpace
ÃÃ !
(
ÃÃ! "
ch
ÃÃ" $
)
ÃÃ$ %
?
ÃÃ& '
$char
ÃÃ( +
:
ÃÃ, -
ch
ÃÃ. 0
)
ÃÃ0 1
;
ÃÃ1 2
continue
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}
ÆÆ 
if
ÉÉ 
(
ÉÉ 
i
ÉÉ 	
>
ÉÉ
 
midWidth
ÉÉ 
-
ÉÉ 
$num
ÉÉ 
-
ÉÉ 
$num
ÉÉ 
&&
ÉÉ  
i
ÉÉ! "
<
ÉÉ# $
midWidth
ÉÉ% -
+
ÉÉ. /
$num
ÉÉ0 1
-
ÉÉ2 3
$num
ÉÉ4 6
&&
ÉÉ7 9
j
ÉÉ: ;
>
ÉÉ< =
thirdHeight
ÉÉ> I
-
ÉÉJ K
$num
ÉÉL M
&&
ÉÉN P
j
ÉÉQ R
<
ÉÉS T
thirdHeight
ÉÉU `
+
ÉÉa b
$num
ÉÉc d
)
ÉÉd e
{
ÊÊ 
int
ËË 
ci
ËË	 
=
ËË 
i
ËË 
-
ËË 
(
ËË 
midWidth
ËË 
-
ËË 
$num
ËË 
)
ËË  
+
ËË! "
$num
ËË# %
;
ËË% &
int
ÌÌ 
cj
ÌÌ	 
=
ÌÌ 
j
ÌÌ 
-
ÌÌ 
(
ÌÌ 
thirdHeight
ÌÌ 
-
ÌÌ  
$num
ÌÌ! "
)
ÌÌ" #
;
ÌÌ# $
string
ÍÍ  
characterMapRender
ÍÍ 
=
ÍÍ  

spriteLeft
ÍÍ! +
;
ÍÍ+ ,
sb
ÎÎ 
.
ÎÎ 
Append
ÎÎ 
(
ÎÎ  
characterMapRender
ÎÎ !
[
ÎÎ! "
cj
ÎÎ" $
*
ÎÎ% &
$num
ÎÎ' (
+
ÎÎ) *
ci
ÎÎ+ -
]
ÎÎ- .
)
ÎÎ. /
;
ÎÎ/ 0
continue
ÏÏ 
;
ÏÏ 
}
ÐÐ 
if
ÓÓ 
(
ÓÓ 
i
ÓÓ 	
>
ÓÓ
 
midWidth
ÓÓ 
-
ÓÓ 
$num
ÓÓ 
+
ÓÓ 
$num
ÓÓ 
&&
ÓÓ  
i
ÓÓ! "
<
ÓÓ# $
midWidth
ÓÓ% -
+
ÓÓ. /
$num
ÓÓ0 1
+
ÓÓ2 3
$num
ÓÓ4 6
&&
ÓÓ7 9
j
ÓÓ: ;
>
ÓÓ< =
thirdHeight
ÓÓ> I
-
ÓÓJ K
$num
ÓÓL M
&&
ÓÓN P
j
ÓÓQ R
<
ÓÓS T
thirdHeight
ÓÓU `
+
ÓÓa b
$num
ÓÓc d
)
ÓÓd e
{
ÔÔ 
int
ÕÕ 
ci
ÕÕ	 
=
ÕÕ 
i
ÕÕ 
-
ÕÕ 
(
ÕÕ 
midWidth
ÕÕ 
-
ÕÕ 
$num
ÕÕ 
)
ÕÕ  
-
ÕÕ! "
$num
ÕÕ# %
;
ÕÕ% &
int
ÖÖ 
cj
ÖÖ	 
=
ÖÖ 
j
ÖÖ 
-
ÖÖ 
(
ÖÖ 
thirdHeight
ÖÖ 
-
ÖÖ  
$num
ÖÖ! "
)
ÖÖ" #
;
ÖÖ# $
string
××  
characterMapRender
×× 
=
××  
spriteRight
××! ,
;
××, -
sb
ØØ 
.
ØØ 
Append
ØØ 
(
ØØ  
characterMapRender
ØØ !
[
ØØ! "
cj
ØØ" $
*
ØØ% &
$num
ØØ' (
+
ØØ) *
ci
ØØ+ -
]
ØØ- .
)
ØØ. /
;
ØØ/ 0
continue
ÙÙ 
;
ÙÙ 
}
ÚÚ 
sb
ÜÜ 
.
ÜÜ 
Append
ÜÜ 
(
ÜÜ 
$char
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
ÝÝ 
if
ÞÞ 
(
ÞÞ 
!
ÞÞ 
OperatingSystem
ÞÞ 
.
ÞÞ 
	IsWindows
ÞÞ !
(
ÞÞ! "
)
ÞÞ" #
&&
ÞÞ$ &
j
ÞÞ' (
<
ÞÞ) *
height
ÞÞ+ 1
-
ÞÞ2 3
$num
ÞÞ4 5
)
ÞÞ5 6
{
ßß 
sb
àà 
.
àà 

AppendLine
àà 
(
àà 
)
àà 
;
àà 
}
áá 
}
ââ 
Console
ãã 	
.
ãã	 

SetCursorPosition
ãã
 
(
ãã 
$num
ãã 
,
ãã 
$num
ãã  
)
ãã  !
;
ãã! "
Console
ää 	
.
ää	 

Write
ää
 
(
ää 
sb
ää 
)
ää 
;
ää 
}
åå 
static
çç 
(
çç 	
int
çç	 
Width
çç 
,
çç 
int
çç 
Height
çç 
)
çç 
GetWidthAndHeight
çç  1
(
çç1 2
)
çç2 3
{
èè 
RestartRender
éé 
:
éé 
int
êê 
width
êê 
=
êê 
Console
êê 
.
êê 
WindowWidth
êê !
;
êê! "
int
ëë 
height
ëë 
=
ëë 
Console
ëë 
.
ëë 
WindowHeight
ëë #
;
ëë# $
if
ìì 
(
ìì 
OperatingSystem
ìì 
.
ìì 
	IsWindows
ìì 
(
ìì  
)
ìì  !
)
ìì! "
{
íí 
try
îî 
{
ïï 
if
ðð 
(
ðð 
Console
ðð 
.
ðð 
BufferHeight
ðð 
!=
ðð 
height
ðð  &
)
ðð& '
Console
ðð( /
.
ðð/ 0
BufferHeight
ðð0 <
=
ðð= >
height
ðð? E
;
ððE F
if
ññ 
(
ññ 
Console
ññ 
.
ññ 
BufferWidth
ññ 
!=
ññ 
width
ññ $
)
ññ$ %
Console
ññ( /
.
ññ/ 0
BufferWidth
ññ0 ;
=
ññ< =
width
ññ> C
;
ññC D
}
òò 
catch
óó 
(
óó	 

	Exception
óó
 
)
óó 
{
ôô 
Console
õõ 
.
õõ 
Clear
õõ 
(
õõ 
)
õõ 
;
õõ 
goto
öö 
RestartRender
öö	 
;
öö 
}
÷÷ 
}
øø 
return
ùù 
(
ùù	 

width
ùù
 
,
ùù 
height
ùù 
)
ùù 
;
ùù 
}
úú 
}ûû 
publicýý 
enum
ýý 
	EnemyType
ýý 
{þþ 
Boar
ÿÿ 
,
ÿÿ 
Guard
 
,
 
	GuardBoss
 

,

 
	FinalBoss
 

,

 
} ²¼
\C:\ProgramData\Jenkins\.jenkins\workspace\GamePipeline\Projects\Role Playing Game\Sprites.cs
	namespace 	
Role_Playing_Game
 
; 
public 
static 
class 
Sprites 
{ 
public 
const 
string 
Open 
= 
$str 
+ 
$str 
+ 
$str		 
+		 
$str		 
+		 
$str

 
+

 
$str

 
+

 
$str 
; 
public 
const 
string 
Town 
= 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
; 
public 
const 
string 
Castle 
= 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
; 
public 
const 
string 
Building 
= 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
; 
public 
const 
string 
Inn 
= 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
; 
public   
const   
string   
Store   
=   
$str!! 
+!! 
$str!! 
+!! 
$str"" 
+"" 
$str"" 
+"" 
$str## 
+## 
$str## 
+## 
$str$$ 
;$$ 
public%% 
const%% 
string%% 
Chest%% 
=%% 
$str&& 
+&& 
$str&& 
+&& 
$str'' 
+'' 
$str'' 
+'' 
$str(( 
+(( 
$str(( 
+(( 
$str)) 
;)) 
public** 
const** 
string** 

EmptyChest** 
=**  !
$str++ 
+++ 
$str++ 
+++ 
$str,, 
+,, 
$str,, 
+,, 
$str-- 
+-- 
$str-- 
+-- 
$str.. 
;.. 
public// 
const// 
string// 
Water// 
=// 
$str00 
+00 
$str00 
+00 
$str11 
+11 
$str11 
+11 
$str22 
+22 
$str22 
+22 
$str33 
;33 
public44 
const44 
string44 
	Wall_000044 
=44  
$str55 
+55 
$str55 
+55 
$str66 
+66 
$str66 
+66 
$str77 
+77 
$str77 
+77 
$str88 
;88 
public99 
const99 
string99 
	Wall_000199 
=99  
$str:: 
+:: 
$str:: 
+:: 
$str;; 
+;; 
$str;; 
+;; 
$str<< 
+<< 
$str<< 
+<< 
$str== 
;== 
public>> 
const>> 
string>> 
	Wall_0010>> 
=>>  
$str?? 
+?? 
$str?? 
+?? 
$str@@ 
+@@ 
$str@@ 
+@@ 
$strAA 
+AA 
$strAA 
+AA 
$strBB 
;BB 
publicCC 
constCC 
stringCC 
	Wall_0011CC 
=CC  
$strDD 
+DD 
$strDD 
+DD 
$strEE 
+EE 
$strEE 
+EE 
$strFF 
+FF 
$strFF 
+FF 
$strGG 
;GG 
publicHH 
constHH 
stringHH 
	Wall_0100HH 
=HH  
$strII 
+II 
$strII 
+II 
$strJJ 
+JJ 
$strJJ 
+JJ 
$strKK 
+KK 
$strKK 
+KK 
$strLL 
;LL 
publicMM 
constMM 
stringMM 
	Wall_0101MM 
=MM  
$strNN 
+NN 
$strNN 
+NN 
$strOO 
+OO 
$strOO 
+OO 
$strPP 
+PP 
$strPP 
+PP 
$strQQ 
;QQ 
publicRR 
constRR 
stringRR 
	Wall_0110RR 
=RR  
$strSS 
+SS 
$strSS 
+SS 
$strTT 
+TT 
$strTT 
+TT 
$strUU 
+UU 
$strUU 
+UU 
$strVV 
;VV 
publicWW 
constWW 
stringWW 
	Wall_0111WW 
=WW  
$strXX 
+XX 
$strXX 
+XX 
$strYY 
+YY 
$strYY 
+YY 
$strZZ 
+ZZ 
$strZZ 
+ZZ 
$str[[ 
;[[ 
public\\ 
const\\ 
string\\ 
	Wall_1000\\ 
=\\  
$str]] 
+]] 
$str]] 
+]] 
$str^^ 
+^^ 
$str^^ 
+^^ 
$str__ 
+__ 
$str__ 
+__ 
$str`` 
;`` 
publicaa 
constaa 
stringaa 
	Wall_1001aa 
=aa  
$strbb 
+bb 
$strbb 
+bb 
$strcc 
+cc 
$strcc 
+cc 
$strdd 
+dd 
$strdd 
+dd 
$stree 
;ee 
publicff 
constff 
stringff 
	Wall_1010ff 
=ff  
$strgg 
+gg 
$strgg 
+gg 
$strhh 
+hh 
$strhh 
+hh 
$strii 
+ii 
$strii 
+ii 
$strjj 
;jj 
publickk 
constkk 
stringkk 
	Wall_1011kk 
=kk  
$strll 
+ll 
$strll 
+ll 
$strmm 
+mm 
$strmm 
+mm 
$strnn 
+nn 
$strnn 
+nn 
$stroo 
;oo 
publicpp 
constpp 
stringpp 
	Wall_1100pp 
=pp  
$strqq 
+qq 
$strqq 
+qq 
$strrr 
+rr 
$strrr 
+rr 
$strss 
+ss 
$strss 
+ss 
$strtt 
;tt 
publicuu 
constuu 
stringuu 
	Wall_1101uu 
=uu  
$strvv 
+vv 
$strvv 
+vv 
$strww 
+ww 
$strww 
+ww 
$strxx 
+xx 
$strxx 
+xx 
$stryy 
;yy 
publiczz 
constzz 
stringzz 
	Wall_1110zz 
=zz  
$str{{ 
+{{ 
$str{{ 
+{{ 
$str|| 
+|| 
$str|| 
+|| 
$str}} 
+}} 
$str}} 
+}} 
$str~~ 
;~~ 
public 
const 
string 
	Wall_1111 
=  
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
;
 
public
 
const
 
string
 
Gate
 
=
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
;
 
public
 
const
 
string
 
Tree
 
=
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
;
 
public
 
const
 
string
 
Tree2
 
=
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
;
 
public
 
const
 
string
 
Barrels1
 
=
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
;
 
public
 
const
 
string
 
Barrels2
 
=
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
;
 
public
 
const
 
string
 
Barrels3
 
=
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
 
+
 
$str
   
+
   
$str
   
+
   
$str
¡¡ 
;
¡¡ 
public
¢¢ 
const
¢¢ 
string
¢¢ 
Fence
¢¢ 
=
¢¢ 
$str
££ 
+
££ 
$str
££ 
+
££ 
$str
¤¤ 
+
¤¤ 
$str
¤¤ 
+
¤¤ 
$str
¥¥ 
+
¥¥ 
$str
¥¥ 
+
¥¥ 
$str
¦¦ 
;
¦¦ 
public
§§ 
const
§§ 
string
§§ 
	ArrowDown
§§ 
=
§§  
$str
¨¨ 
+
¨¨ 
$str
¨¨ 
+
¨¨ 
$str
©© 
+
©© 
$str
©© 
+
©© 
$str
ªª 
+
ªª 
$str
ªª 
+
ªª 
$str
«« 
;
«« 
public
¬¬ 
const
¬¬ 
string
¬¬ 
ArrowUp
¬¬ 
=
¬¬ 
$str
­­ 
+
­­ 
$str
­­ 
+
­­ 
$str
®® 
+
®® 
$str
®® 
+
®® 
$str
¯¯ 
+
¯¯ 
$str
¯¯ 
+
¯¯ 
$str
°° 
;
°° 
public
±± 
const
±± 
string
±± 
	Mountains
±± 
=
±±  
$str
²² 
+
²² 
$str
²² 
+
²² 
$str
³³ 
+
³³ 
$str
³³ 
+
³³ 
$str
´´ 
+
´´ 
$str
´´ 
+
´´ 
$str
µµ 
;
µµ 
public
¶¶ 
const
¶¶ 
string
¶¶ 
Mountain
¶¶ 
=
¶¶ 
$str
·· 
+
·· 
$str
·· 
+
·· 
$str
¸¸ 
+
¸¸ 
$str
¸¸ 
+
¸¸ 
$str
¹¹ 
+
¹¹ 
$str
¹¹ 
+
¹¹ 
$str
ºº 
;
ºº 
public
»» 
const
»» 
string
»» 
	Mountain2
»» 
=
»»  
$str
¼¼ 
+
¼¼ 
$str
¼¼ 
+
¼¼ 
$str
½½ 
+
½½ 
$str
½½ 
+
½½ 
$str
¾¾ 
+
¾¾ 
$str
¾¾ 
+
¾¾ 
$str
¿¿ 
;
¿¿ 
public
ÀÀ 
const
ÀÀ 
string
ÀÀ 
	Mountain3
ÀÀ 
=
ÀÀ  
$str
ÁÁ 
+
ÁÁ 
$str
ÁÁ 
+
ÁÁ 
$str
ÂÂ 
+
ÂÂ 
$str
ÂÂ 
+
ÂÂ 
$str
ÃÃ 
+
ÃÃ 
$str
ÃÃ 
+
ÃÃ 
$str
ÄÄ 
;
ÄÄ 
public
ÅÅ 
const
ÅÅ 
string
ÅÅ 
Guard
ÅÅ 
=
ÅÅ 
$str
ÆÆ 
+
ÆÆ 
$str
ÆÆ 
+
ÆÆ 
$str
ÇÇ 
+
ÇÇ 
$str
ÇÇ 
+
ÇÇ 
$str
ÈÈ 
+
ÈÈ 
$str
ÈÈ 
+
ÈÈ 
$str
ÉÉ 
;
ÉÉ 
public
ÊÊ 
const
ÊÊ 
string
ÊÊ 
King
ÊÊ 
=
ÊÊ 
$str
ËË 
+
ËË 
$str
ËË 
+
ËË 
$str
ÌÌ 
+
ÌÌ 
$str
ÌÌ 
+
ÌÌ 
$str
ÍÍ 
+
ÍÍ 
$str
ÍÍ 
+
ÍÍ 
$str
ÎÎ 
;
ÎÎ 
public
ÏÏ 
const
ÏÏ 
string
ÏÏ 
Error
ÏÏ 
=
ÏÏ 
$str
ÐÐ 
+
ÐÐ 
$str
ÐÐ 
+
ÐÐ 
$str
ÑÑ 
+
ÑÑ 
$str
ÑÑ 
+
ÑÑ 
$str
ÒÒ 
+
ÒÒ 
$str
ÒÒ 
+
ÒÒ 
$str
ÓÓ 
;
ÓÓ 
public
ÕÕ 
static
ÕÕ 
readonly
ÕÕ 
string
ÕÕ 
[
ÕÕ 
]
ÕÕ  
RunRight
ÕÕ! )
=
ÕÕ* +
new
ÕÕ, /
[
ÕÕ/ 0
]
ÕÕ0 1
{
ÖÖ 
$str
ØØ 
+
ØØ 
$char
ØØ 
+
ØØ 
$str
ÙÙ 
+
ÙÙ 
$char
ÙÙ 
+
ÙÙ 
$str
ÚÚ 
+
ÚÚ 
$char
ÚÚ 
+
ÚÚ 
$str
ÛÛ 
,
ÛÛ 
$str
ÝÝ 
+
ÝÝ 
$char
ÝÝ 
+
ÝÝ 
$str
ÞÞ 
+
ÞÞ 
$char
ÞÞ 
+
ÞÞ 
$str
ßß 
+
ßß 
$char
ßß 
+
ßß 
$str
àà 
,
àà 
$str
ââ 
+
ââ 
$char
ââ 
+
ââ 
$str
ãã 
+
ãã 
$char
ãã 
+
ãã 
$str
ää 
+
ää 
$char
ää 
+
ää 
$str
åå 
,
åå 
$str
çç 
+
çç 
$char
çç 
+
çç 
$str
èè 
+
èè 
$char
èè 
+
èè 
$str
éé 
+
éé 
$char
éé 
+
éé 
$str
êê 
,
êê 
$str
ìì 
+
ìì 
$char
ìì 
+
ìì 
$str
íí 
+
íí 
$char
íí 
+
íí 
$str
îî 
+
îî 
$char
îî 
+
îî 
$str
ïï 
,
ïï 
$str
ññ 
+
ññ 
$char
ññ 
+
ññ 
$str
òò 
+
òò 
$char
òò 
+
òò 
$str
óó 
+
óó 
$char
óó 
+
óó 
$str
ôô 
,
ôô 
$str
öö 
+
öö 
$char
öö 
+
öö 
$str
÷÷ 
+
÷÷ 
$char
÷÷ 
+
÷÷ 
$str
øø 
+
øø 
$char
øø 
+
øø 
$str
ùù 
,
ùù 
}
úú 
;
úú 
public
üü 
static
üü 
readonly
üü 
string
üü 
[
üü 
]
üü  
RunLeft
üü! (
=
üü) *
new
üü+ .
[
üü. /
]
üü/ 0
{
ýý 
$str
ÿÿ 
+
ÿÿ 
$char
ÿÿ 
+
ÿÿ 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
   
,
   
}
¡¡ 
;
¡¡ 
public
¥¥ 
static
¥¥ 
readonly
¥¥ 
string
¥¥ 
[
¥¥ 
]
¥¥  
RunDown
¥¥! (
=
¥¥) *
(
¥¥+ ,
string
¥¥, 2
[
¥¥2 3
]
¥¥3 4
)
¥¥4 5
RunRight
¥¥5 =
.
¥¥= >
Clone
¥¥> C
(
¥¥C D
)
¥¥D E
;
¥¥E F
public
¦¦ 
static
¦¦ 
readonly
¦¦ 
string
¦¦ 
[
¦¦ 
]
¦¦  
RunUp
¦¦! &
=
¦¦) *
(
¦¦+ ,
string
¦¦, 2
[
¦¦2 3
]
¦¦3 4
)
¦¦4 5
RunLeft
¦¦5 <
.
¦¦< =
Clone
¦¦= B
(
¦¦B C
)
¦¦C D
;
¦¦D E
public
¨¨ 
static
¨¨ 
readonly
¨¨ 
string
¨¨ 
	IdleLeft1
¨¨ (
=
¨¨) *
$str
©© 
+
©© 
$char
©© 
+
©© 
$str
ªª 
+
ªª 
$char
ªª 
+
ªª 
$str
«« 
+
«« 
$char
«« 
+
«« 
$str
¬¬ 
;
¬¬ 
public
®® 
static
®® 
readonly
®® 
string
®® 
	IdleLeft2
®® (
=
®®) *
$str
¯¯ 
+
¯¯ 
$char
¯¯ 
+
¯¯ 
$str
°° 
+
°° 
$char
°° 
+
°° 
$str
±± 
+
±± 
$char
±± 
+
±± 
$str
²² 
;
²² 
public
´´ 
static
´´ 
readonly
´´ 
string
´´ 
[
´´ 
]
´´  
IdleLeft
´´! )
=
´´* +

Enumerable
µµ 
.
µµ 
Repeat
µµ 
(
µµ 
	IdleLeft1
µµ 
,
µµ 
$num
µµ !
)
µµ! "
.
µµ" #
Concat
µµ# )
(
µµ) *

Enumerable
µµ* 4
.
µµ4 5
Repeat
µµ5 ;
(
µµ; <
	IdleLeft2
µµ< E
,
µµE F
$num
µµG I
)
µµI J
)
µµJ K
.
µµK L
ToArray
µµL S
(
µµS T
)
µµT U
;
µµU V
public
·· 
static
·· 
readonly
·· 
string
·· 

IdleRight1
·· )
=
··* +
$str
¸¸ 
+
¸¸ 
$char
¸¸ 
+
¸¸ 
$str
¹¹ 
+
¹¹ 
$char
¹¹ 
+
¹¹ 
$str
ºº 
+
ºº 
$char
ºº 
+
ºº 
$str
»» 
;
»» 
public
½½ 
static
½½ 
readonly
½½ 
string
½½ 

IdleRight2
½½ )
=
½½* +
$str
¾¾ 
+
¾¾ 
$char
¾¾ 
+
¾¾ 
$str
¿¿ 
+
¿¿ 
$char
¿¿ 
+
¿¿ 
$str
ÀÀ 
+
ÀÀ 
$char
ÀÀ 
+
ÀÀ 
$str
ÁÁ 
;
ÁÁ 
public
ÃÃ 
static
ÃÃ 
readonly
ÃÃ 
string
ÃÃ 
[
ÃÃ 
]
ÃÃ  
	IdleRight
ÃÃ! *
=
ÃÃ+ ,

Enumerable
ÄÄ 
.
ÄÄ 
Repeat
ÄÄ 
(
ÄÄ 

IdleRight1
ÄÄ 
,
ÄÄ 
$num
ÄÄ  "
)
ÄÄ" #
.
ÄÄ# $
Concat
ÄÄ$ *
(
ÄÄ* +

Enumerable
ÄÄ+ 5
.
ÄÄ5 6
Repeat
ÄÄ6 <
(
ÄÄ< =

IdleRight2
ÄÄ= G
,
ÄÄG H
$num
ÄÄI K
)
ÄÄK L
)
ÄÄL M
.
ÄÄM N
ToArray
ÄÄN U
(
ÄÄU V
)
ÄÄV W
;
ÄÄW X
public
ÈÈ 
static
ÈÈ 
readonly
ÈÈ 
string
ÈÈ 
[
ÈÈ 
]
ÈÈ  
IdleDown
ÈÈ! )
=
ÈÈ* +
(
ÈÈ, -
string
ÈÈ- 3
[
ÈÈ3 4
]
ÈÈ4 5
)
ÈÈ5 6
	IdleRight
ÈÈ6 ?
.
ÈÈ? @
Clone
ÈÈ@ E
(
ÈÈE F
)
ÈÈF G
;
ÈÈG H
public
ÉÉ 
static
ÉÉ 
readonly
ÉÉ 
string
ÉÉ 
[
ÉÉ 
]
ÉÉ  
IdleUp
ÉÉ! '
=
ÉÉ* +
(
ÉÉ, -
string
ÉÉ- 3
[
ÉÉ3 4
]
ÉÉ4 5
)
ÉÉ5 6
IdleLeft
ÉÉ6 >
.
ÉÉ> ?
Clone
ÉÉ? D
(
ÉÉD E
)
ÉÉE F
;
ÉÉF G
public
ËË 
static
ËË 
readonly
ËË 
string
ËË 
[
ËË 
]
ËË  
FallLeft
ËË! )
=
ËË* +
new
ËË, /
string
ËË0 6
[
ËË6 7
]
ËË7 8
{
ÌÌ 
$str
ÎÎ 
+
ÎÎ 
$char
ÎÎ 
+
ÎÎ 
$str
ÏÏ 
+
ÏÏ 
$char
ÏÏ 
+
ÏÏ 
$str
ÐÐ 
+
ÐÐ 
$char
ÐÐ 
+
ÐÐ 
$str
ÑÑ 
,
ÑÑ 
$str
ÓÓ 
+
ÓÓ 
$char
ÓÓ 
+
ÓÓ 
$str
ÔÔ 
+
ÔÔ 
$char
ÔÔ 
+
ÔÔ 
$str
ÕÕ 
+
ÕÕ 
$char
ÕÕ 
+
ÕÕ 
$str
ÖÖ 
,
ÖÖ 
$str
ØØ 
+
ØØ 
$char
ØØ 
+
ØØ 
$str
ÙÙ 
+
ÙÙ 
$char
ÙÙ 
+
ÙÙ 
$str
ÚÚ 
+
ÚÚ 
$char
ÚÚ 
+
ÚÚ 
$str
ÛÛ 
,
ÛÛ 
$str
ÝÝ 
+
ÝÝ 
$char
ÝÝ 
+
ÝÝ 
$str
ÞÞ 
+
ÞÞ 
$char
ÞÞ 
+
ÞÞ 
$str
ßß 
+
ßß 
$char
ßß 
+
ßß 
$str
àà 
,
àà 
$str
ââ 
+
ââ 
$char
ââ 
+
ââ 
$str
ãã 
+
ãã 
$char
ãã 
+
ãã 
$str
ää 
+
ää 
$char
ää 
+
ää 
$str
åå 
,
åå 
$str
çç 
+
çç 
$char
çç 
+
çç 
$str
èè 
+
èè 
$char
èè 
+
èè 
$str
éé 
+
éé 
$char
éé 
+
éé 
$str
êê 
,
êê 
$str
ìì 
+
ìì 
$char
ìì 
+
ìì 
$str
íí 
+
íí 
$char
íí 
+
íí 
$str
îî 
+
îî 
$char
îî 
+
îî 
$str
ïï 
,
ïï 
$str
ññ 
+
ññ 
$char
ññ 
+
ññ 
$str
òò 
+
òò 
$char
òò 
+
òò 
$str
óó 
+
óó 
$char
óó 
+
óó 
$str
ôô 
,
ôô 
}
õõ 
;
õõ 
public
÷÷ 
static
÷÷ 
readonly
÷÷ 
string
÷÷ 
[
÷÷ 
]
÷÷  

PunchRight
÷÷! +
=
÷÷, -
new
÷÷. 1
string
÷÷2 8
[
÷÷8 9
]
÷÷9 :
{
øø 
$str
úú 
+
úú 
$char
úú 
+
úú 
$str
ûû 
+
ûû 
$char
ûû 
+
ûû 
$str
üü 
+
üü 
$char
üü 
+
üü 
$str
ýý 
,
ýý 
$str
ÿÿ 
+
ÿÿ 
$char
ÿÿ 
+
ÿÿ 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
   
,
   
$str
¢¢ 
+
¢¢ 
$char
¢¢ 
+
¢¢ 
$str
££ 
+
££ 
$char
££ 
+
££ 
$str
¤¤ 
+
¤¤ 
$char
¤¤ 
+
¤¤ 
$str
¥¥ 
,
¥¥ 
$str
§§ 
+
§§ 
$char
§§ 
+
§§ 
$str
¨¨ 
+
¨¨ 
$char
¨¨ 
+
¨¨ 
$str
©© 
+
©© 
$char
©© 
+
©© 
$str
ªª 
,
ªª 
$str
¬¬ 
+
¬¬ 
$char
¬¬ 
+
¬¬ 
$str
­­ 
+
­­ 
$char
­­ 
+
­­ 
$str
®® 
+
®® 
$char
®® 
+
®® 
$str
¯¯ 
,
¯¯ 
}
°° 
;
°° 
public
²² 
static
²² 
readonly
²² 
string
²² 
[
²² 
]
²²  
IdleBoar
²²! )
=
²²* +
new
²², /
[
²²/ 0
]
²²0 1
{
³³ 
$str
µµ 
+
µµ 
$char
µµ 
+
µµ 
$str
¶¶ 
+
¶¶ 
$char
¶¶ 
+
¶¶ 
$str
·· 
+
·· 
$char
·· 
+
·· 
$str
¸¸ 
,
¸¸ 
$str
ºº 
+
ºº 
$char
ºº 
+
ºº 
$str
»» 
+
»» 
$char
»» 
+
»» 
$str
¼¼ 
+
¼¼ 
$char
¼¼ 
+
¼¼ 
$str
½½ 
,
½½ 
$str
¿¿ 
+
¿¿ 
$char
¿¿ 
+
¿¿ 
$str
ÀÀ 
+
ÀÀ 
$char
ÀÀ 
+
ÀÀ 
$str
ÁÁ 
+
ÁÁ 
$char
ÁÁ 
+
ÁÁ 
$str
ÂÂ 
,
ÂÂ 
$str
ÄÄ 
+
ÄÄ 
$char
ÄÄ 
+
ÄÄ 
$str
ÅÅ 
+
ÅÅ 
$char
ÅÅ 
+
ÅÅ 
$str
ÆÆ 
+
ÆÆ 
$char
ÆÆ 
+
ÆÆ 
$str
ÇÇ 
,
ÇÇ 
$str
ÉÉ 
+
ÉÉ 
$char
ÉÉ 
+
ÉÉ 
$str
ÊÊ 
+
ÊÊ 
$char
ÊÊ 
+
ÊÊ 
$str
ËË 
+
ËË 
$char
ËË 
+
ËË 
$str
ÌÌ 
,
ÌÌ 
$str
ÎÎ 
+
ÎÎ 
$char
ÎÎ 
+
ÎÎ 
$str
ÏÏ 
+
ÏÏ 
$char
ÏÏ 
+
ÏÏ 
$str
ÐÐ 
+
ÐÐ 
$char
ÐÐ 
+
ÐÐ 
$str
ÑÑ 
,
ÑÑ 
$str
ÓÓ 
+
ÓÓ 
$char
ÓÓ 
+
ÓÓ 
$str
ÔÔ 
+
ÔÔ 
$char
ÔÔ 
+
ÔÔ 
$str
ÕÕ 
+
ÕÕ 
$char
ÕÕ 
+
ÕÕ 
$str
ÖÖ 
,
ÖÖ 
$str
ØØ 
+
ØØ 
$char
ØØ 
+
ØØ 
$str
ÙÙ 
+
ÙÙ 
$char
ÙÙ 
+
ÙÙ 
$str
ÚÚ 
+
ÚÚ 
$char
ÚÚ 
+
ÚÚ 
$str
ÛÛ 
,
ÛÛ 
$str
ÝÝ 
+
ÝÝ 
$char
ÝÝ 
+
ÝÝ 
$str
ÞÞ 
+
ÞÞ 
$char
ÞÞ 
+
ÞÞ 
$str
ßß 
+
ßß 
$char
ßß 
+
ßß 
$str
àà 
,
àà 
$str
ââ 
+
ââ 
$char
ââ 
+
ââ 
$str
ãã 
+
ãã 
$char
ãã 
+
ãã 
$str
ää 
+
ää 
$char
ää 
+
ää 
$str
åå 
,
åå 
$str
çç 
+
çç 
$char
çç 
+
çç 
$str
èè 
+
èè 
$char
èè 
+
èè 
$str
éé 
+
éé 
$char
éé 
+
éé 
$str
êê 
,
êê 
$str
ìì 
+
ìì 
$char
ìì 
+
ìì 
$str
íí 
+
íí 
$char
íí 
+
íí 
$str
îî 
+
îî 
$char
îî 
+
îî 
$str
ïï 
,
ïï 
$str
ññ 
+
ññ 
$char
ññ 
+
ññ 
$str
òò 
+
òò 
$char
òò 
+
òò 
$str
óó 
+
óó 
$char
óó 
+
óó 
$str
ôô 
,
ôô 
$str
öö 
+
öö 
$char
öö 
+
öö 
$str
÷÷ 
+
÷÷ 
$char
÷÷ 
+
÷÷ 
$str
øø 
+
øø 
$char
øø 
+
øø 
$str
ùù 
,
ùù 
$str
ûû 
+
ûû 
$char
ûû 
+
ûû 
$str
üü 
+
üü 
$char
üü 
+
üü 
$str
ýý 
+
ýý 
$char
ýý 
+
ýý 
$str
þþ 
,
þþ 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
   
+
   
$char
   
+
   
$str
¡¡ 
,
¡¡ 
$str
££ 
+
££ 
$char
££ 
+
££ 
$str
¤¤ 
+
¤¤ 
$char
¤¤ 
+
¤¤ 
$str
¥¥ 
+
¥¥ 
$char
¥¥ 
+
¥¥ 
$str
¦¦ 
,
¦¦ 
$str
¨¨ 
+
¨¨ 
$char
¨¨ 
+
¨¨ 
$str
©© 
+
©© 
$char
©© 
+
©© 
$str
ªª 
+
ªª 
$char
ªª 
+
ªª 
$str
«« 
,
«« 
$str
­­ 
+
­­ 
$char
­­ 
+
­­ 
$str
®® 
+
®® 
$char
®® 
+
®® 
$str
¯¯ 
+
¯¯ 
$char
¯¯ 
+
¯¯ 
$str
°° 
,
°° 
$str
²² 
+
²² 
$char
²² 
+
²² 
$str
³³ 
+
³³ 
$char
³³ 
+
³³ 
$str
´´ 
+
´´ 
$char
´´ 
+
´´ 
$str
µµ 
,
µµ 
$str
·· 
+
·· 
$char
·· 
+
·· 
$str
¸¸ 
+
¸¸ 
$char
¸¸ 
+
¸¸ 
$str
¹¹ 
+
¹¹ 
$char
¹¹ 
+
¹¹ 
$str
ºº 
,
ºº 
$str
¼¼ 
+
¼¼ 
$char
¼¼ 
+
¼¼ 
$str
½½ 
+
½½ 
$char
½½ 
+
½½ 
$str
¾¾ 
+
¾¾ 
$char
¾¾ 
+
¾¾ 
$str
¿¿ 
,
¿¿ 
}
ÀÀ 
;
ÀÀ 
public
ÂÂ 
static
ÂÂ 
readonly
ÂÂ 
string
ÂÂ 
[
ÂÂ 
]
ÂÂ  !
GetUpAnimationRight
ÂÂ! 4
=
ÂÂ5 6
new
ÂÂ7 :
string
ÂÂ; A
[
ÂÂA B
]
ÂÂB C
{
ÃÃ 
$str
ÅÅ 
+
ÅÅ 
$char
ÅÅ 
+
ÅÅ 
$str
ÆÆ 
+
ÆÆ 
$char
ÆÆ 
+
ÆÆ 
$str
ÇÇ 
+
ÇÇ 
$char
ÇÇ 
+
ÇÇ 
$str
ÈÈ 
,
ÈÈ 
$str
ÊÊ 
+
ÊÊ 
$char
ÊÊ 
+
ÊÊ 
$str
ËË 
+
ËË 
$char
ËË 
+
ËË 
$str
ÌÌ 
+
ÌÌ 
$char
ÌÌ 
+
ÌÌ 
$str
ÍÍ 
,
ÍÍ 
$str
ÏÏ 
+
ÏÏ 
$char
ÏÏ 
+
ÏÏ 
$str
ÐÐ 
+
ÐÐ 
$char
ÐÐ 
+
ÐÐ 
$str
ÑÑ 
+
ÑÑ 
$char
ÑÑ 
+
ÑÑ 
$str
ÒÒ 
,
ÒÒ 
$str
ÔÔ 
+
ÔÔ 
$char
ÔÔ 
+
ÔÔ 
$str
ÕÕ 
+
ÕÕ 
$char
ÕÕ 
+
ÕÕ 
$str
ÖÖ 
+
ÖÖ 
$char
ÖÖ 
+
ÖÖ 
$str
×× 
,
×× 
$str
ÙÙ 
+
ÙÙ 
$char
ÙÙ 
+
ÙÙ 
$str
ÚÚ 
+
ÚÚ 
$char
ÚÚ 
+
ÚÚ 
$str
ÛÛ 
+
ÛÛ 
$char
ÛÛ 
+
ÛÛ 
$str
ÜÜ 
,
ÜÜ 
$str
ÞÞ 
+
ÞÞ 
$char
ÞÞ 
+
ÞÞ 
$str
ßß 
+
ßß 
$char
ßß 
+
ßß 
$str
àà 
+
àà 
$char
àà 
+
àà 
$str
áá 
,
áá 
$str
ãã 
+
ãã 
$char
ãã 
+
ãã 
$str
ää 
+
ää 
$char
ää 
+
ää 
$str
åå 
+
åå 
$char
åå 
+
åå 
$str
ææ 
,
ææ 
$str
èè 
+
èè 
$char
èè 
+
èè 
$str
éé 
+
éé 
$char
éé 
+
éé 
$str
êê 
+
êê 
$char
êê 
+
êê 
$str
ëë 
,
ëë 
$str
íí 
+
íí 
$char
íí 
+
íí 
$str
îî 
+
îî 
$char
îî 
+
îî 
$str
ïï 
+
ïï 
$char
ïï 
+
ïï 
$str
ðð 
,
ðð 
$str
òò 
+
òò 
$char
òò 
+
òò 
$str
óó 
+
óó 
$char
óó 
+
óó 
$str
ôô 
+
ôô 
$char
ôô 
+
ôô 
$str
õõ 
,
õõ 
$str
÷÷ 
+
÷÷ 
$char
÷÷ 
+
÷÷ 
$str
øø 
+
øø 
$char
øø 
+
øø 
$str
ùù 
+
ùù 
$char
ùù 
+
ùù 
$str
úú 
,
úú 
$str
üü 
+
üü 
$char
üü 
+
üü 
$str
ýý 
+
ýý 
$char
ýý 
+
ýý 
$str
þþ 
+
þþ 
$char
þþ 
+
þþ 
$str
ÿÿ 
,
ÿÿ 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
+
 
$char
 
+
 
$str
 
,
 
}
 
;
 
} 