¯Î
TC:\ProgramData\Jenkins\.jenkins\workspace\GamePipeline\Projects\Connect 4\Program.cs
	Exception 	
?	 

	exception 
= 
null 
; 
bool 
? 
[ 
, 
] 
board	 
= 
new 
bool 
? 
[ 
$num 
, 
$num 
]  
;  !
bool 
player1Turn 
; 
bool 
player1MovesFirst 
= 
true 
; 
Random		 
random		 
=		 
new		 
(		 
)		 
;		 
const 
int 	
moveMinI
 
= 
$num 
; 
const 
int 	
moveJ
 
= 
$num 
; 
try 
{ 
Console 
. 	
CursorVisible	 
= 
false 
; 
	PlayAgain 	
:	 

player1Turn 
= 
player1MovesFirst  
;  !
player1MovesFirst 
= 
! 
player1MovesFirst '
;' (

ResetBoard 
( 
) 
; 
while 
( 
true 
) 
{ 
( 
int 
I 
, 	
int
 
J 
) 
move 
= 
default 
;  
if 
( 
player1Turn 
) 
{ 
RenderBoard 
( 
) 
; 
int 
i 
=	 

$num 
; 
Console 

.
 
SetCursorPosition 
( 
moveMinI %
,% &
moveJ' ,
), -
;- .
Console 

.
 
Write 
( 
$char 
) 
; 
GetPlayerInput 
: 
switch 	
(
 
Console 
. 
ReadKey 
( 
true 
)  
.  !
Key! $
)$ %
{   
case!! 

ConsoleKey!!	 
.!! 
	LeftArrow!! 
:!! 
Console"" 
."" 
SetCursorPosition"" 
("" 
i""  
*""! "
$num""# $
+""% &
moveMinI""' /
,""/ 0
moveJ""1 6
)""6 7
;""7 8
Console## 
.## 
Write## 
(## 
$char## 
)## 
;## 
i$$ 
=$$ 
Math$$	 
.$$ 
Max$$ 
($$ 
$num$$ 
,$$ 
i$$ 
-$$ 
$num$$ 
)$$ 
;$$ 
Console%% 
.%% 
SetCursorPosition%% 
(%% 
i%%  
*%%! "
$num%%# $
+%%% &
moveMinI%%' /
,%%/ 0
moveJ%%1 6
)%%6 7
;%%7 8
Console&& 
.&& 
Write&& 
(&& 
$char&& 
)&& 
;&& 
goto'' 	
GetPlayerInput''
 
;'' 
case(( 

ConsoleKey((	 
.(( 

RightArrow(( 
:(( 
Console)) 
.)) 
SetCursorPosition)) 
()) 
i))  
*))! "
$num))# $
+))% &
moveMinI))' /
,))/ 0
moveJ))1 6
)))6 7
;))7 8
Console** 
.** 
Write** 
(** 
$char** 
)** 
;** 
i++ 
=++ 
Math++	 
.++ 
Min++ 
(++ 
board++ 
.++ 
	GetLength++ !
(++! "
$num++" #
)++# $
-++% &
$num++' (
,++( )
i++* +
+++, -
$num++. /
)++/ 0
;++0 1
Console,, 
.,, 
SetCursorPosition,, 
(,, 
i,,  
*,,! "
$num,,# $
+,,% &
moveMinI,,' /
,,,/ 0
moveJ,,1 6
),,6 7
;,,7 8
Console-- 
.-- 
Write-- 
(-- 
$char-- 
)-- 
;-- 
goto.. 	
GetPlayerInput..
 
;.. 
case// 

ConsoleKey//	 
.// 
Enter// 
:// 
if00 
(00 	
board00	 
[00 
i00 
,00 
board00 
.00 
	GetLength00 !
(00! "
$num00" #
)00# $
-00% &
$num00' (
]00( )
!=00* ,
null00- 1
)001 2
{11 
goto22 

GetPlayerInput22 
;22 
}33 
for44 
(44	 

int44
 
j44 
=44 
board44 
.44 
	GetLength44 !
(44! "
$num44" #
)44# $
-44% &
$num44' (
;44( )
;44* +
j44, -
--44- /
)44/ 0
{55 
if66 
(66	 

j66
 
is66 
$num66 
||66 
board66 
[66 
i66 
,66 
j66 
-66  
$num66! "
]66" #
.66# $
HasValue66$ ,
)66, -
{77 
board88 
[88 
i88 
,88 
j88 
]88 
=88 
true88 
;88 
move99 
=99 
(99 
i99 
,99 
j99 
)99 
;99 
break:: 
;:: 
};; 
}<< 
break== 

;==
 
case>> 

ConsoleKey>>	 
.>> 
Escape>> 
:>> 
Console?? 
.?? 
Clear?? 
(?? 
)?? 
;?? 
return@@ 
;@@ 
defaultAA 
:AA 
gotoAA 
GetPlayerInputAA  
;AA  !
}BB 
ifCC 
(CC 
	CheckFor4CC 
(CC 
moveCC 
.CC 
ICC 
,CC 
moveCC 
.CC 
JCC 
)CC  
)CC  !
{DD 
RenderBoardEE 
(EE 
)EE 
;EE 
ConsoleFF 
.FF 
	WriteLineFF 
(FF 
)FF 
;FF 
ConsoleGG 
.GG 
	WriteLineGG 
(GG 
$strGG #
)GG# $
;GG$ %
gotoHH 
PlayAgainCheckHH	 
;HH 
}II 
}JJ 
elseKK 
{LL 
intMM 
[MM 
]MM 
movesMM	 
=MM 

EnumerableMM 
.MM 
RangeMM !
(MM! "
$numMM" #
,MM# $
boardMM% *
.MM* +
	GetLengthMM+ 4
(MM4 5
$numMM5 6
)MM6 7
)MM7 8
.MM8 9
WhereMM9 >
(MM> ?
iMM? @
=>MMA C
!MMD E
boardMME J
[MMJ K
iMMK L
,MML M
boardMMN S
.MMS T
	GetLengthMMT ]
(MM] ^
$numMM^ _
)MM_ `
-MMa b
$numMMc d
]MMd e
.MMe f
HasValueMMf n
)MMn o
.MMo p
ToArrayMMp w
(MMw x
)MMx y
;MMy z
intNN 

randomMoveNN 
=NN 
movesNN 
[NN 
randomNN  
.NN  !
NextNN! %
(NN% &
movesNN& +
.NN+ ,
LengthNN, 2
)NN2 3
]NN3 4
;NN4 5
forOO 
(OO 
intOO 
jOO 
=OO 
boardOO 
.OO 
	GetLengthOO 
(OO  
$numOO  !
)OO! "
-OO# $
$numOO% &
;OO& '
;OO( )
jOO* +
--OO+ -
)OO- .
{PP 
ifQQ 
(QQ 
jQQ 	
isQQ
 
$numQQ 
||QQ 
boardQQ 
[QQ 

randomMoveQQ "
,QQ" #
jQQ$ %
-QQ& '
$numQQ( )
]QQ) *
.QQ* +
HasValueQQ+ 3
)QQ3 4
{RR 
boardSS 

[SS
 

randomMoveSS 
,SS 
jSS 
]SS 
=SS 
falseSS !
;SS! "
moveTT 	
=TT
 
(TT 

randomMoveTT 
,TT 
jTT 
)TT 
;TT 
breakUU 

;UU
 
}VV 
}WW 
ifXX 
(XX 
	CheckFor4XX 
(XX 
moveXX 
.XX 
IXX 
,XX 
moveXX 
.XX 
JXX 
)XX  
)XX  !
{YY 
RenderBoardZZ 
(ZZ 
)ZZ 
;ZZ 
Console[[ 
.[[ 
	WriteLine[[ 
([[ 
)[[ 
;[[ 
Console\\ 
.\\ 
	WriteLine\\ 
(\\ 
$"\\ 
$str\\ $
"\\$ %
)\\% &
;\\& '
goto]] 
PlayAgainCheck]]	 
;]] 
}^^ 
}__ 
if`` 
(`` 
CheckForDraw`` 
(`` 
)`` 
)`` 
{aa 
RenderBoardbb 
(bb 
)bb 
;bb 
Consolecc 

.cc
 
	WriteLinecc 
(cc 
)cc 
;cc 
Consoledd 

.dd
 
	WriteLinedd 
(dd 
$"dd 
$strdd 
"dd  
)dd  !
;dd! "
gotoee 
PlayAgainCheckee 
;ee 
}ff 
elsegg 
{hh 
player1Turnii 
=ii 
!ii 
player1Turnii 
;ii 
}jj 
}kk 
PlayAgainCheckll 
:ll 
Consolemm 
.mm 	
	WriteLinemm	 
(mm 
$strmm =
)mm= >
;mm> ?
GetInputnn 
:nn 	
switchoo 
(oo 	
Consoleoo	 
.oo 
ReadKeyoo 
(oo 
trueoo 
)oo 
.oo 
Keyoo "
)oo" #
{pp 
caseqq 

ConsoleKeyqq 
.qq 
Enterqq 
:qq 
gotoqq 
	PlayAgainqq '
;qq' (
caserr 

ConsoleKeyrr 
.rr 
Escaperr 
:rr 
Consolerr !
.rr! "
Clearrr" '
(rr' (
)rr( )
;rr) *
returnrr+ 1
;rr1 2
defaultss 	
:ss	 

gotoss 
GetInputss 
;ss 
}tt 
}uu 
catchvv 
(vv 
	Exceptionvv 
evv 
)vv 
{ww 
	exceptionxx 

=xx 
exx 
;xx 
throwyy 
;yy 
}zz 
finally{{ 
{|| 
Console}} 
.}} 	
CursorVisible}}	 
=}} 
true}} 
;}} 
Console~~ 
.~~ 	
Clear~~	 
(~~ 
)~~ 
;~~ 
Console 
. 	
	WriteLine	 
( 
	exception 
? 
. 
ToString &
(& '
)' (
??) +
$str, C
)C D
;D E
} 
void 

ResetBoard
 
(
 
)
 
{ 
for
 
(
 
int
 	
i

 
=
 
$num
 
;
 
i
 
<
 
board
 
.
 
	GetLength
 $
(
$ %
$num
% &
)
& '
;
' (
i
) *
++
* ,
)
, -
{
 
for
 
(
 
int
 

j
 
=
 
$num
 
;
 
j
 
<
 
board
 
.
 
	GetLength
 %
(
% &
$num
& '
)
' (
;
( )
j
* +
++
+ -
)
- .
{
 
board
 
[
 	
i
	 

,

 
j
 
]
 
=
 
null
 
;
 
}
 
}
 
} 
void 
RenderBoard
 
(
 
)
 
{ 
Console
 
.
 	
Clear
	 
(
 
)
 
;
 
Console
 
.
 	
	WriteLine
	 
(
 
)
 
;
 
Console
 
.
 	
	WriteLine
	 
(
 
)
 
;
 
Console
 
.
 	
	WriteLine
	 
(
 
)
 
;
 
Console
 
.
 	
	WriteLine
	 
(
 
$str
 
+
 
new
 
string
  &
(
& '
$char
' *
,
* +
board
, 1
.
1 2
	GetLength
2 ;
(
; <
$num
< =
)
= >
*
? @
$num
A B
+
C D
$num
E F
)
F G
+
H I
$str
J M
)
M N
;
N O
Console
 
.
 	
Write
	 
(
 
$str
 
)
 
;
 
int
 
iOffset
 
=
 
Console
 
.
 

CursorLeft
 !
;
! "
int
 
jOffset
 
=
 
Console
 
.
 
	CursorTop
  
;
  !
Console
 
.
 	
	WriteLine
	 
(
 
new
 
string
 
(
 
$char
 !
,
! "
board
# (
.
( )
	GetLength
) 2
(
2 3
$num
3 4
)
4 5
*
6 7
$num
8 9
)
9 :
+
; <
$str
= @
)
@ A
;
A B
for
 
(
 
int
 	
j

 
=
 
$num
 
;
 
j
 
<
 
board
 
.
 
	GetLength
 $
(
$ %
$num
% &
)
& '
*
( )
$num
* +
;
+ ,
j
- .
++
. 0
)
0 1
{
 
Console
 	
.
	 

	WriteLine

 
(
 
$str
 
+
 
new
  
string
! '
(
' (
$char
( +
,
+ ,
board
- 2
.
2 3
	GetLength
3 <
(
< =
$num
= >
)
> ?
*
@ A
$num
B C
+
D E
$num
F G
)
G H
+
I J
$str
K N
)
N O
;
O P
}
 
Console
 
.
 	
	WriteLine
	 
(
 
$str
 
+
 
new
 
string
  &
(
& '
$char
' *
,
* +
board
, 1
.
1 2
	GetLength
2 ;
(
; <
$num
< =
)
= >
*
? @
$num
A B
+
C D
$num
E F
)
F G
+
H I
$str
J M
)
M N
;
N O
int
 
iFinal
 
=
 
Console
 
.
 

CursorLeft
  
;
  !
int
 
jFinal
 
=
 
Console
 
.
 
	CursorTop
 
;
  
for
 
(
 
int
 	
i

 
=
 
$num
 
;
 
i
 
<
 
board
 
.
 
	GetLength
 $
(
$ %
$num
% &
)
& '
;
' (
i
) *
++
* ,
)
, -
{
   
for
¡¡ 
(
¡¡ 
int
¡¡ 

j
¡¡ 
=
¡¡ 
$num
¡¡ 
;
¡¡ 
j
¡¡ 
<
¡¡ 
board
¡¡ 
.
¡¡ 
	GetLength
¡¡ %
(
¡¡% &
$num
¡¡& '
)
¡¡' (
;
¡¡( )
j
¡¡* +
++
¡¡+ -
)
¡¡- .
{
¢¢ 
Console
££ 

.
££
 
SetCursorPosition
££ 
(
££ 
i
££ 
*
££  
$num
££! "
+
££# $
iOffset
££% ,
,
££, -
(
££. /
board
££/ 4
.
££4 5
	GetLength
££5 >
(
££> ?
$num
££? @
)
££@ A
-
££B C
j
££D E
)
££E F
*
££G H
$num
££I J
+
££K L
jOffset
££M T
-
££U V
$num
££W X
)
££X Y
;
££Y Z
if
¤¤ 
(
¤¤ 
board
¤¤ 
[
¤¤ 
i
¤¤ 
,
¤¤ 
j
¤¤ 
]
¤¤ 
==
¤¤ 
true
¤¤ 
)
¤¤ 
{
¥¥ 
Console
¦¦ 
.
¦¦ 
ForegroundColor
¦¦ 
=
¦¦ 
ConsoleColor
¦¦ *
.
¦¦* +
Red
¦¦+ .
;
¦¦. /
Console
§§ 
.
§§ 
Write
§§ 
(
§§ 
$char
§§ 
)
§§ 
;
§§ 
Console
¨¨ 
.
¨¨ 

ResetColor
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
}
©© 
else
ªª 
if
ªª 

(
ªª 
board
ªª 
[
ªª 
i
ªª 
,
ªª 
j
ªª 
]
ªª 
==
ªª 
false
ªª  
)
ªª  !
{
«« 
Console
¬¬ 
.
¬¬ 
ForegroundColor
¬¬ 
=
¬¬ 
ConsoleColor
¬¬ *
.
¬¬* +
Blue
¬¬+ /
;
¬¬/ 0
Console
­­ 
.
­­ 
Write
­­ 
(
­­ 
$char
­­ 
)
­­ 
;
­­ 
Console
®® 
.
®® 

ResetColor
®® 
(
®® 
)
®® 
;
®® 
}
¯¯ 
else
°° 
{
±± 
Console
²² 
.
²² 

ResetColor
²² 
(
²² 
)
²² 
;
²² 
Console
³³ 
.
³³ 
Write
³³ 
(
³³ 
$char
³³ 
)
³³ 
;
³³ 
}
´´ 
}
µµ 
}
¶¶ 
Console
·· 
.
·· 	
SetCursorPosition
··	 
(
·· 
iFinal
·· !
,
··! "
jFinal
··# )
)
··) *
;
··* +
}¸¸ 
boolºº 
	CheckFor4
ºº 
(
ºº 
int
ºº 
i
ºº 
,
ºº 
int
ºº 
j
ºº 
)
ºº 
{»» 
bool
¼¼ 
player
¼¼ 
=
¼¼ 
board
¼¼ 
[
¼¼ 
i
¼¼ 
,
¼¼ 
j
¼¼ 
]
¼¼ 
!
¼¼ 
.
¼¼ 
Value
¼¼ !
;
¼¼! "
{
½½ 
int
¾¾ 
inARow
¾¾ 
=
¾¾ 
$num
¾¾ 
;
¾¾ 
for
¿¿ 
(
¿¿ 
int
¿¿ 

_i
¿¿ 
=
¿¿ 
$num
¿¿ 
;
¿¿ 
_i
¿¿ 
<
¿¿ 
board
¿¿ 
.
¿¿ 
	GetLength
¿¿ '
(
¿¿' (
$num
¿¿( )
)
¿¿) *
;
¿¿* +
_i
¿¿, .
++
¿¿. 0
)
¿¿0 1
{
ÀÀ 
inARow
ÁÁ 	
=
ÁÁ
 
board
ÁÁ 
[
ÁÁ 
_i
ÁÁ 
,
ÁÁ 
j
ÁÁ 
]
ÁÁ 
==
ÁÁ 
player
ÁÁ "
?
ÁÁ# $
inARow
ÁÁ% +
+
ÁÁ, -
$num
ÁÁ. /
:
ÁÁ0 1
$num
ÁÁ2 3
;
ÁÁ3 4
if
ÂÂ 
(
ÂÂ 
inARow
ÂÂ 
>=
ÂÂ 
$num
ÂÂ 
)
ÂÂ 
return
ÂÂ 
true
ÂÂ 
;
ÂÂ  
}
ÃÃ 
}
ÄÄ 
{
ÅÅ 
int
ÆÆ 
inARow
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ 
for
ÇÇ 
(
ÇÇ 
int
ÇÇ 

_j
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
_j
ÇÇ 
<
ÇÇ 
board
ÇÇ 
.
ÇÇ 
	GetLength
ÇÇ '
(
ÇÇ' (
$num
ÇÇ( )
)
ÇÇ) *
;
ÇÇ* +
_j
ÇÇ, .
++
ÇÇ. 0
)
ÇÇ0 1
{
ÈÈ 
inARow
ÉÉ 	
=
ÉÉ
 
board
ÉÉ 
[
ÉÉ 
i
ÉÉ 
,
ÉÉ 
_j
ÉÉ 
]
ÉÉ 
==
ÉÉ 
player
ÉÉ "
?
ÉÉ# $
inARow
ÉÉ% +
+
ÉÉ, -
$num
ÉÉ. /
:
ÉÉ0 1
$num
ÉÉ2 3
;
ÉÉ3 4
if
ÊÊ 
(
ÊÊ 
inARow
ÊÊ 
>=
ÊÊ 
$num
ÊÊ 
)
ÊÊ 
return
ÊÊ 
true
ÊÊ 
;
ÊÊ  
}
ËË 
}
ÌÌ 
{
ÍÍ 
int
ÎÎ 
inARow
ÎÎ 
=
ÎÎ 
$num
ÎÎ 
;
ÎÎ 
int
ÏÏ 
min
ÏÏ 	
=
ÏÏ
 
Math
ÏÏ 
.
ÏÏ 
Min
ÏÏ 
(
ÏÏ 
i
ÏÏ 
,
ÏÏ 
j
ÏÏ 
)
ÏÏ 
;
ÏÏ 
for
ÐÐ 
(
ÐÐ 
int
ÐÐ 

_i
ÐÐ 
=
ÐÐ 
i
ÐÐ 
-
ÐÐ 
min
ÐÐ 
,
ÐÐ 
_j
ÐÐ 
=
ÐÐ 
j
ÐÐ 
-
ÐÐ  !
min
ÐÐ" %
;
ÐÐ% &
_i
ÐÐ' )
<
ÐÐ* +
board
ÐÐ, 1
.
ÐÐ1 2
	GetLength
ÐÐ2 ;
(
ÐÐ; <
$num
ÐÐ< =
)
ÐÐ= >
&&
ÐÐ? A
_j
ÐÐB D
<
ÐÐE F
board
ÐÐG L
.
ÐÐL M
	GetLength
ÐÐM V
(
ÐÐV W
$num
ÐÐW X
)
ÐÐX Y
;
ÐÐY Z
_i
ÐÐ[ ]
++
ÐÐ] _
,
ÐÐ_ `
_j
ÐÐa c
++
ÐÐc e
)
ÐÐe f
{
ÑÑ 
inARow
ÒÒ 	
=
ÒÒ
 
board
ÒÒ 
[
ÒÒ 
_i
ÒÒ 
,
ÒÒ 
_j
ÒÒ 
]
ÒÒ 
==
ÒÒ 
player
ÒÒ #
?
ÒÒ$ %
inARow
ÒÒ& ,
+
ÒÒ- .
$num
ÒÒ/ 0
:
ÒÒ1 2
$num
ÒÒ3 4
;
ÒÒ4 5
if
ÓÓ 
(
ÓÓ 
inARow
ÓÓ 
>=
ÓÓ 
$num
ÓÓ 
)
ÓÓ 
return
ÓÓ 
true
ÓÓ 
;
ÓÓ  
}
ÔÔ 
}
ÕÕ 
{
ÖÖ 
int
×× 
inARow
×× 
=
×× 
$num
×× 
;
×× 
int
ØØ 
offset
ØØ 
=
ØØ 
Math
ØØ 
.
ØØ 
Min
ØØ 
(
ØØ 
i
ØØ 
,
ØØ 
board
ØØ  
.
ØØ  !
	GetLength
ØØ! *
(
ØØ* +
$num
ØØ+ ,
)
ØØ, -
-
ØØ. /
(
ØØ0 1
j
ØØ1 2
+
ØØ3 4
$num
ØØ5 6
)
ØØ6 7
)
ØØ7 8
;
ØØ8 9
for
ÙÙ 
(
ÙÙ 
int
ÙÙ 

_i
ÙÙ 
=
ÙÙ 
i
ÙÙ 
-
ÙÙ 
offset
ÙÙ 
,
ÙÙ 
_j
ÙÙ 
=
ÙÙ  
j
ÙÙ! "
+
ÙÙ# $
offset
ÙÙ% +
;
ÙÙ+ ,
_i
ÙÙ- /
<
ÙÙ0 1
board
ÙÙ2 7
.
ÙÙ7 8
	GetLength
ÙÙ8 A
(
ÙÙA B
$num
ÙÙB C
)
ÙÙC D
&&
ÙÙE G
_j
ÙÙH J
>=
ÙÙK M
$num
ÙÙN O
;
ÙÙO P
_i
ÙÙQ S
++
ÙÙS U
,
ÙÙU V
_j
ÙÙW Y
--
ÙÙY [
)
ÙÙ[ \
{
ÚÚ 
inARow
ÛÛ 	
=
ÛÛ
 
board
ÛÛ 
[
ÛÛ 
_i
ÛÛ 
,
ÛÛ 
_j
ÛÛ 
]
ÛÛ 
==
ÛÛ 
player
ÛÛ #
?
ÛÛ$ %
inARow
ÛÛ& ,
+
ÛÛ- .
$num
ÛÛ/ 0
:
ÛÛ1 2
$num
ÛÛ3 4
;
ÛÛ4 5
if
ÜÜ 
(
ÜÜ 
inARow
ÜÜ 
>=
ÜÜ 
$num
ÜÜ 
)
ÜÜ 
return
ÜÜ 
true
ÜÜ 
;
ÜÜ  
}
ÝÝ 
}
ÞÞ 
return
ßß 
false
ßß 
;
ßß 
}àà 
boolââ 
CheckForDraw
ââ 
(
ââ 
)
ââ 
{ãã 
for
ää 
(
ää 
int
ää 	
i
ää
 
=
ää 
$num
ää 
;
ää 
i
ää 
<
ää 
board
ää 
.
ää 
	GetLength
ää $
(
ää$ %
$num
ää% &
)
ää& '
;
ää' (
i
ää) *
++
ää* ,
)
ää, -
{
åå 
if
ææ 
(
ææ 
!
ææ 
board
ææ 
[
ææ 
i
ææ 
,
ææ 
board
ææ 
.
ææ 
	GetLength
ææ 
(
ææ  
$num
ææ  !
)
ææ! "
-
ææ# $
$num
ææ% &
]
ææ& '
.
ææ' (
HasValue
ææ( 0
)
ææ0 1
{
çç 
return
èè 	
false
èè
 
;
èè 
}
éé 
}
êê 
return
ëë 
true
ëë 
;
ëë 
}ìì 