ºã
TC:\ProgramData\Jenkins\.jenkins\workspace\GamePipeline\Projects\Duck Hunt\Program.cs
	Exception 	
?	 

	exception 
= 
null 
; 
const

 
char

 

	NULL_CHAR

 
=

 
$char

 
;

 
const 
char 


EMPTY_CHAR 
= 
$char 
; 
const 
int 	
BARREL_LENGTH
 
= 
$num 
; 
int 
	gameDelay 
; 
double 
gunXStretch 
; 
int 
crosshairSpeed 
; 
bool 

gunEnabled 
; 
bool 
bulletsEnabled 
; 
bool 
gunOutlineEnabled 
; 
bool 
inMenu 
; 
bool 
fireGun 
; 
bool 
gunSelected 
; 
bool 
crosshairSelected 
; 
bool 
gameOver 
; 
int 
frame 	
;	 

int 
score 	
;	 

int 
	ammoCount 
; 
int 

spawnDelay 
; 
int 

grassLevel 
; 
char   
[   
,   
]   
screenBuffer   
;   
Random!! 
rng!! 

;!!
 
List"" 
<"" 
Bird"" 	
>""	 

birds"" 
;"" 
List## 
<## 
Bullet## 
>## 
bullets## 
;## 
StringBuilder$$ 
screenGraphic$$ 
;$$ 
	Stopwatch%% 	
timer%%
 
;%% 
Point&& 
	crosshair&& 
;&& 
Point'' 
	LeftAncor'' 
;'' 
Point(( 
middleAncor(( 
;(( 
Point)) 

RightAncor)) 
;)) 
try++ 
{,, 
Console.. 
... 	
CursorVisible..	 
=.. 
false.. 
;.. 
Console// 
.// 	
	WriteLine//	 
(// 
)// 
;// 
Console00 
.00 	
	WriteLine00	 
(00 
$str00  
)00  !
;00! "
Console11 
.11 	
	WriteLine11	 
(11 
)11 
;11 
Console22 
.22 	
	WriteLine22	 
(22 
$str22 D
)22D E
;22E F
Console33 
.33 	
	WriteLine33	 
(33 
$str33 7
)337 8
;338 9
Console44 
.44 	
	WriteLine44	 
(44 
)44 
;44 
Console55 
.55 	
	WriteLine55	 
(55 
$str55 
)55  
;55  !
Console66 
.66 	
	WriteLine66	 
(66 
$str66 (
)66( )
;66) *
Console77 
.77 	
	WriteLine77	 
(77 
$str77 '
)77' (
;77( )
Console88 
.88 	
	WriteLine88	 
(88 
$str88 /
)88/ 0
;880 1
Console99 
.99 	
	WriteLine99	 
(99 
$str99 5
)995 6
;996 7
Console:: 
.:: 	
	WriteLine::	 
(:: 
$str:: *
)::* +
;::+ ,
Console;; 
.;; 	
	WriteLine;;	 
(;; 
);; 
;;; 
Console<< 
.<< 	
	WriteLine<<	 
(<< 
$str<< E
)<<E F
;<<F G
Console== 
.== 	
	WriteLine==	 
(== 
)== 
;== 
Console>> 
.>> 	
	WriteLine>>	 
(>> 
$str>> 0
)>>0 1
;>>1 2
Console?? 
.?? 	
ReadKey??	 
(?? 
true?? 
)?? 
;?? 
Console@@ 
.@@ 	
CursorVisible@@	 
=@@ 
false@@ 
;@@ 
{CC 
	gameDelayDD 
=DD 
$numDD 
;DD 
gunXStretchEE 
=EE 
$numEE 
;EE 
crosshairSpeedFF 
=FF 
$numFF 
;FF 

gunEnabledGG 
=GG 
trueGG 
;GG 
bulletsEnabledHH 
=HH 
falseHH 
;HH 
gunOutlineEnabledII 
=II 
falseII 
;II 
inMenuKK 
=KK	 

falseKK 
;KK 
fireGunLL 	
=LL
 
falseLL 
;LL 
gunSelectedMM 
=MM 
trueMM 
;MM 
crosshairSelectedNN 
=NN 
falseNN 
;NN 
gameOverOO 

=OO 
falseOO 
;OO 
framePP 
=PP 	
$numPP
 
;PP 
scoreQQ 
=QQ 	
$numQQ
 
;QQ 
	ammoCountRR 
=RR 
$numRR 
;RR 

spawnDelaySS 
=SS 
$numSS 
;SS 

grassLevelTT 
=TT 
SpritesTT 
.TT 
ScreenHeightTT #
-TT$ %
$numTT& '
;TT' (
screenBufferUU 
=UU 
newUU 
charUU 
[UU 
SpritesUU !
.UU! "
ScreenWidthUU" -
,UU- .
SpritesUU/ 6
.UU6 7
ScreenHeightUU7 C
]UUC D
;UUD E
rngVV 
=VV 
newVV 
(VV 
)VV 
;VV 
birdsWW 
=WW 	
newWW
 
(WW 
)WW 
;WW 
bulletsXX 	
=XX
 
newXX 
(XX 
)XX 
;XX 
screenGraphicYY 
=YY 
newYY 
(YY 
)YY 
;YY 
timerZZ 
=ZZ 	
newZZ
 
(ZZ 
)ZZ 
;ZZ 
	crosshair[[ 
=[[ 
new[[ 
([[ 
Sprites[[ 
.[[ 
ScreenWidth[[ %
/[[& '
$num[[( )
,[[) *
Sprites[[+ 2
.[[2 3
ScreenHeight[[3 ?
/[[@ A
$num[[B C
)[[C D
;[[D E
	LeftAncor\\ 
=\\ 
new\\ 
(\\ 
Sprites\\ 
.\\ 
ScreenWidth\\ %
/\\& '
$num\\( )
-\\* +
$num\\, -
,\\- .
Sprites\\/ 6
.\\6 7
ScreenHeight\\7 C
-\\D E
$num\\F G
)\\G H
;\\H I
middleAncor]] 
=]] 
new]] 
(]] 
Sprites]] 
.]] 
ScreenWidth]] '
/]]( )
$num]]* +
,]]+ ,
Sprites]]- 4
.]]4 5
ScreenHeight]]5 A
-]]B C
$num]]D E
)]]E F
;]]F G

RightAncor^^ 
=^^ 
new^^ 
(^^ 
Sprites^^ 
.^^ 
ScreenWidth^^ &
/^^' (
$num^^) *
+^^+ ,
$num^^- .
,^^. /
Sprites^^0 7
.^^7 8
ScreenHeight^^8 D
-^^E F
$num^^G H
)^^H I
;^^I J
timer__ 
.__ 
Restart__ 
(__ 
)__ 
;__ 
}`` 
whilecc 
(cc 
!cc 	
gameOvercc	 
)cc 
{dd 
ifee 
(ee 
Spritesee 
.ee 
ScreenWidthee 
!=ee 
Consoleee $
.ee$ %
WindowWidthee% 0
-ee1 2
$numee3 4
||ee5 7
Spritesff 

.ff
 
ScreenHeightff 
!=ff 
Consoleff "
.ff" #
WindowHeightff# /
)ff/ 0
{gg 
ifhh 
(hh 
OperatingSystemhh 
.hh 
	IsWindowshh  
(hh  !
)hh! "
)hh" #
{ii 
Retryjj 
:jj 	
trykk 
{ll 
Consolemm 
.mm 
BufferWidthmm 
=mm 
Consolemm "
.mm" #
WindowWidthmm# .
;mm. /
Consolenn 
.nn 
BufferHeightnn 
=nn 
Consolenn #
.nn# $
WindowHeightnn$ 0
;nn0 1
}oo 
catchpp 	
{qq 
Consolerr 
.rr 
Clearrr 
(rr 
)rr 
;rr 
gotoss 	
Retryss
 
;ss 
}tt 
}uu 
Spritesww 

.ww
 
ScreenWidthww 
=ww 
Consoleww  
.ww  !
WindowWidthww! ,
-ww- .
$numww/ 0
;ww0 1
Spritesxx 

.xx
 
ScreenHeightxx 
=xx 
Consolexx !
.xx! "
WindowHeightxx" .
;xx. /
screenBufferyy 
=yy 
newyy 
charyy 
[yy 
Spritesyy "
.yy" #
ScreenWidthyy# .
,yy. /
Spritesyy0 7
.yy7 8
ScreenHeightyy8 D
]yyD E
;yyE F

grassLevelzz 
=zz 
Spriteszz 
.zz 
ScreenHeightzz $
-zz% &
$numzz' (
;zz( )
	LeftAncor{{ 
={{ 
new{{ 
({{ 
Sprites{{ 
.{{ 
ScreenWidth{{ &
/{{' (
$num{{) *
-{{+ ,
$num{{- .
,{{. /
Sprites{{0 7
.{{7 8
ScreenHeight{{8 D
-{{E F
$num{{G H
){{H I
;{{I J
middleAncor|| 
=|| 
new|| 
(|| 
Sprites|| 
.|| 
ScreenWidth|| (
/||) *
$num||+ ,
,||, -
Sprites||. 5
.||5 6
ScreenHeight||6 B
-||C D
$num||E F
)||F G
;||G H

RightAncor}} 
=}} 
new}} 
(}} 
Sprites}} 
.}} 
ScreenWidth}} '
/}}( )
$num}}* +
+}}, -
$num}}. /
,}}/ 0
Sprites}}1 8
.}}8 9
ScreenHeight}}9 E
-}}F G
$num}}H I
)}}I J
;}}J K
	crosshair~~ 
.~~ 
X~~ 
=~~ 
Math~~ 
.~~ 
Min~~ 
(~~ 
Sprites~~ !
.~~! "
ScreenWidth~~" -
-~~. /
Sprites~~0 7
.~~7 8

Enviroment~~8 B
.~~B C
CrosshairWidth~~C Q
+~~R S
$num~~T U
,~~U V
Math~~W [
.~~[ \
Max~~\ _
(~~_ `
	crosshair~~` i
.~~i j
X~~j k
,~~k l
$num~~m n
)~~n o
)~~o p
;~~p q
	crosshair 
. 
Y 
= 
Math 
. 
Min 
( 
Sprites !
.! "
ScreenHeight" .
-/ 0
Sprites1 8
.8 9

Enviroment9 C
.C D
CrosshairHeightD S
,S T
MathU Y
.Y Z
MaxZ ]
(] ^
	crosshair^ g
.g h
Yh i
,i j
$numk l
)l m
)m n
;n o
Console
 

.

 
CursorVisible
 
=
 
false
  
;
  !
Console
 

.

 
Clear
 
(
 
)
 
;
 
}
 
Console
 	
.
	 

Title

 
=
 
$"
 
$str
 
{
 
(
 
int
 
)
 
(
  
frame
  %
/
& '
timer
( -
.
- .
Elapsed
. 5
.
5 6
TotalSeconds
6 B
)
B C
}
C D
"
D E
;
E F
if
 
(
 
inMenu
 
)
 
{
 
Console
 

.

 
Clear
 
(
 
)
 
;
 
}
 
while
 
(
 	
inMenu
	 
)
 
{
 
string
 	
menuDisplay

 
=
 
$str
 :
+
; <
Sprites
= D
.
D E
NEWLINE_CHAR
E Q
+
R S
Sprites
T [
.
[ \
NEWLINE_CHAR
\ h
+
i j
$str
 &
+
' (
(
) *
gunSelected
* 5
?
6 7
$str
8 =
:
> ?
crosshairSelected
@ Q
?
R S
$str
T Y
:
Z [
$str
\ a
)
a b
+
c d
Sprites
e l
.
l m
NEWLINE_CHAR
m y
+
z {
Sprites| 
. 
NEWLINE_CHAR 
+ 
$"
 
$str
 %
{
% &
gunXStretch
& 1
:
1 2
$str
2 3
}
3 4
$str
4 :
"
: ;
+
< =
Sprites
> E
.
E F
NEWLINE_CHAR
F R
+
S T
Sprites
U \
.
\ ]
NEWLINE_CHAR
] i
+
j k
$"
 
$str
 %
{
% &
crosshairSpeed
& 4
}
4 5
$str
5 :
"
: ;
+
< =
Sprites
> E
.
E F
NEWLINE_CHAR
F R
+
S T
Sprites
U \
.
\ ]
NEWLINE_CHAR
] i
+
j k
$"
 
$str
 %
{
% &
	gameDelay
& /
}
/ 0
$str
0 :
"
: ;
+
< =
Sprites
> E
.
E F
NEWLINE_CHAR
F R
+
S T
Sprites
U \
.
\ ]
NEWLINE_CHAR
] i
+
j k
$"
 
$str
 %
{
% &
bulletsEnabled
& 4
}
4 5
$str
5 :
"
: ;
+
< =
Sprites
> E
.
E F
NEWLINE_CHAR
F R
+
S T
Sprites
U \
.
\ ]
NEWLINE_CHAR
] i
+
j k
$"
 
$str
 %
{
% &
gunOutlineEnabled
& 7
}
7 8
$str
8 :
"
: ;
+
< =
Sprites
> E
.
E F
NEWLINE_CHAR
F R
+
S T
Sprites
U \
.
\ ]
NEWLINE_CHAR
] i
+
j k
$"
 
$str
 %
{
% &

gunEnabled
& 0
}
0 1
$str
1 :
"
: ;
+
< =
Sprites
> E
.
E F
NEWLINE_CHAR
F R
+
S T
Sprites
U \
.
\ ]
NEWLINE_CHAR
] i
+
j k
$str
 <
;
< =$
DrawToScreenWithColour
 
(
 
$num
 
,
 
$num
 
,
 
ConsoleColor
  ,
.
, -
Yellow
- 3
,
3 4
menuDisplay
5 @
.
@ A
ToCharArray
A L
(
L M
)
M N
)
N O
;
O P$
DrawToScreenWithColour
 
(
 
$num
 
,
 
$num
 
,
 
ConsoleColor
  ,
.
, -
White
- 2
,
2 3
(
4 5
$str
5 A
+
B C
Sprites
D K
.
K L
NEWLINE_CHAR
L X
+
Y Z
$str
[ n
)
n o
.
o p
ToCharArray
p {
(
{ |
)
| }
)
} ~
;
~ 
switch
 	
(

 
Console
 
.
 
ReadKey
 
(
 
true
 
)
  
.
  !
Key
! $
)
$ %
{
 
case
 

ConsoleKey
	 
.
 
D1
 
:
 
gunSelected
 #
=
$ %
true
& *
;
* +
crosshairSelected
, =
=
> ?
false
@ E
;
E F
break
G L
;
L M
case
 

ConsoleKey
	 
.
 
D2
 
:
 
gunSelected
 #
=
$ %
false
& +
;
+ ,
crosshairSelected
- >
=
? @
true
A E
;
E F
break
G L
;
L M
case
 

ConsoleKey
	 
.
 
D3
 
:
 
gunSelected
 #
=
$ %
false
& +
;
+ ,
crosshairSelected
- >
=
? @
false
A F
;
F G
break
H M
;
M N
case
 

ConsoleKey
	 
.
 
D4
 
:
 
bulletsEnabled
 &
=
' (
!
) *
bulletsEnabled
* 8
;
8 9
break
: ?
;
? @
case
   

ConsoleKey
  	 
.
   
D5
   
:
   
gunOutlineEnabled
   )
=
  * +
!
  , -
gunOutlineEnabled
  - >
;
  > ?
break
  @ E
;
  E F
case
¡¡ 

ConsoleKey
¡¡	 
.
¡¡ 
D6
¡¡ 
:
¡¡ 

gunEnabled
¡¡ "
=
¡¡# $
!
¡¡% &

gunEnabled
¡¡& 0
;
¡¡0 1
break
¡¡2 7
;
¡¡7 8
case
¢¢ 

ConsoleKey
¢¢	 
.
¢¢ 
Enter
¢¢ 
:
¢¢ 
inMenu
¢¢ !
=
¢¢" #
false
¢¢$ )
;
¢¢) *
continue
¢¢+ 3
;
¢¢3 4
case
££ 

ConsoleKey
££	 
.
££ 
Escape
££ 
:
££ 
return
££ "
;
££" #
case
¥¥ 

ConsoleKey
¥¥	 
.
¥¥ 
UpArrow
¥¥ 
:
¥¥ 
if
¦¦ 
(
¦¦ 	
gunSelected
¦¦	 
)
¦¦ 
{
§§ 
gunXStretch
¨¨ 
+=
¨¨ 
$num
¨¨ 
;
¨¨ 
}
©© 
else
ªª 	
if
ªª
 
(
ªª 
crosshairSelected
ªª 
)
ªª  
{
«« 
crosshairSpeed
¬¬ 
++
¬¬ 
;
¬¬ 
}
­­ 
else
®® 	
{
¯¯ 
	gameDelay
°° 
++
°° 
;
°° 
}
±± 
break
²² 

;
²²
 
case
³³ 

ConsoleKey
³³	 
.
³³ 
	DownArrow
³³ 
:
³³ 
if
´´ 
(
´´ 	
gunSelected
´´	 
)
´´ 
{
µµ 
gunXStretch
¶¶ 
-=
¶¶ 
$num
¶¶ 
;
¶¶ 
}
·· 
else
¸¸ 	
if
¸¸
 
(
¸¸ 
crosshairSelected
¸¸ 
)
¸¸  
{
¹¹ 
crosshairSpeed
ºº 
--
ºº 
;
ºº 
}
»» 
else
¼¼ 	
{
½½ 
	gameDelay
¾¾ 
--
¾¾ 
;
¾¾ 
}
¿¿ 
break
ÀÀ 

;
ÀÀ
 
}
ÁÁ 
timer
ÃÃ 
.
ÃÃ 	
Restart
ÃÃ	 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
frame
ÄÄ 
=
ÄÄ	 

$num
ÄÄ 
;
ÄÄ 
}
ÅÅ 
while
ÇÇ 
(
ÇÇ 	
Console
ÇÇ	 
.
ÇÇ 
KeyAvailable
ÇÇ 
)
ÇÇ 
{
ÈÈ 
switch
ÉÉ 	
(
ÉÉ
 
Console
ÉÉ 
.
ÉÉ 
ReadKey
ÉÉ 
(
ÉÉ 
true
ÉÉ 
)
ÉÉ  
.
ÉÉ  !
Key
ÉÉ! $
)
ÉÉ$ %
{
ÊÊ 
case
ËË 

ConsoleKey
ËË	 
.
ËË 
UpArrow
ËË 
:
ËË 
	crosshair
ËË &
.
ËË& '
Y
ËË' (
-=
ËË) +
crosshairSpeed
ËË, :
;
ËË: ;
break
ËË< A
;
ËËA B
case
ÌÌ 

ConsoleKey
ÌÌ	 
.
ÌÌ 
	DownArrow
ÌÌ 
:
ÌÌ 
	crosshair
ÌÌ (
.
ÌÌ( )
Y
ÌÌ) *
+=
ÌÌ+ -
crosshairSpeed
ÌÌ. <
;
ÌÌ< =
break
ÌÌ> C
;
ÌÌC D
case
ÍÍ 

ConsoleKey
ÍÍ	 
.
ÍÍ 
	LeftArrow
ÍÍ 
:
ÍÍ 
	crosshair
ÍÍ (
.
ÍÍ( )
X
ÍÍ) *
-=
ÍÍ+ -
crosshairSpeed
ÍÍ. <
;
ÍÍ< =
break
ÍÍ> C
;
ÍÍC D
case
ÎÎ 

ConsoleKey
ÎÎ	 
.
ÎÎ 

RightArrow
ÎÎ 
:
ÎÎ 
	crosshair
ÎÎ  )
.
ÎÎ) *
X
ÎÎ* +
+=
ÎÎ, .
crosshairSpeed
ÎÎ/ =
;
ÎÎ= >
break
ÎÎ? D
;
ÎÎD E
case
ÏÏ 

ConsoleKey
ÏÏ	 
.
ÏÏ 
Spacebar
ÏÏ 
:
ÏÏ 
fireGun
ÏÏ %
=
ÏÏ& '
true
ÏÏ( ,
;
ÏÏ, -
break
ÏÏ. 3
;
ÏÏ3 4
case
ÐÐ 

ConsoleKey
ÐÐ	 
.
ÐÐ 
Enter
ÐÐ 
:
ÐÐ 
inMenu
ÐÐ !
=
ÐÐ" #
true
ÐÐ$ (
;
ÐÐ( )
continue
ÐÐ* 2
;
ÐÐ2 3
case
ÑÑ 

ConsoleKey
ÑÑ	 
.
ÑÑ 
Escape
ÑÑ 
:
ÑÑ 
return
ÑÑ "
;
ÑÑ" #
}
ÒÒ 
	crosshair
ÔÔ 
.
ÔÔ 
X
ÔÔ 
=
ÔÔ 
Math
ÔÔ 
.
ÔÔ 
Min
ÔÔ 
(
ÔÔ 
Sprites
ÔÔ !
.
ÔÔ! "
ScreenWidth
ÔÔ" -
-
ÔÔ. /
Sprites
ÔÔ0 7
.
ÔÔ7 8

Enviroment
ÔÔ8 B
.
ÔÔB C
CrosshairWidth
ÔÔC Q
+
ÔÔR S
$num
ÔÔT U
,
ÔÔU V
Math
ÔÔW [
.
ÔÔ[ \
Max
ÔÔ\ _
(
ÔÔ_ `
	crosshair
ÔÔ` i
.
ÔÔi j
X
ÔÔj k
,
ÔÔk l
$num
ÔÔm n
)
ÔÔn o
)
ÔÔo p
;
ÔÔp q
	crosshair
ÕÕ 
.
ÕÕ 
Y
ÕÕ 
=
ÕÕ 
Math
ÕÕ 
.
ÕÕ 
Min
ÕÕ 
(
ÕÕ 
Sprites
ÕÕ !
.
ÕÕ! "
ScreenHeight
ÕÕ" .
-
ÕÕ/ 0
Sprites
ÕÕ1 8
.
ÕÕ8 9

Enviroment
ÕÕ9 C
.
ÕÕC D
CrosshairHeight
ÕÕD S
,
ÕÕS T
Math
ÕÕU Y
.
ÕÕY Z
Max
ÕÕZ ]
(
ÕÕ] ^
	crosshair
ÕÕ^ g
.
ÕÕg h
Y
ÕÕh i
,
ÕÕi j
$num
ÕÕk l
)
ÕÕl m
)
ÕÕm n
;
ÕÕn o
}
ÖÖ 
WriteToBuffer
ØØ 
(
ØØ 
$num
ØØ 
,
ØØ 
$num
ØØ 
,
ØØ 
Sprites
ØØ 
.
ØØ 
Border
ØØ $
)
ØØ$ %
;
ØØ% &
WriteToBuffer
ÙÙ 
(
ÙÙ 
$num
ÙÙ 
,
ÙÙ 

grassLevel
ÙÙ 
,
ÙÙ 
Sprites
ÙÙ &
.
ÙÙ& '

Enviroment
ÙÙ' 1
.
ÙÙ1 2
Grass
ÙÙ2 7
)
ÙÙ7 8
;
ÙÙ8 9
WriteToBuffer
ÚÚ 
(
ÚÚ 
Sprites
ÚÚ 
.
ÚÚ 

Enviroment
ÚÚ "
.
ÚÚ" #
	TreeWidth
ÚÚ# ,
-
ÚÚ- .
Sprites
ÚÚ/ 6
.
ÚÚ6 7

Enviroment
ÚÚ7 A
.
ÚÚA B
	TreeWidth
ÚÚB K
/
ÚÚL M
$num
ÚÚN O
,
ÚÚO P

grassLevel
ÚÚQ [
-
ÚÚ\ ]
Sprites
ÚÚ^ e
.
ÚÚe f

Enviroment
ÚÚf p
.
ÚÚp q

TreeHeight
ÚÚq {
,
ÚÚ{ |
SpritesÚÚ} 
.ÚÚ 

EnviromentÚÚ 
.ÚÚ 
TreeÚÚ 
)ÚÚ 
;ÚÚ 
WriteToBuffer
ÛÛ 
(
ÛÛ 
Sprites
ÛÛ 
.
ÛÛ 
ScreenWidth
ÛÛ #
-
ÛÛ$ %
Sprites
ÛÛ& -
.
ÛÛ- .

Enviroment
ÛÛ. 8
.
ÛÛ8 9
	BushWidth
ÛÛ9 B
*
ÛÛC D
$num
ÛÛE F
,
ÛÛF G

grassLevel
ÛÛH R
-
ÛÛS T
Sprites
ÛÛU \
.
ÛÛ\ ]

Enviroment
ÛÛ] g
.
ÛÛg h

BushHeight
ÛÛh r
,
ÛÛr s
Sprites
ÛÛt {
.
ÛÛ{ |

EnviromentÛÛ| 
.ÛÛ 
BushÛÛ 
)ÛÛ 
;ÛÛ 
WriteToBuffer
ÜÜ 
(
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
$str
ÜÜ $
.
ÜÜ$ %
ToCharArray
ÜÜ% 0
(
ÜÜ0 1
)
ÜÜ1 2
)
ÜÜ2 3
;
ÜÜ3 4
double
ÞÞ 
theta
ÞÞ	 
=
ÞÞ 
Math
ÞÞ 
.
ÞÞ 
Atan2
ÞÞ 
(
ÞÞ 
middleAncor
ÞÞ '
.
ÞÞ' (
Y
ÞÞ( )
-
ÞÞ* +
	crosshair
ÞÞ, 5
.
ÞÞ5 6
Y
ÞÞ6 7
,
ÞÞ7 8
middleAncor
ÞÞ9 D
.
ÞÞD E
X
ÞÞE F
-
ÞÞG H
	crosshair
ÞÞI R
.
ÞÞR S
X
ÞÞS T
)
ÞÞT U
;
ÞÞU V
int
ßß 

xGunOffset
ßß 
=
ßß 
-
ßß 
(
ßß 
int
ßß 
)
ßß 
Math
ßß 
.
ßß 
Floor
ßß #
(
ßß# $
Math
ßß$ (
.
ßß( )
Cos
ßß) ,
(
ßß, -
theta
ßß- 2
)
ßß2 3
*
ßß4 5
BARREL_LENGTH
ßß6 C
)
ßßC D
;
ßßD E
int
àà 

yGunOffset
àà 
=
àà 
-
àà 
(
àà 
int
àà 
)
àà 
Math
àà 
.
àà 
Floor
àà #
(
àà# $
Math
àà$ (
.
àà( )
Sin
àà) ,
(
àà, -
theta
àà- 2
)
àà2 3
*
àà4 5
BARREL_LENGTH
àà6 C
)
ààC D
;
ààD E
Point
áá 
gunTopOffset
áá 
=
áá 
new
áá 
(
áá 
(
áá 
int
áá 
)
áá  
(
áá  !

xGunOffset
áá! +
*
áá, -
gunXStretch
áá. 9
)
áá9 :
,
áá: ;

yGunOffset
áá< F
)
ááF G
;
ááG H
if
ãã 
(
ãã 

gunEnabled
ãã 
)
ãã 
{
ää 
if
åå 
(
åå 
gunOutlineEnabled
åå 
)
åå 
{
ææ 
DrawLine
çç 
(
çç 

RightAncor
çç 
,
çç 

RightAncor
çç #
+
çç$ %
gunTopOffset
çç& 2
)
çç2 3
;
çç3 4
DrawLine
èè 
(
èè 
	LeftAncor
èè 
,
èè 
	LeftAncor
èè !
+
èè" #
gunTopOffset
èè$ 0
)
èè0 1
;
èè1 2
DrawLine
éé 
(
éé 

RightAncor
éé 
+
éé 
gunTopOffset
éé &
,
éé& '
	LeftAncor
éé( 1
+
éé2 3
gunTopOffset
éé4 @
)
éé@ A
;
ééA B
}
êê 
else
ëë 
{
ìì 
for
íí 
(
íí 	
int
íí	 
i
íí 
=
íí 
	LeftAncor
íí 
.
íí 
X
íí 
;
íí 
i
íí 
<=
íí  "

RightAncor
íí# -
.
íí- .
X
íí. /
;
íí/ 0
i
íí1 2
++
íí2 4
)
íí4 5
{
îî 
Point
ïï 

gunBottomOffset
ïï 
=
ïï 
new
ïï  
(
ïï  !
i
ïï! "
,
ïï" #
middleAncor
ïï$ /
.
ïï/ 0
Y
ïï0 1
)
ïï1 2
;
ïï2 3
DrawLine
ðð 
(
ðð 
gunBottomOffset
ðð 
,
ðð 
gunBottomOffset
ðð .
+
ðð/ 0
gunTopOffset
ðð1 =
)
ðð= >
;
ðð> ?
}
ññ 
}
òò 
}
óó 
DrawToScreen
õõ 
(
õõ 
screenBuffer
õõ 
)
õõ 
;
õõ 
DrawGUI
öö 	
(
öö	 

)
öö
 
;
öö 
if
øø 
(
øø 
bulletsEnabled
øø 
)
øø 
{
ùù 
if
úú 
(
úú 
fireGun
úú 
)
úú 
{
ûû 
bullets
üü 
.
üü 
Add
üü 
(
üü 
new
üü 
Bullet
üü 
(
üü 
middleAncor
üü &
+
üü' (
gunTopOffset
üü) 5
,
üü5 6
theta
üü7 <
)
üü< =
)
üü= >
;
üü> ?
	ammoCount
ýý 
--
ýý 
;
ýý 
}
þþ 
for
 
(
 
int
 
i
 
=
 
$num
 
;
 
i
 
<
 
bullets
 
.
 
Count
 $
;
$ %
i
& '
++
' )
)
) *
{
 
bullets
 
[
 
i
 
]
 
.
 
UpdatePosition
 
(
 
)
 
;
  
if
 
(
 
bullets
 
[
 
i
 
]
 
.
 
OutOfBounds
 
)
 
{
 
bullets
 
.
 
RemoveAt
 
(
 
i
 
)
 
;
 
continue
 
;
 
}
 
foreach
 
(
 
Bird
 
bird
 
in
 
birds
 
)
  
{
 
if
 
(
 	
!
	 

bird

 
.
 
IsDead
 
&&
 
(
 
bird
 
.
 
Contains
 
(
 
(
 
int
 
)
 
bullets
 !
[
! "
i
" #
]
# $
.
$ %
X
% &
[
& '
$num
' (
]
( )
,
) *
(
+ ,
int
, /
)
/ 0
bullets
0 7
[
7 8
i
8 9
]
9 :
.
: ;
Y
; <
[
< =
$num
= >
]
> ?
)
? @
||
A C
bird
 

.

 
Contains
 
(
 
(
 
int
 
)
 
bullets
  
[
  !
i
! "
]
" #
.
# $
X
$ %
[
% &
$num
& '
]
' (
,
( )
(
* +
int
+ .
)
. /
bullets
/ 6
[
6 7
i
7 8
]
8 9
.
9 :
Y
: ;
[
; <
$num
< =
]
= >
)
> ?
)
? @
)
@ A
{
 
bird
 

.

 
IsDead
 
=
 
true
 
;
 
	ammoCount
 
+=
 
$num
 
;
 
score
 
+=
 
$num
 
;
 
}
 
}
 $
DrawToScreenWithColour
 
(
 
(
 
int
 
)
  
bullets
  '
[
' (
i
( )
]
) *
.
* +
X
+ ,
[
, -
$num
- .
]
. /
,
/ 0
(
1 2
int
2 5
)
5 6
bullets
6 =
[
= >
i
> ?
]
? @
.
@ A
Y
A B
[
B C
$num
C D
]
D E
,
E F
ConsoleColor
G S
.
S T
DarkGray
T \
,
\ ]
$char
^ a
)
a b
;
b c$
DrawToScreenWithColour
 
(
 
(
 
int
 
)
  
bullets
  '
[
' (
i
( )
]
) *
.
* +
X
+ ,
[
, -
$num
- .
]
. /
,
/ 0
(
1 2
int
2 5
)
5 6
bullets
6 =
[
= >
i
> ?
]
? @
.
@ A
Y
A B
[
B C
$num
C D
]
D E
,
E F
ConsoleColor
G S
.
S T
DarkGray
T \
,
\ ]
$char
^ a
)
a b
;
b c
}
 
}
 
else
 
{
 
if
 
(
 
fireGun
 
&&
 
	ammoCount
 
>
 
$num
 
)
  
{
 
foreach
 
(
 
Bird
 
bird
 
in
 
birds
 
)
  
{
 
if
   
(
   	
!
  	 

bird
  
 
.
   
IsDead
   
&&
   
bird
   
.
   
Contains
   &
(
  & '
	crosshair
  ' 0
.
  0 1
X
  1 2
,
  2 3
	crosshair
  4 =
.
  = >
Y
  > ?
)
  ? @
)
  @ A
{
¡¡ 
bird
¢¢ 

.
¢¢
 
IsDead
¢¢ 
=
¢¢ 
true
¢¢ 
;
¢¢ 
	ammoCount
££ 
+=
££ 
$num
££ 
;
££ 
score
¤¤ 
+=
¤¤ 
$num
¤¤ 
;
¤¤ 
}
¥¥ 
}
¦¦ 
	ammoCount
§§ 
--
§§ 
;
§§ 
}
¨¨ 
}
©© 
fireGun
«« 	
=
««
 
false
«« 
;
«« 
foreach
­­ 	
(
­­
 
Bird
­­ 
bird
­­ 
in
­­ 
birds
­­ 
)
­­ 
{
®® $
DrawToScreenWithColour
¯¯ 
(
¯¯ 
bird
¯¯ 
.
¯¯ 
X
¯¯  
,
¯¯  !
bird
¯¯" &
.
¯¯& '
Y
¯¯' (
,
¯¯( )
ConsoleColor
¯¯* 6
.
¯¯6 7
Red
¯¯7 :
,
¯¯: ;
bird
¯¯< @
.
¯¯@ A
	Direction
¯¯A J
is
¯¯K M
-
¯¯N O
$num
¯¯O P
?
¯¯Q R
Sprites
¯¯S Z
.
¯¯Z [
Bird
¯¯[ _
.
¯¯_ `
LeftSprites
¯¯` k
[
¯¯k l
bird
¯¯l p
.
¯¯p q
Frame
¯¯q v
]
¯¯v w
:
¯¯x y
Sprites¯¯z 
.¯¯ 
Bird¯¯ 
.¯¯ 
RightSprites¯¯ 
[¯¯ 
bird¯¯ 
.¯¯ 
Frame¯¯ 
]¯¯ 
)¯¯  
;¯¯  ¡
if
°° 
(
°° 
frame
°° 
%
°° 
$num
°° 
is
°° 
$num
°° 
)
°° 
{
±± 
bird
²² 
.
²² 	
IncrementFrame
²²	 
(
²² 
)
²² 
;
²² 
if
³³ 
(
³³ 
bird
³³ 
.
³³ 
IsDead
³³ 
)
³³ 
{
´´ 
bird
µµ 	
.
µµ	 

Y
µµ
 
++
µµ 
;
µµ 
}
¶¶ 
else
·· 
{
¸¸ 
bird
¹¹ 	
.
¹¹	 

X
¹¹
 
+=
¹¹ 
bird
¹¹ 
.
¹¹ 
	Direction
¹¹ 
;
¹¹ 
}
ºº 
}
»» 
}
¼¼ 
for
¾¾ 
(
¾¾ 
int
¾¾ 

i
¾¾ 
=
¾¾ 
birds
¾¾ 
.
¾¾ 
Count
¾¾ 
-
¾¾ 
$num
¾¾ 
;
¾¾ 
i
¾¾  !
>=
¾¾" $
$num
¾¾% &
;
¾¾& '
i
¾¾( )
--
¾¾) +
)
¾¾+ ,
{
¿¿ 
if
ÀÀ 
(
ÀÀ 
birds
ÀÀ 
[
ÀÀ 
i
ÀÀ 
]
ÀÀ 
.
ÀÀ 
Y
ÀÀ 
>
ÀÀ 
Sprites
ÀÀ 
.
ÀÀ 
ScreenHeight
ÀÀ (
||
ÀÀ) +
(
ÁÁ 
birds
ÁÁ 

[
ÁÁ
 
i
ÁÁ 
]
ÁÁ 
.
ÁÁ 
	Direction
ÁÁ 
is
ÁÁ 
-
ÁÁ 
$num
ÁÁ 
&&
ÁÁ  
birds
ÁÁ! &
[
ÁÁ& '
i
ÁÁ' (
]
ÁÁ( )
.
ÁÁ) *
X
ÁÁ* +
<
ÁÁ, -
-
ÁÁ. /
Sprites
ÁÁ/ 6
.
ÁÁ6 7
Bird
ÁÁ7 ;
.
ÁÁ; <
Width
ÁÁ< A
)
ÁÁA B
||
ÁÁC E
(
ÂÂ 
birds
ÂÂ 

[
ÂÂ
 
i
ÂÂ 
]
ÂÂ 
.
ÂÂ 
	Direction
ÂÂ 
is
ÂÂ 
$num
ÂÂ 
&&
ÂÂ 
birds
ÂÂ  %
[
ÂÂ% &
i
ÂÂ& '
]
ÂÂ' (
.
ÂÂ( )
X
ÂÂ) *
>
ÂÂ+ ,
Sprites
ÂÂ- 4
.
ÂÂ4 5
ScreenWidth
ÂÂ5 @
+
ÂÂA B
Sprites
ÂÂC J
.
ÂÂJ K
Bird
ÂÂK O
.
ÂÂO P
Width
ÂÂP U
)
ÂÂU V
)
ÂÂV W
{
ÃÃ 
birds
ÄÄ 	
.
ÄÄ	 

RemoveAt
ÄÄ
 
(
ÄÄ 
i
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}
ÆÆ 
if
ÈÈ 
(
ÈÈ 
frame
ÈÈ 
%
ÈÈ 

spawnDelay
ÈÈ 
is
ÈÈ 
$num
ÈÈ 
)
ÈÈ 
{
ÉÉ 
if
ÊÊ 
(
ÊÊ 
rng
ÊÊ 

.
ÊÊ
 
Next
ÊÊ 
(
ÊÊ 
$num
ÊÊ 
)
ÊÊ 
>
ÊÊ 
$num
ÊÊ 
)
ÊÊ 
{
ËË 
birds
ÌÌ 	
.
ÌÌ	 

Add
ÌÌ
 
(
ÌÌ 
new
ÌÌ 
Bird
ÌÌ 
(
ÌÌ 
Sprites
ÌÌ 
.
ÌÌ 
ScreenWidth
ÌÌ *
,
ÌÌ* +
rng
ÌÌ, /
.
ÌÌ/ 0
Next
ÌÌ0 4
(
ÌÌ4 5
$num
ÌÌ5 6
,
ÌÌ6 7

grassLevel
ÌÌ8 B
-
ÌÌC D
Sprites
ÌÌE L
.
ÌÌL M
Bird
ÌÌM Q
.
ÌÌQ R
Height
ÌÌR X
)
ÌÌX Y
,
ÌÌY Z
-
ÌÌ[ \
$num
ÌÌ\ ]
)
ÌÌ] ^
)
ÌÌ^ _
;
ÌÌ_ `
}
ÍÍ 
else
ÎÎ 
{
ÏÏ 
birds
ÐÐ 	
.
ÐÐ	 

Add
ÐÐ
 
(
ÐÐ 
new
ÐÐ 
Bird
ÐÐ 
(
ÐÐ 
-
ÐÐ 
Sprites
ÐÐ 
.
ÐÐ  
Bird
ÐÐ  $
.
ÐÐ$ %
Width
ÐÐ% *
,
ÐÐ* +
rng
ÐÐ, /
.
ÐÐ/ 0
Next
ÐÐ0 4
(
ÐÐ4 5
$num
ÐÐ5 6
,
ÐÐ6 7

grassLevel
ÐÐ8 B
-
ÐÐC D
Sprites
ÐÐE L
.
ÐÐL M
Bird
ÐÐM Q
.
ÐÐQ R
Height
ÐÐR X
)
ÐÐX Y
,
ÐÐY Z
$num
ÐÐ[ \
)
ÐÐ\ ]
)
ÐÐ] ^
;
ÐÐ^ _
}
ÑÑ 
if
ÒÒ 
(
ÒÒ 

spawnDelay
ÒÒ 
>
ÒÒ 
$num
ÒÒ 
)
ÒÒ 
{
ÓÓ 

spawnDelay
ÔÔ 
--
ÔÔ 
;
ÔÔ 
}
ÕÕ 
}
ÖÖ 
if
ØØ 
(
ØØ 
	ammoCount
ØØ 
>
ØØ 
$num
ØØ 
)
ØØ 
{
ÙÙ 
	ammoCount
ÚÚ 
=
ÚÚ 
$num
ÚÚ 
;
ÚÚ 
}
ÛÛ $
DrawToScreenWithColour
ÝÝ 
(
ÝÝ 
	crosshair
ÝÝ "
.
ÝÝ" #
X
ÝÝ# $
-
ÝÝ% &
Sprites
ÝÝ' .
.
ÝÝ. /

Enviroment
ÝÝ/ 9
.
ÝÝ9 :
CrosshairHeight
ÝÝ: I
/
ÝÝJ K
$num
ÝÝL M
,
ÝÝM N
	crosshair
ÝÝO X
.
ÝÝX Y
Y
ÝÝY Z
-
ÝÝ[ \
Sprites
ÝÝ] d
.
ÝÝd e

Enviroment
ÝÝe o
.
ÝÝo p
CrosshairWidth
ÝÝp ~
/ÝÝ 
$numÝÝ 
,ÝÝ 
fireGunÝÝ 
?ÝÝ 
ConsoleColorÝÝ 
.ÝÝ 

DarkYellowÝÝ ¥
:ÝÝ¦ §
ConsoleColorÝÝ¨ ´
.ÝÝ´ µ
BlueÝÝµ ¹
,ÝÝ¹ º
SpritesÝÝ» Â
.ÝÝÂ Ã

EnviromentÝÝÃ Í
.ÝÝÍ Î
	CrosshairÝÝÎ ×
)ÝÝ× Ø
;ÝÝØ Ù
Thread
ÞÞ 
.
ÞÞ 	
Sleep
ÞÞ	 
(
ÞÞ 
TimeSpan
ÞÞ 
.
ÞÞ 
FromMilliseconds
ÞÞ (
(
ÞÞ( )
	gameDelay
ÞÞ) 2
)
ÞÞ2 3
)
ÞÞ3 4
;
ÞÞ4 5
frame
ßß 
++
ßß 	
;
ßß	 

gameOver
áá 

=
áá 
	ammoCount
áá 
is
áá 
$num
áá 
&&
áá 
bullets
áá &
.
áá& '
Count
áá' ,
is
áá- /
$num
áá0 1
;
áá1 2
}
ââ 
Console
ää 
.
ää 	
ForegroundColor
ää	 
=
ää 
ConsoleColor
ää '
.
ää' (
Yellow
ää( .
;
ää. /
Console
åå 
.
åå 	
SetCursorPosition
åå	 
(
åå 
$num
åå 
,
åå 
$num
åå 
)
åå  
;
åå  !
Console
ææ 
.
ææ 	
	WriteLine
ææ	 
(
ææ 
$str
ææ $
)
ææ$ %
;
ææ% &
Console
çç 
.
çç 	
SetCursorPosition
çç	 
(
çç 
$num
çç 
,
çç 
$num
çç 
)
çç  
;
çç  !
Console
èè 
.
èè 	
	WriteLine
èè	 
(
èè 
$"
èè 
$str
èè 
{
èè 
score
èè "
}
èè" #
"
èè# $
)
èè$ %
;
èè% &
Console
éé 
.
éé 	
SetCursorPosition
éé	 
(
éé 
$num
éé 
,
éé 
$num
éé 
)
éé  
;
éé  !
Console
êê 
.
êê 	
	WriteLine
êê	 
(
êê 
$str
êê (
)
êê( )
;
êê) *
while
ìì 
(
ìì 
Console
ìì 
.
ìì 
ReadKey
ìì 
(
ìì 
true
ìì 
)
ìì 
.
ìì 
Key
ìì !
!=
ìì" $

ConsoleKey
ìì% /
.
ìì/ 0
Escape
ìì0 6
)
ìì6 7
{
íí 
continue
îî 

;
îî
 
}
ïï 
void
ññ 
DrawGUI
ññ 
(
ññ 
)
ññ 
{
òò 
int
óó 
x
óó 
=
óó 	
Sprites
óó
 
.
óó 
ScreenWidth
óó 
-
óó 
$num
óó  "
;
óó" #
int
ôô 
y
ôô 
=
ôô 	

grassLevel
ôô
 
;
ôô 
string
öö 
topFrame
öö	 
=
öö 
$char
öö 
+
öö 
new
öö 
string
öö $
(
öö$ %
$char
öö% (
,
öö( )
$num
öö* ,
)
öö, -
+
öö. /
$char
öö0 3
;
öö3 4
string
÷÷ 
	ammoFrame
÷÷	 
=
÷÷ 
string
÷÷ 
.
÷÷ 
Format
÷÷ "
(
÷÷" #
$str
÷÷# 4
,
÷÷4 5
string
÷÷6 <
.
÷÷< =
Concat
÷÷= C
(
÷÷C D

Enumerable
÷÷D N
.
÷÷N O
Repeat
÷÷O U
(
÷÷U V
$str
÷÷V Z
,
÷÷Z [
	ammoCount
÷÷\ e
)
÷÷e f
)
÷÷f g
)
÷÷g h
+
÷÷i j
$char
÷÷k n
;
÷÷n o
string
øø 

scoreFrame
øø	 
=
øø 
string
øø 
.
øø 
Format
øø #
(
øø# $
$str
øø$ 5
,
øø5 6
score
øø7 <
)
øø< =
+
øø> ?
$char
øø@ C
;
øøC D
string
ùù 
bottomFrame
ùù	 
=
ùù 
$char
ùù 
+
ùù 
new
ùù  
string
ùù! '
(
ùù' (
$char
ùù( +
,
ùù+ ,
$num
ùù- /
)
ùù/ 0
+
ùù1 2
$char
ùù3 6
;
ùù6 7
try
úú 
{
ûû 
Console
üü 

.
üü
 
SetCursorPosition
üü 
(
üü 
x
üü 
,
üü 
y
üü  !
)
üü! "
;
üü" #
Console
ýý 

.
ýý
 
Write
ýý 
(
ýý 
topFrame
ýý 
)
ýý 
;
ýý 
Console
þþ 

.
þþ
 
SetCursorPosition
þþ 
(
þþ 
x
þþ 
,
þþ 
++
þþ  "
y
þþ" #
)
þþ# $
;
þþ$ %
Console
ÿÿ 

.
ÿÿ
 
Write
ÿÿ 
(
ÿÿ 
	ammoFrame
ÿÿ 
)
ÿÿ 
;
ÿÿ 
Console
 

.

 
SetCursorPosition
 
(
 
x
 
,
 
++
  "
y
" #
)
# $
;
$ %
Console
 

.

 
Write
 
(
 

scoreFrame
 
)
 
;
 
Console
 

.

 
SetCursorPosition
 
(
 
x
 
,
 
++
  "
y
" #
)
# $
;
$ %
Console
 

.

 
Write
 
(
 
bottomFrame
 
)
 
;
 
}
 
catch
 
{
 
}
 
}
 
void
 
DrawLine
 
(
 
Point
 
start
 
,
 
Point
 !
end
" %
)
% &
{
 
int
 
x
 
=
 	
start

 
.
 
X
 
;
 
int
 
y
 
=
 	
start

 
.
 
Y
 
;
 
int
 
dx
 
=
	 

Math
 
.
 
Abs
 
(
 
start
 
.
 
X
 
-
 
end
 !
.
! "
X
" #
)
# $
;
$ %
int
 
dy
 
=
	 

-
 
Math
 
.
 
Abs
 
(
 
start
 
.
 
Y
 
-
 
end
 "
.
" #
Y
# $
)
$ %
;
% &
int
 
sx
 
=
	 

start
 
.
 
X
 
<
 
end
 
.
 
X
 
?
 
$num
 
:
  
-
! "
$num
" #
;
# $
int
 
sy
 
=
	 

start
 
.
 
Y
 
<
 
end
 
.
 
Y
 
?
 
$num
 
:
  
-
! "
$num
" #
;
# $
int
 
error
 
=
 
dx
 
+
 
dy
 
;
 
while
 
(
 	
true
	 
)
 
{
 
WriteToBuffer
 
(
 
x
 
,
 
y
 
,
 
$char
 
)
 
;
 
if
 
(
 
x
 
==
	 
end
 
.
 
X
 
&&
 
y
 
==
 
end
 
.
 
Y
 
)
  
{
 
return
 

;

 
}
 
float
 
error2
	 
=
 
error
 
*
 
$num
 
;
 
if
 
(
 
error2
 
>=
 
dy
 
)
 
{
   
if
¡¡ 
(
¡¡ 
x
¡¡ 	
==
¡¡
 
end
¡¡ 
.
¡¡ 
X
¡¡ 
)
¡¡ 
{
¢¢ 
break
££ 

;
££
 
}
¤¤ 
error
¦¦ 	
+=
¦¦
 
dy
¦¦ 
;
¦¦ 
x
§§ 
+=
§§ 
sx
§§	 
;
§§ 
}
¨¨ 
if
©© 
(
©© 
error2
©© 
<=
©© 
dx
©© 
)
©© 
{
ªª 
if
«« 
(
«« 
y
«« 	
==
««
 
end
«« 
.
«« 
Y
«« 
)
«« 
{
¬¬ 
break
­­ 

;
­­
 
}
®® 
error
°° 	
+=
°°
 
dx
°° 
;
°° 
y
±± 
+=
±± 
sy
±±	 
;
±± 
}
²² 
}
³³ 
}
´´ 
void
¶¶ 
DrawToScreen
¶¶ 
(
¶¶ 
char
¶¶ 
[
¶¶ 
,
¶¶ 
]
¶¶ 
array
¶¶  
)
¶¶  !
{
·· 
for
¸¸ 
(
¸¸ 
int
¸¸ 

y
¸¸ 
=
¸¸ 
$num
¸¸ 
;
¸¸ 
y
¸¸ 
<
¸¸ 
Sprites
¸¸ 
.
¸¸ 
ScreenHeight
¸¸ *
;
¸¸* +
y
¸¸, -
++
¸¸- /
)
¸¸/ 0
{
¹¹ 
for
ºº 
(
ºº 
int
ºº 
x
ºº 
=
ºº 
$num
ºº 
;
ºº 
x
ºº 
<
ºº 
Sprites
ºº 
.
ºº 
ScreenWidth
ºº *
;
ºº* +
x
ºº, -
++
ºº- /
)
ºº/ 0
{
»» 
if
¼¼ 
(
¼¼ 
array
¼¼ 
[
¼¼ 
x
¼¼ 
,
¼¼ 
y
¼¼ 
]
¼¼ 
is
¼¼ 
	NULL_CHAR
¼¼  
)
¼¼  !
{
½½ 
screenGraphic
¾¾ 
.
¾¾ 
Append
¾¾ 
(
¾¾ 
$char
¾¾ 
)
¾¾ 
;
¾¾ 
}
¿¿ 
else
ÀÀ 
{
ÁÁ 
screenGraphic
ÂÂ 
.
ÂÂ 
Append
ÂÂ 
(
ÂÂ 
array
ÂÂ 
[
ÂÂ  
x
ÂÂ  !
,
ÂÂ! "
y
ÂÂ# $
]
ÂÂ$ %
)
ÂÂ% &
;
ÂÂ& '
}
ÃÃ 
}
ÄÄ 
if
ÅÅ 
(
ÅÅ 
y
ÅÅ 
<
ÅÅ	 

Sprites
ÅÅ 
.
ÅÅ 
ScreenHeight
ÅÅ 
-
ÅÅ  !
$num
ÅÅ" #
)
ÅÅ# $
{
ÆÆ 
screenGraphic
ÇÇ 
.
ÇÇ 

AppendLine
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÈÈ 
}
ÉÉ 
Console
ÊÊ 	
.
ÊÊ	 

SetCursorPosition
ÊÊ
 
(
ÊÊ 
$num
ÊÊ 
,
ÊÊ 
$num
ÊÊ  
)
ÊÊ  !
;
ÊÊ! "
Console
ËË 	
.
ËË	 

Write
ËË
 
(
ËË 
screenGraphic
ËË 
)
ËË 
;
ËË 
screenBuffer
ÍÍ 
=
ÍÍ 
new
ÍÍ 
char
ÍÍ 
[
ÍÍ 
Sprites
ÍÍ !
.
ÍÍ! "
ScreenWidth
ÍÍ" -
,
ÍÍ- .
Sprites
ÍÍ/ 6
.
ÍÍ6 7
ScreenHeight
ÍÍ7 C
]
ÍÍC D
;
ÍÍD E
screenGraphic
ÎÎ 
.
ÎÎ 
Clear
ÎÎ 
(
ÎÎ 
)
ÎÎ 
;
ÎÎ 
}
ÏÏ 
void
ÑÑ 
WriteToBuffer
ÑÑ 
(
ÑÑ 
int
ÑÑ 
xPos
ÑÑ 
,
ÑÑ 
int
ÑÑ !
yPos
ÑÑ" &
,
ÑÑ& '
params
ÑÑ( .
char
ÑÑ/ 3
[
ÑÑ3 4
]
ÑÑ4 5

characters
ÑÑ6 @
)
ÑÑ@ A
{
ÒÒ 
int
ÓÓ 
x
ÓÓ 
=
ÓÓ 	
xPos
ÓÓ
 
;
ÓÓ 
int
ÔÔ 
y
ÔÔ 
=
ÔÔ 	
yPos
ÔÔ
 
;
ÔÔ 
for
ÕÕ 
(
ÕÕ 
int
ÕÕ 

i
ÕÕ 
=
ÕÕ 
$num
ÕÕ 
;
ÕÕ 
i
ÕÕ 
<
ÕÕ 

characters
ÕÕ  
.
ÕÕ  !
Length
ÕÕ! '
;
ÕÕ' (
i
ÕÕ) *
++
ÕÕ* ,
)
ÕÕ, -
{
ÖÖ 
if
×× 
(
×× 

characters
×× 
[
×× 
i
×× 
]
×× 
is
×× 
Sprites
×× 
.
××  
NEWLINE_CHAR
××  ,
)
××, -
{
ØØ 
y
ÙÙ 
++
ÙÙ 
;
ÙÙ 
x
ÚÚ 
=
ÚÚ 
xPos
ÚÚ 
;
ÚÚ 
}
ÛÛ 
else
ÜÜ 
if
ÜÜ 

(
ÜÜ 
x
ÜÜ 
<
ÜÜ 
$num
ÜÜ 
||
ÜÜ 
y
ÜÜ 
<
ÜÜ 
$num
ÜÜ 
||
ÜÜ 
x
ÜÜ 
>=
ÜÜ  "
screenBuffer
ÜÜ# /
.
ÜÜ/ 0
	GetLength
ÜÜ0 9
(
ÜÜ9 :
$num
ÜÜ: ;
)
ÜÜ; <
||
ÜÜ= ?
y
ÜÜ@ A
>=
ÜÜB D
screenBuffer
ÜÜE Q
.
ÜÜQ R
	GetLength
ÜÜR [
(
ÜÜ[ \
$num
ÜÜ\ ]
)
ÜÜ] ^
)
ÜÜ^ _
{
ÝÝ 
x
ÞÞ 
++
ÞÞ 
;
ÞÞ 
}
ßß 
else
àà 
{
áá 
screenBuffer
ââ 
[
ââ 
x
ââ 
,
ââ 
y
ââ 
]
ââ 
=
ââ 

characters
ââ #
[
ââ# $
i
ââ$ %
]
ââ% &
;
ââ& '
x
ãã 
++
ãã 
;
ãã 
}
ää 
}
åå 
}
ææ 
void
èè $
DrawToScreenWithColour
èè 
(
èè 
int
èè  
xPos
èè! %
,
èè% &
int
èè' *
yPos
èè+ /
,
èè/ 0
ConsoleColor
èè1 =
colour
èè> D
,
èèD E
params
èèF L
char
èèM Q
[
èèQ R
]
èèR S

characters
èèT ^
)
èè^ _
{
éé 
int
êê 
x
êê 
=
êê 	
xPos
êê
 
;
êê 
int
ëë 
y
ëë 
=
ëë 	
yPos
ëë
 
;
ëë 
Console
ìì 	
.
ìì	 

ForegroundColor
ìì
 
=
ìì 
colour
ìì "
;
ìì" #
for
îî 
(
îî 
int
îî 

i
îî 
=
îî 
$num
îî 
;
îî 
i
îî 
<
îî 

characters
îî  
.
îî  !
Length
îî! '
;
îî' (
i
îî) *
++
îî* ,
)
îî, -
{
ïï 
if
ðð 
(
ðð 

characters
ðð 
[
ðð 
i
ðð 
]
ðð 
==
ðð 
Sprites
ðð 
.
ðð  
NEWLINE_CHAR
ðð  ,
)
ðð, -
{
ññ 
y
òò 
++
òò 
;
òò 
x
óó 
=
óó 
xPos
óó 
;
óó 
continue
ôô 
;
ôô 
}
õõ 
if
÷÷ 
(
÷÷ 
char
÷÷ 
.
÷÷ 
IsWhiteSpace
÷÷ 
(
÷÷ 

characters
÷÷ #
[
÷÷# $
i
÷÷$ %
]
÷÷% &
)
÷÷& '
)
÷÷' (
{
øø 
x
ùù 
++
ùù 
;
ùù 
continue
úú 
;
úú 
}
ûû 
if
ýý 
(
ýý 
x
ýý 
>=
ýý	 
$num
ýý 
&&
ýý 
x
ýý 
<
ýý 
Sprites
ýý 
.
ýý 
ScreenWidth
ýý (
-
ýý) *
$num
ýý+ ,
&&
ýý- /
y
þþ 
>=
þþ 
$num
þþ	 

&&
þþ 
y
þþ 
<
þþ 
Sprites
þþ 
.
þþ 
ScreenHeight
þþ &
-
þþ' (
$num
þþ) *
)
þþ* +
{
ÿÿ 
if
 
(
 

characters
 
[
 
i
 
]
 
is
 

EMPTY_CHAR
 #
)
# $
{
 
try
 
{
 
Console
 
.
 
SetCursorPosition
 
(
  
x
  !
,
! "
y
# $
)
$ %
;
% &
Console
 
.
 
Write
 
(
 
$char
 
)
 
;
 
}
 
catch
 

{
 
}
 
}
 
else
 
{
 
try
 
{
 
Console
 
.
 
SetCursorPosition
 
(
  
x
  !
,
! "
y
# $
)
$ %
;
% &
Console
 
.
 
Write
 
(
 

characters
 
[
 
i
  
]
  !
)
! "
;
" #
}
 
catch
 

{
 
}
 
}
 
}
 
x
 
++
 
;
 
}
 
Console
 	
.
	 

ForegroundColor

 
=
 
ConsoleColor
 (
.
( )
White
) .
;
. /
}
 
} 
catch 
(
 
	Exception
 
e
 
)
 
{ 
	exception
 

=
 
e
 
;
 
throw
 
;
 
} 
finally 
{   
Console
¡¡ 
.
¡¡ 	
CursorVisible
¡¡	 
=
¡¡ 
true
¡¡ 
;
¡¡ 
Console
¢¢ 
.
¢¢ 	

ResetColor
¢¢	 
(
¢¢ 
)
¢¢ 
;
¢¢ 
Console
££ 
.
££ 	
Clear
££	 
(
££ 
)
££ 
;
££ 
Console
¤¤ 
.
¤¤ 	
	WriteLine
¤¤	 
(
¤¤ 
	exception
¤¤ 
?
¤¤ 
.
¤¤ 
ToString
¤¤ &
(
¤¤& '
)
¤¤' (
??
¤¤) +
$str
¤¤, C
)
¤¤C D
;
¤¤D E
}¥¥ 
struct§§ 
Point
§§ 
{¨¨ 
public
©© 
int
©© 
X
©© 
;
©© 
public
ªª 
int
ªª 
Y
ªª 
;
ªª 
public
¬¬ 
Point
¬¬ 
(
¬¬ 
int
¬¬ 
x
¬¬ 
,
¬¬ 
int
¬¬ 
y
¬¬ 
)
¬¬ 
{
­­ 
X
®® 
=
®® 
x
®® 
;
®® 
Y
¯¯ 
=
¯¯ 
y
¯¯ 
;
¯¯ 
}
°° 
public
²² 
static
²² 
Point
²² 
operator
²² 
+
²² 
(
²²  
Point
²²  %
a
²²& '
,
²²' (
Point
²²) .
b
²²/ 0
)
²²0 1
=>
²²2 4
new
²²5 8
(
²²8 9
a
²²9 :
.
²²: ;
X
²²; <
+
²²= >
b
²²? @
.
²²@ A
X
²²A B
,
²²B C
a
²²D E
.
²²E F
Y
²²F G
+
²²H I
b
²²J K
.
²²K L
Y
²²L M
)
²²M N
;
²²N O
}³³ 
classµµ 
Bird
µµ 

{¶¶ 
public
·· 
int
·· 
X
·· 
;
·· 
public
¸¸ 
int
¸¸ 
Y
¸¸ 
;
¸¸ 
public
¹¹ 
int
¹¹ 
Frame
¹¹ 
=
¹¹ 
$num
¹¹ 
;
¹¹ 
public
ºº 
int
ºº 
	Direction
ºº 
=
ºº 
$num
ºº 
;
ºº 
public
»» 
bool
»» 
IsDead
»» 
=
»» 
false
»» 
;
»» 
public
¼¼ 
Bird
¼¼ 
(
¼¼ 
int
¼¼ 
x
¼¼ 
,
¼¼ 
int
¼¼ 
y
¼¼ 
,
¼¼ 
int
¼¼ 
	direction
¼¼ (
)
¼¼( )
{
½½ 
X
¾¾ 
=
¾¾ 
x
¾¾ 
;
¾¾ 
Y
¿¿ 
=
¿¿ 
y
¿¿ 
;
¿¿ 
	Direction
ÀÀ 
=
ÀÀ 
	direction
ÀÀ 
;
ÀÀ 
}
ÁÁ 
public
ÂÂ 
void
ÂÂ 
IncrementFrame
ÂÂ 
(
ÂÂ 
)
ÂÂ 
{
ÃÃ 
if
ÄÄ 
(
ÄÄ 
IsDead
ÄÄ 
)
ÄÄ 
{
ÅÅ 
Frame
ÆÆ 
=
ÆÆ	 

$num
ÆÆ 
;
ÆÆ 
}
ÇÇ 
else
ÈÈ 
{
ÉÉ 
Frame
ÊÊ 
++
ÊÊ 

;
ÊÊ
 
Frame
ËË 
%=
ËË	 
$num
ËË 
;
ËË 
}
ÌÌ 
}
ÍÍ 
public
ÎÎ 
bool
ÎÎ 
Contains
ÎÎ 
(
ÎÎ 
int
ÎÎ 
x
ÎÎ 
,
ÎÎ 
int
ÎÎ  
y
ÎÎ! "
)
ÎÎ" #
{
ÏÏ 
return
ÐÐ 
(
ÑÑ 
x
ÑÑ 
>=
ÑÑ 
X
ÑÑ	 

)
ÑÑ
 
&&
ÑÑ 
(
ÒÒ 
y
ÒÒ 
>=
ÒÒ 
Y
ÒÒ	 

)
ÒÒ
 
&&
ÒÒ 
(
ÓÓ 
y
ÓÓ 
<
ÓÓ 
Y
ÓÓ 	
+
ÓÓ
 
Sprites
ÓÓ 
.
ÓÓ 
Bird
ÓÓ 
.
ÓÓ 
Height
ÓÓ 
)
ÓÓ  
&&
ÓÓ! #
(
ÔÔ 
x
ÔÔ 
<
ÔÔ 
X
ÔÔ 	
+
ÔÔ
 
Sprites
ÔÔ 
.
ÔÔ 
Bird
ÔÔ 
.
ÔÔ 
Width
ÔÔ 
)
ÔÔ 
;
ÔÔ  
}
ÕÕ 
}ÖÖ 
classØØ 
Bullet
ØØ 
{ÙÙ 
public
ÚÚ 
bool
ÚÚ 
OutOfBounds
ÚÚ 
=
ÚÚ 
false
ÚÚ  
;
ÚÚ  !
public
ÛÛ 
double
ÛÛ 
[
ÛÛ 
]
ÛÛ 
X
ÛÛ 
=
ÛÛ 
new
ÛÛ 
double
ÛÛ 
[
ÛÛ  
$num
ÛÛ  !
]
ÛÛ! "
;
ÛÛ" #
public
ÜÜ 
double
ÜÜ 
[
ÜÜ 
]
ÜÜ 
Y
ÜÜ 
=
ÜÜ 
new
ÜÜ 
double
ÜÜ 
[
ÜÜ  
$num
ÜÜ  !
]
ÜÜ! "
;
ÜÜ" #
private
ÞÞ 
readonly
ÞÞ	 
double
ÞÞ 
XOffset
ÞÞ  
;
ÞÞ  !
private
ßß 
readonly
ßß	 
double
ßß 
YOffset
ßß  
;
ßß  !
public
àà 
Bullet
àà 
(
àà 
Point
àà 
position
àà 
,
àà 
double
àà %
angle
àà& +
)
àà+ ,
{
áá 
for
ââ 
(
ââ 
int
ââ 

i
ââ 
=
ââ 
$num
ââ 
;
ââ 
i
ââ 
<
ââ 
$num
ââ 
;
ââ 
i
ââ 
++
ââ 
)
ââ 
{
ãã 
X
ää 
[
ää 
i
ää 
]
ää 
=
ää 	
position
ää
 
.
ää 
X
ää 
;
ää 
Y
åå 
[
åå 
i
åå 
]
åå 
=
åå 	
position
åå
 
.
åå 
Y
åå 
;
åå 
}
ææ 
XOffset
èè 	
=
èè
 
-
èè 
Math
èè 
.
èè 
Cos
èè 
(
èè 
angle
èè 
)
èè 
;
èè 
YOffset
éé 	
=
éé
 
-
éé 
Math
éé 
.
éé 
Sin
éé 
(
éé 
angle
éé 
)
éé 
;
éé 
}
êê 
public
ëë 
void
ëë 
UpdatePosition
ëë 
(
ëë 
)
ëë 
{
ìì 
X
íí 
[
íí 
$num
íí 
]
íí 
=
íí 
X
íí	 

[
íí
 
$num
íí 
]
íí 
;
íí 
Y
îî 
[
îî 
$num
îî 
]
îî 
=
îî 
Y
îî	 

[
îî
 
$num
îî 
]
îî 
;
îî 
X
ðð 
[
ðð 
$num
ðð 
]
ðð 
+=
ðð 	
XOffset
ðð
 
;
ðð 
Y
ññ 
[
ññ 
$num
ññ 
]
ññ 
+=
ññ 	
YOffset
ññ
 
;
ññ 
if
óó 
(
óó 
X
óó 
[
óó 
$num
óó 	
]
óó	 

<
óó 
$num
óó 
||
óó 
X
óó 
[
óó 
$num
óó 
]
óó 
>=
óó 
Console
óó !
.
óó! "
WindowWidth
óó" -
||
óó. 0
Y
ôô 
[
ôô 
$num
ôô 
]
ôô 
<
ôô 	
$num
ôô
 
||
ôô 
Y
ôô 
[
ôô 
$num
ôô 
]
ôô 
>=
ôô 
Console
ôô 
.
ôô 
WindowHeight
ôô +
)
ôô+ ,
{
õõ 
OutOfBounds
öö 
=
öö 
true
öö 
;
öö 
}
÷÷ 
}
øø 
}ùù 
staticûû 
class
ûû 
Sprites
ûû 
{üü 
public
ýý 
const
ýý 
char
ýý 
NEWLINE_CHAR
ýý 
=
ýý  !
$char
ýý" &
;
ýý& '
public
þþ 
static
þþ 
int
þþ 
ScreenWidth
þþ 
=
þþ  
Console
þþ! (
.
þþ( )
WindowWidth
þþ) 4
-
þþ5 6
$num
þþ7 8
;
þþ8 9
public
ÿÿ 
static
ÿÿ 
int
ÿÿ 
ScreenHeight
ÿÿ 
=
ÿÿ  !
Console
ÿÿ" )
.
ÿÿ) *
WindowHeight
ÿÿ* 6
;
ÿÿ6 7
public
 
static
 
int
 
SPRITE_MAXWIDTH
 "
=>
# %
ScreenWidth
& 1
-
2 3
$num
4 5
;
5 6
public
 
static
 
int
 
SPRITE_MAXHEIGHT
 #
=>
$ &
ScreenHeight
' 3
-
4 5
$num
6 7
;
7 8
private
 
static
	 
string
 
MiddleBorder
 #
=>
$ &
$str
' *
+
+ ,
new
- 0
string
1 7
(
7 8
$char
8 ;
,
; <
SPRITE_MAXWIDTH
= L
)
L M
+
N O
$str
P S
+
T U
NEWLINE_CHAR
V b
;
b c
public
 
static
 
char
 
[
 
]
 
Border
 
=>
 
(
 
$str
 
+
 
new
	 
string
 
(
 
$char
 
,
 
SPRITE_MAXWIDTH
 (
)
( )
+
* +
$str
, /
+
0 1
NEWLINE_CHAR
2 >
+
? @
string
 
.
 	
Concat
	 
(
 

Enumerable
 
.
 
Repeat
 !
(
! "
MiddleBorder
" .
,
. /
SPRITE_MAXHEIGHT
0 @
)
@ A
)
A B
+
C D
$str
 
+
 
new
 
string
 
(
 
$char
 
,
 
SPRITE_MAXWIDTH
 '
)
' (
+
) *
$str
+ .
)
. /
.
/ 0
ToCharArray
0 ;
(
; <
)
< =
;
= >
public
 
static
 
class
 

Enviroment
 
{
 
public
 
static
	 
char
 
[
 
]
 
Grass
 
=>
 
(
 
new
 
string
	 
(
 
$char
 
,
 
SPRITE_MAXWIDTH
 $
)
$ %
+
& '
NEWLINE_CHAR
( 4
+
5 6
new
 
string
 
(
 
$char
 
,
 
SPRITE_MAXWIDTH
 "
)
" #
+
$ %
NEWLINE_CHAR
& 2
+
3 4
new
 
string
 
(
 
$char
 
,
 
SPRITE_MAXWIDTH
 "
)
" #
)
# $
.
$ %
ToCharArray
% 0
(
0 1
)
1 2
;
2 3
public
 
static
	 
char
 
[
 
]
 
	Crosshair
  
=
! "
(
 
$str
 
+
 
NEWLINE_CHAR
 
+
 
$str
 
+
 
NEWLINE_CHAR
 
+
 
$str
 
+
 
NEWLINE_CHAR
 
+
 
$str
 
+
 
NEWLINE_CHAR
 
+
 
$str
 
)
 
.
 
ToCharArray
 
(
 
)
 
;
 
public
 
static
	 
int
 
CrosshairHeight
 #
=
$ %
$num
& '
;
' (
public
 
static
	 
int
 
CrosshairWidth
 "
=
# $
$num
% &
;
& '
public
 
static
	 
char
 
[
 
]
 
Bush
 
=
 
(
 
$str
 
+
 
NEWLINE_CHAR
 $
+
% &
$str
 
+
 
NEWLINE_CHAR
 "
+
# $
$str
 
+
 
NEWLINE_CHAR
 "
+
# $
$str
 
+
 
NEWLINE_CHAR
 "
+
# $
$str
   
+
   
NEWLINE_CHAR
   "
+
  # $
$str
¡¡ 
)
¡¡ 
.
¡¡ 
ToCharArray
¡¡  
(
¡¡  !
)
¡¡! "
;
¡¡" #
public
¢¢ 
static
¢¢	 
int
¢¢ 

BushHeight
¢¢ 
=
¢¢  
$num
¢¢! "
;
¢¢" #
public
££ 
static
££	 
int
££ 
	BushWidth
££ 
=
££ 
$num
££  "
;
££" #
public
¥¥ 
static
¥¥	 
char
¥¥ 
[
¥¥ 
]
¥¥ 
Tree
¥¥ 
=
¥¥ 
(
¦¦ 
$str
¦¦ 
+
¦¦ 
NEWLINE_CHAR
¦¦ +
+
¦¦, -
$str
§§ 
+
§§ 
NEWLINE_CHAR
§§ )
+
§§* +
$str
¨¨ 
+
¨¨ 
NEWLINE_CHAR
¨¨ )
+
¨¨* +
$str
©© 
+
©© 
NEWLINE_CHAR
©© )
+
©©* +
$str
ªª 
+
ªª 
NEWLINE_CHAR
ªª )
+
ªª* +
$str
«« 
+
«« 
NEWLINE_CHAR
«« )
+
««* +
$str
¬¬ 
+
¬¬ 
NEWLINE_CHAR
¬¬ )
+
¬¬* +
$str
­­ 
+
­­ 
NEWLINE_CHAR
­­ )
+
­­* +
$str
®® 
+
®® 
NEWLINE_CHAR
®® )
+
®®* +
$str
¯¯ 
+
¯¯ 
NEWLINE_CHAR
¯¯ )
+
¯¯* +
$str
°° 
+
°° 
NEWLINE_CHAR
°° )
+
°°* +
$str
±± 
+
±± 
NEWLINE_CHAR
±± )
+
±±* +
$str
²² 
+
²² 
NEWLINE_CHAR
²² )
+
²²* +
$str
³³ 
+
³³ 
NEWLINE_CHAR
³³ )
+
³³* +
$str
´´ 
+
´´ 
NEWLINE_CHAR
´´ )
+
´´* +
$str
µµ 
+
µµ 
NEWLINE_CHAR
µµ )
+
µµ* +
$str
¶¶ 
+
¶¶ 
NEWLINE_CHAR
¶¶ )
+
¶¶* +
$str
·· 
+
·· 
NEWLINE_CHAR
·· )
+
··* +
$str
¸¸ 
+
¸¸ 
NEWLINE_CHAR
¸¸ )
+
¸¸* +
$str
¹¹ 
)
¹¹ 
.
¹¹ 
ToCharArray
¹¹ '
(
¹¹' (
)
¹¹( )
;
¹¹) *
public
ºº 
static
ºº	 
int
ºº 

TreeHeight
ºº 
=
ºº  
$num
ºº! #
;
ºº# $
public
»» 
static
»»	 
int
»» 
	TreeWidth
»» 
=
»» 
$num
»»  "
;
»»" #
}
¼¼ 
public
¾¾ 
static
¾¾ 
class
¾¾ 
Bird
¾¾ 
{
¿¿ 
public
ÀÀ 
static
ÀÀ	 
char
ÀÀ 
[
ÀÀ 
]
ÀÀ 
[
ÀÀ 
]
ÀÀ 
LeftSprites
ÀÀ $
=
ÀÀ% &
{
ÁÁ 
(
ÁÁ 
$str
ÁÁ 
+
ÁÁ 
NEWLINE_CHAR
ÁÁ "
+
ÁÁ# $
$str
ÂÂ 
+
ÂÂ 
NEWLINE_CHAR
ÂÂ 
+
ÂÂ  !
$str
ÃÃ 
)
ÃÃ 
.
ÃÃ 
ToCharArray
ÃÃ 
(
ÃÃ 
)
ÃÃ 
,
ÃÃ  
(
ÅÅ 
$str
ÅÅ 
+
ÅÅ 
NEWLINE_CHAR
ÅÅ "
+
ÅÅ# $
$str
ÆÆ 
+
ÆÆ 
NEWLINE_CHAR
ÆÆ 
+
ÆÆ  !
$str
ÇÇ 
)
ÇÇ 
.
ÇÇ 
ToCharArray
ÇÇ 
(
ÇÇ 
)
ÇÇ 
,
ÇÇ  
(
ÉÉ 
$str
ÉÉ 
+
ÉÉ 
NEWLINE_CHAR
ÉÉ "
+
ÉÉ# $
$str
ÊÊ 
+
ÊÊ 
NEWLINE_CHAR
ÊÊ 
+
ÊÊ  !
$str
ËË 
)
ËË 
.
ËË 
ToCharArray
ËË 
(
ËË 
)
ËË 
,
ËË  
(
ÍÍ 
$str
ÍÍ 
+
ÍÍ 
NEWLINE_CHAR
ÍÍ "
+
ÍÍ# $
$str
ÎÎ 
+
ÎÎ 
NEWLINE_CHAR
ÎÎ 
+
ÎÎ  !
$str
ÏÏ 
)
ÏÏ 
.
ÏÏ 
ToCharArray
ÏÏ 
(
ÏÏ 
)
ÏÏ 
,
ÏÏ  
(
ÑÑ 
$str
ÑÑ 
+
ÑÑ 
NEWLINE_CHAR
ÑÑ !
+
ÑÑ" #
$str
ÒÒ 
+
ÒÒ 
NEWLINE_CHAR
ÒÒ 
+
ÒÒ  
$str
ÓÓ 
+
ÓÓ 
NEWLINE_CHAR
ÓÓ 
+
ÓÓ  
$str
ÔÔ 
+
ÔÔ 
NEWLINE_CHAR
ÔÔ 
+
ÔÔ  
$str
ÕÕ 
)
ÕÕ 
.
ÕÕ 
ToCharArray
ÕÕ 
(
ÕÕ 
)
ÕÕ 
}
ÖÖ 
;
ÖÖ 
public
×× 
static
××	 
char
×× 
[
×× 
]
×× 
[
×× 
]
×× 
RightSprites
×× %
=
××& '
{
ØØ 
(
ØØ 
$str
ØØ 
+
ØØ 
NEWLINE_CHAR
ØØ "
+
ØØ# $
$str
ÙÙ 
+
ÙÙ 
NEWLINE_CHAR
ÙÙ 
+
ÙÙ  !
$str
ÚÚ 
)
ÚÚ 
.
ÚÚ 
ToCharArray
ÚÚ 
(
ÚÚ 
)
ÚÚ 
,
ÚÚ  
(
ÜÜ 
$str
ÜÜ 
+
ÜÜ 
NEWLINE_CHAR
ÜÜ "
+
ÜÜ# $
$str
ÝÝ 
+
ÝÝ 
NEWLINE_CHAR
ÝÝ 
+
ÝÝ  !
$str
ÞÞ 
)
ÞÞ 
.
ÞÞ 
ToCharArray
ÞÞ 
(
ÞÞ 
)
ÞÞ 
,
ÞÞ  
(
àà 
$str
àà 
+
àà 
NEWLINE_CHAR
àà "
+
àà# $
$str
áá 
+
áá 
NEWLINE_CHAR
áá 
+
áá  !
$str
ââ 
)
ââ 
.
ââ 
ToCharArray
ââ 
(
ââ 
)
ââ 
,
ââ  
(
ää 
$str
ää 
+
ää 
NEWLINE_CHAR
ää "
+
ää# $
$str
åå 
+
åå 
NEWLINE_CHAR
åå 
+
åå  !
$str
ææ 
)
ææ 
.
ææ 
ToCharArray
ææ 
(
ææ 
)
ææ 
,
ææ  
(
èè 
$str
èè 
+
èè 
NEWLINE_CHAR
èè !
+
èè" #
$str
éé 
+
éé 
NEWLINE_CHAR
éé 
+
éé  
$str
êê 
+
êê 
NEWLINE_CHAR
êê 
+
êê  
$str
ëë 
+
ëë 
NEWLINE_CHAR
ëë 
+
ëë  
$str
ìì 
)
ìì 
.
ìì 
ToCharArray
ìì 
(
ìì 
)
ìì 
}
íí 
;
íí 
public
îî 
static
îî	 
int
îî 
Height
îî 
=
îî 
$num
îî 
;
îî 
public
ïï 
static
ïï	 
int
ïï 
Width
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 
}òò 